_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/_app"],{

/***/ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.ttf":
/*!**************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.ttf ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_AMS-Regular.797708391f0380251e6c50707bedb05c.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff":
/*!***************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_AMS-Regular.363668e44a7969113323efe6e86d816b.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff2":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff2 ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_AMS-Regular.8d510e21cd0beac177560b7d665afdfa.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.ttf":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.ttf ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Bold.9958c13ab75e09ef7565fb05d190dd3f.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff":
/*!********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Bold.dce5f22607251d1b44897f5cf5e9aa5a.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff2":
/*!*********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff2 ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Bold.0408dbd13e95ededc28fd66533e44c31.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.ttf":
/*!**********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.ttf ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Regular.f35e6d3248716f5337af6996bdd401e0.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff":
/*!***********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Regular.a0f19b9a9b7f73e668e152d1cf2721d7.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff2":
/*!************************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff2 ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Caligraphic-Regular.8cb339d8ad1bfecbf94e2ac450ddf96c.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.ttf":
/*!***************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.ttf ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Bold.6fc2b891d34108e11c7ca6f3f697f9f6.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Bold.581882ea14128df221a62b3e6cf28e39.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff2":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff2 ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Bold.e9f666bf488a9aeb0a80a4a46fe5eeb1.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.ttf":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.ttf ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Regular.37f0101fee072a7d943a1583cd95f715.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Regular.d3067917c6674766d6b8d721988d4de8.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff2":
/*!********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff2 ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Fraktur-Regular.8fafd26485760d61dfd46113da2a6852.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.ttf":
/*!************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Bold.ttf ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Bold.741b6dafa705c6d25b2594e8e3c6f7f3.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff":
/*!*************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Bold.b6b0f845cc25ad4efefc6e5a0fcdf231.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff2":
/*!**************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff2 ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Bold.6d0c6e980b5b6e6cb6df044e0aef923f.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.ttf":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.ttf ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-BoldItalic.bcbfc655023034502de467ec8fa2e2e8.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-BoldItalic.4a19c03b7da09e09cd830819927acf37.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff2":
/*!********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff2 ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-BoldItalic.bdf662cdf7575c7920b740add299fb1d.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.ttf":
/*!**************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Italic.ttf ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Italic.3b2e2994b30e81862423a00527630e93.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff":
/*!***************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Italic.4e63cc058631b3f5bd45790d361d2f87.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff2":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff2 ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Italic.67c15fa332a8a01a09da0b80d031852c.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.ttf":
/*!***************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Regular.ttf ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Regular.c13710b121e1ae9a9d2fec190ac9ce08.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Regular.de6fec34c611e644fb7e15734c250ed8.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff2":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff2 ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Main-Regular.f48ad2e5e85c50e34b208657e2f48ea7.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.ttf":
/*!**************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Math-Italic.ttf ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Math-Italic.75d88e3958e5834e8981f598089bb8fc.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff":
/*!***************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Math-Italic.809564019aa0fbd25388157a595b7048.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff2":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff2 ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Math-Italic.d0dd29d1dbbeef0a62ac6c5965ae137e.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.ttf":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.ttf ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Bold.a8255c4ff4c190f773dc8fe6b11dc39b.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Bold.57e9ba613f20e620836d9e1ef48019d0.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff2":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff2 ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Bold.cd968aa508af4af8bc30a5979b49a178.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.ttf":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.ttf ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Italic.d85162094f7dfe0c48489e244c5a96cf.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff":
/*!********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Italic.f08f621001261ee2d63e4610c1620875.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff2":
/*!*********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff2 ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Italic.1b8a4a77b10aa1eaa7c5d7a52e075602.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.ttf":
/*!********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.ttf ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Regular.ceab5b86b249bef821153cf6627124e7.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff":
/*!*********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Regular.93218b2f135e9b5506ef50ec48f064bf.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff2":
/*!**********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff2 ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_SansSerif-Regular.504e912b05772fbcbaef96959ddf534d.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.ttf":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Script-Regular.ttf ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Script-Regular.c73c90547b90ed7ecaae62782c88c03e.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Script-Regular.7e1d698712b8ffbb7d10b17a4c923d2e.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff2":
/*!*******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff2 ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Script-Regular.49ff882dc4f1dc2669ab1c0f815cc402.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.ttf":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.ttf ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size1-Regular.41fbe5099844aa68b8d5329882aca7ff.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size1-Regular.6dff523265817031489a32bc877650b2.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff2":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff2 ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size1-Regular.98c1c5eef4bcbd7ab21e592cfbbbe642.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.ttf":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.ttf ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size2-Regular.8f1e2ab9d9daad71f128b6845f760127.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size2-Regular.758926c65e4c5c8fcd08a0550ba7500c.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff2":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff2 ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size2-Regular.9f44db0b1cc25192ea09a0e8664f1f50.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.ttf":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.ttf ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size3-Regular.32abfb103fffbadcb25ffe5afd33eb1f.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size3-Regular.d27d182ea833ec6cc72ee0b7c3c19fbe.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff2":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff2 ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size3-Regular.943a01ec6dae1a54fa8b78e46e23c07c.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.ttf":
/*!****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.ttf ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size4-Regular.9ee4a1fd3c7a40cb7cd0be52ce8a7697.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff":
/*!*****************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size4-Regular.47db69ec5cc203442e1843524b01640a.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff2":
/*!******************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff2 ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Size4-Regular.31bd031914e07800da3abf6ca90fe2cb.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.ttf":
/*!*********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.ttf ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Typewriter-Regular.c5441b17caa5c7dada57804ed15f342f.ttf");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff":
/*!**********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Typewriter-Regular.a34b6f63ba2b93b49e4270c5c9b062b9.woff");

/***/ }),

/***/ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff2":
/*!***********************************************************************!*\
  !*** ../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff2 ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "static/media/KaTeX_Typewriter-Regular.862beea11f68ccfdf48d47abd44ae692.woff2");

/***/ }),

/***/ "../node_modules/katex/dist/katex.min.css":
/*!************************************************!*\
  !*** ../node_modules/katex/dist/katex.min.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-5-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-5-2!./katex.min.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../node_modules/katex/dist/katex.min.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-5-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-5-2!./katex.min.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../node_modules/katex/dist/katex.min.css",
      function () {
        content = __webpack_require__(/*! !../../next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-5-1!../../next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-5-2!./katex.min.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../node_modules/katex/dist/katex.min.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../node_modules/next/dist/build/polyfills/object-assign.js":
/*!******************************************************************!*\
  !*** ../node_modules/next/dist/build/polyfills/object-assign.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;
//# sourceMappingURL=object-assign.js.map

/***/ }),

/***/ "../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./":
/*!***********************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


    (window.__NEXT_P = window.__NEXT_P || []).push([
      "/_app",
      function () {
        return __webpack_require__(/*! private-next-pages/_app.tsx */ "./pages/_app.tsx");
      }
    ]);
  

/***/ }),

/***/ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks
// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
// Tests for existence of standard globals is to allow style-loader
// to operate correctly into non-standard environments
// @see https://github.com/webpack-contrib/style-loader/issues/177
memo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself
if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked
// due to cross-origin restrictions
styleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next
styleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=`${id} ${count}`;idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef
 true?__webpack_require__.nc:undefined;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(key=>{style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if
if(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?`@media ${obj.media} {${obj.css}}`:obj.css;// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+=`\n/*# sourceMappingURL=data:application/json;base64,${btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))} */`;}// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=()=>{removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=(list,options)=>{options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
if(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};
//# sourceMappingURL=injectStylesIntoStyleTag.js.map

/***/ }),

/***/ "../node_modules/next/dist/client/normalize-trailing-slash.js":
/*!********************************************************************!*\
  !*** ../node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0;
/**
* Removes the trailing slash of a path if there is one. Preserves the root path `/`.
*/

function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
}
/**
* Normalizes the trailing slash of a path according to the `trailingSlash` option
* in `next.config.js`.
*/


var normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/client/request-idle-callback.js":
/*!*****************************************************************!*\
  !*** ../node_modules/next/dist/client/request-idle-callback.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.cancelIdleCallback = exports.requestIdleCallback = void 0;

var requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback || function (cb) {
  var start = Date.now();
  return setTimeout(function () {
    cb({
      didTimeout: false,
      timeRemaining: function timeRemaining() {
        return Math.max(0, 50 - (Date.now() - start));
      }
    });
  }, 1);
};

exports.requestIdleCallback = requestIdleCallback;

var cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback || function (id) {
  return clearTimeout(id);
};

exports.cancelIdleCallback = cancelIdleCallback;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/client/route-loader.js":
/*!********************************************************!*\
  !*** ../node_modules/next/dist/client/route-loader.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/regenerator */ "../node_modules/next/node_modules/@babel/runtime/regenerator/index.js");

var _slicedToArray = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js");

var _asyncToGenerator = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator */ "../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.markAssetError = markAssetError;
exports.isAssetError = isAssetError;
exports.getClientBuildManifest = getClientBuildManifest;
exports["default"] = void 0;

var _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../next-server/lib/router/utils/get-asset-path-from-route */ "../node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js"));

var _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ "../node_modules/next/dist/client/request-idle-callback.js"); // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive
// considers as "Good" time-to-interactive. We must assume something went
// wrong beyond this point, and then fall-back to a full page transition to
// show the user something of value.


var MS_MAX_IDLE_DELAY = 3800;

function withFuture(key, map, generator) {
  var entry = map.get(key);

  if (entry) {
    if ('future' in entry) {
      return entry.future;
    }

    return Promise.resolve(entry);
  }

  var resolver;
  var prom = new Promise(function (resolve) {
    resolver = resolve;
  });
  map.set(key, entry = {
    resolve: resolver,
    future: prom
  });
  return generator ? // eslint-disable-next-line no-sequences
  generator().then(function (value) {
    return resolver(value), value;
  }) : prom;
}

function hasPrefetch(link) {
  try {
    link = document.createElement('link');
    return (// detect IE11 since it supports prefetch but isn't detected
      // with relList.support
      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')
    );
  } catch (_unused) {
    return false;
  }
}

var canPrefetch = hasPrefetch();

function prefetchViaDom(href, as, link) {
  return new Promise(function (res, rej) {
    if (document.querySelector("link[rel=\"prefetch\"][href^=\"".concat(href, "\"]"))) {
      return res();
    }

    link = document.createElement('link'); // The order of property assignment here is intentional:

    if (as) link.as = as;
    link.rel = "prefetch";
    link.crossOrigin = undefined;
    link.onload = res;
    link.onerror = rej; // `href` should always be last:

    link.href = href;
    document.head.appendChild(link);
  });
}

var ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR'); // TODO: unexport

function markAssetError(err) {
  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});
}

function isAssetError(err) {
  return err && ASSET_LOAD_ERROR in err;
}

function appendScript(src, script) {
  return new Promise(function (resolve, reject) {
    script = document.createElement('script'); // The order of property assignment here is intentional.
    // 1. Setup success/failure hooks in case the browser synchronously
    //    executes when `src` is set.

    script.onload = resolve;

    script.onerror = function () {
      return reject(markAssetError(new Error("Failed to load script: ".concat(src))));
    }; // 2. Configure the cross-origin attribute before setting `src` in case the
    //    browser begins to fetch.


    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child
    //    must be appended for fetching to start.

    script.src = src;
    document.body.appendChild(script);
  });
} // Resolve a promise that times out after given amount of milliseconds.


function resolvePromiseWithTimeout(p, ms, err) {
  return new Promise(function (resolve, reject) {
    var cancelled = false;
    p.then(function (r) {
      // Resolved, cancel the timeout
      cancelled = true;
      resolve(r);
    })["catch"](reject);
    (0, _requestIdleCallback.requestIdleCallback)(function () {
      return setTimeout(function () {
        if (!cancelled) {
          reject(err);
        }
      }, ms);
    });
  });
} // TODO: stop exporting or cache the failure
// It'd be best to stop exporting this. It's an implementation detail. We're
// only exporting it for backwards compatibilty with the `page-loader`.
// Only cache this response as a last resort if we cannot eliminate all other
// code branches that use the Build Manifest Callback and push them through
// the Route Loader interface.


function getClientBuildManifest() {
  if (self.__BUILD_MANIFEST) {
    return Promise.resolve(self.__BUILD_MANIFEST);
  }

  var onBuildManifest = new Promise(function (resolve) {
    // Mandatory because this is not concurrent safe:
    var cb = self.__BUILD_MANIFEST_CB;

    self.__BUILD_MANIFEST_CB = function () {
      resolve(self.__BUILD_MANIFEST);
      cb && cb();
    };
  });
  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));
}

function getFilesForRoute(assetPrefix, route) {
  if (true) {
    return Promise.resolve({
      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute["default"])(route, '.js'))],
      // Styles are handled by `style-loader` in development:
      css: []
    });
  }

  return getClientBuildManifest().then(function (manifest) {
    if (!(route in manifest)) {
      throw markAssetError(new Error("Failed to lookup route: ".concat(route)));
    }

    var allFiles = manifest[route].map(function (entry) {
      return assetPrefix + '/_next/' + encodeURI(entry);
    });
    return {
      scripts: allFiles.filter(function (v) {
        return v.endsWith('.js');
      }),
      css: allFiles.filter(function (v) {
        return v.endsWith('.css');
      })
    };
  });
}

function createRouteLoader(assetPrefix) {
  var entrypoints = new Map();
  var loadedScripts = new Map();
  var styleSheets = new Map();
  var routes = new Map();

  function maybeExecuteScript(src) {
    var prom = loadedScripts.get(src);

    if (prom) {
      return prom;
    } // Skip executing script if it's already in the DOM:


    if (document.querySelector("script[src^=\"".concat(src, "\"]"))) {
      return Promise.resolve();
    }

    loadedScripts.set(src, prom = appendScript(src));
    return prom;
  }

  function fetchStyleSheet(href) {
    var prom = styleSheets.get(href);

    if (prom) {
      return prom;
    }

    styleSheets.set(href, prom = fetch(href).then(function (res) {
      if (!res.ok) {
        throw new Error("Failed to load stylesheet: ".concat(href));
      }

      return res.text().then(function (text) {
        return {
          href: href,
          content: text
        };
      });
    })["catch"](function (err) {
      throw markAssetError(err);
    }));
    return prom;
  }

  return {
    whenEntrypoint: function whenEntrypoint(route) {
      return withFuture(route, entrypoints);
    },
    onEntrypoint: function onEntrypoint(route, execute) {
      Promise.resolve(execute).then(function (fn) {
        return fn();
      }).then(function (exports) {
        return {
          component: exports && exports["default"] || exports,
          exports: exports
        };
      }, function (err) {
        return {
          error: err
        };
      }).then(function (input) {
        var old = entrypoints.get(route);
        entrypoints.set(route, input);
        if (old && 'resolve' in old) old.resolve(input);
      });
    },
    loadRoute: function loadRoute(route) {
      var _this = this;

      return withFuture(route, routes, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var _yield$getFilesForRou, scripts, css, _yield$Promise$all, _yield$Promise$all2, styles, entrypoint, res;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return getFilesForRoute(assetPrefix, route);

              case 3:
                _yield$getFilesForRou = _context.sent;
                scripts = _yield$getFilesForRou.scripts;
                css = _yield$getFilesForRou.css;
                _context.next = 8;
                return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);

              case 8:
                _yield$Promise$all = _context.sent;
                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);
                styles = _yield$Promise$all2[1];
                _context.next = 13;
                return resolvePromiseWithTimeout(_this.whenEntrypoint(route), MS_MAX_IDLE_DELAY, markAssetError(new Error("Route did not complete loading: ".concat(route))));

              case 13:
                entrypoint = _context.sent;
                res = Object.assign({
                  styles: styles
                }, entrypoint);
                return _context.abrupt("return", 'error' in entrypoint ? entrypoint : res);

              case 18:
                _context.prev = 18;
                _context.t0 = _context["catch"](0);
                return _context.abrupt("return", {
                  error: _context.t0
                });

              case 21:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[0, 18]]);
      })));
    },
    prefetch: function prefetch(route) {
      var _this2 = this;

      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118
      // License: Apache 2.0
      var cn;

      if (cn = navigator.connection) {
        // Don't prefetch if using 2G or if Save-Data is enabled.
        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();
      }

      return getFilesForRoute(assetPrefix, route).then(function (output) {
        return Promise.all(canPrefetch ? output.scripts.map(function (script) {
          return prefetchViaDom(script, 'script');
        }) : []);
      }).then(function () {
        (0, _requestIdleCallback.requestIdleCallback)(function () {
          return _this2.loadRoute(route);
        });
      })["catch"]( // swallow prefetch errors
      function () {});
    }
  };
}

var _default = createRouteLoader;
exports["default"] = _default;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/client/router.js":
/*!**************************************************!*\
  !*** ../node_modules/next/dist/client/router.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _construct = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/construct */ "../node_modules/next/node_modules/@babel/runtime/helpers/construct.js");

var _s = $RefreshSig$();

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "../node_modules/react/index.js"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "../node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2["default"];
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "../node_modules/next/dist/next-server/lib/router-context.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "../node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter["default"];
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (true) {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady', 'isPreview', 'isLocaleDomain'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get: function get() {
    return _router2["default"].events;
  }
});
urlPropertyFields.forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get: function get() {
      var router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field].apply(router, arguments);
  };
});
routerEvents.forEach(function (event) {
  singletonRouter.ready(function () {
    _router2["default"].events.on(event, function () {
      var eventField = "on".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField].apply(_singletonRouter, arguments);
        } catch (err) {
          console.error("Error when running the Router event: ".concat(eventField));
          console.error("".concat(err.message, "\n").concat(err.stack));
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports["default"] = _default;

function useRouter() {
  _s();

  return _react["default"].useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


_s(useRouter, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = _construct(_router2["default"], args);
  singletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  var _iterator = _createForOfIteratorHelper(urlPropertyFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var property = _step.value;

      if (typeof _router[property] === 'object') {
        instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful

        continue;
      }

      instance[property] = _router[property];
    } // Events is a static property on the router, the router doesn't have to be initialized to use it

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  instance.events = _router2["default"].events;
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return _router[field].apply(_router, arguments);
    };
  });
  return instance;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/client/with-router.js":
/*!*******************************************************!*\
  !*** ../node_modules/next/dist/client/with-router.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "../node_modules/react/index.js"));

var _router = __webpack_require__(/*! ./router */ "../node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react["default"].createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(".concat(name, ")");
  }

  return WithRouterWrapper;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/api.js":
/*!************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/api.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports=function(){"use strict";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return"@media ".concat(t[2]," {").concat(r,"}")}return r}).join("")};t.i=function(n,r,o){if(typeof n==="string"){n=[[null,n,""]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]="".concat(r," and ").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||"";var o=n[3];if(!o){return r}if(t&&typeof btoa==="function"){var e=toComment(o);var a=o.sources.map(function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")});return[r].concat(a).concat([e]).join("\n")}return[r].join("\n")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t);return"/*# ".concat(r," */")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(762)}();
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../node_modules/katex/dist/katex.min.css":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-5-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-5-2!../node_modules/katex/dist/katex.min.css ***!
  \**************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../next/dist/compiled/css-loader/getUrl.js */ "../node_modules/next/dist/compiled/css-loader/getUrl.js");
/* harmony import */ var _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _fonts_KaTeX_AMS_Regular_woff2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fonts/KaTeX_AMS-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_AMS_Regular_woff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fonts/KaTeX_AMS-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.woff");
/* harmony import */ var _fonts_KaTeX_AMS_Regular_ttf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fonts/KaTeX_AMS-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_AMS-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Bold_woff2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Bold.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff2");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Bold_woff__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Bold.woff */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.woff");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Bold_ttf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Bold.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Bold.ttf");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Regular_woff2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Regular_woff__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Caligraphic_Regular_ttf__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./fonts/KaTeX_Caligraphic-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Caligraphic-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Fraktur_Bold_woff2__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Bold.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff2");
/* harmony import */ var _fonts_KaTeX_Fraktur_Bold_woff__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Bold.woff */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.woff");
/* harmony import */ var _fonts_KaTeX_Fraktur_Bold_ttf__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Bold.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Bold.ttf");
/* harmony import */ var _fonts_KaTeX_Fraktur_Regular_woff2__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Fraktur_Regular_woff__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Fraktur_Regular_ttf__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./fonts/KaTeX_Fraktur-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Fraktur-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Main_Bold_woff2__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Bold.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff2");
/* harmony import */ var _fonts_KaTeX_Main_Bold_woff__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Bold.woff */ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.woff");
/* harmony import */ var _fonts_KaTeX_Main_Bold_ttf__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Bold.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Main-Bold.ttf");
/* harmony import */ var _fonts_KaTeX_Main_BoldItalic_woff2__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./fonts/KaTeX_Main-BoldItalic.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff2");
/* harmony import */ var _fonts_KaTeX_Main_BoldItalic_woff__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./fonts/KaTeX_Main-BoldItalic.woff */ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.woff");
/* harmony import */ var _fonts_KaTeX_Main_BoldItalic_ttf__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./fonts/KaTeX_Main-BoldItalic.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Main-BoldItalic.ttf");
/* harmony import */ var _fonts_KaTeX_Main_Italic_woff2__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Italic.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff2");
/* harmony import */ var _fonts_KaTeX_Main_Italic_woff__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Italic.woff */ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.woff");
/* harmony import */ var _fonts_KaTeX_Main_Italic_ttf__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Italic.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Main-Italic.ttf");
/* harmony import */ var _fonts_KaTeX_Main_Regular_woff2__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Main_Regular_woff__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Main_Regular_ttf__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./fonts/KaTeX_Main-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Main-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Math_Italic_woff2__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./fonts/KaTeX_Math-Italic.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff2");
/* harmony import */ var _fonts_KaTeX_Math_Italic_woff__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./fonts/KaTeX_Math-Italic.woff */ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.woff");
/* harmony import */ var _fonts_KaTeX_Math_Italic_ttf__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./fonts/KaTeX_Math-Italic.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Math-Italic.ttf");
/* harmony import */ var _fonts_KaTeX_SansSerif_Bold_woff2__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Bold.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff2");
/* harmony import */ var _fonts_KaTeX_SansSerif_Bold_woff__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Bold.woff */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.woff");
/* harmony import */ var _fonts_KaTeX_SansSerif_Bold_ttf__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Bold.ttf */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Bold.ttf");
/* harmony import */ var _fonts_KaTeX_SansSerif_Italic_woff2__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Italic.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff2");
/* harmony import */ var _fonts_KaTeX_SansSerif_Italic_woff__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Italic.woff */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.woff");
/* harmony import */ var _fonts_KaTeX_SansSerif_Italic_ttf__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Italic.ttf */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Italic.ttf");
/* harmony import */ var _fonts_KaTeX_SansSerif_Regular_woff2__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_SansSerif_Regular_woff__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.woff");
/* harmony import */ var _fonts_KaTeX_SansSerif_Regular_ttf__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./fonts/KaTeX_SansSerif-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_SansSerif-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Script_Regular_woff2__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./fonts/KaTeX_Script-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Script_Regular_woff__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./fonts/KaTeX_Script-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Script_Regular_ttf__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./fonts/KaTeX_Script-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Script-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Size1_Regular_woff2__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./fonts/KaTeX_Size1-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Size1_Regular_woff__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./fonts/KaTeX_Size1-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Size1_Regular_ttf__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./fonts/KaTeX_Size1-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Size1-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Size2_Regular_woff2__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./fonts/KaTeX_Size2-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Size2_Regular_woff__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./fonts/KaTeX_Size2-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Size2_Regular_ttf__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./fonts/KaTeX_Size2-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Size2-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Size3_Regular_woff2__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./fonts/KaTeX_Size3-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Size3_Regular_woff__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./fonts/KaTeX_Size3-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Size3_Regular_ttf__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./fonts/KaTeX_Size3-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Size3-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Size4_Regular_woff2__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./fonts/KaTeX_Size4-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Size4_Regular_woff__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./fonts/KaTeX_Size4-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Size4_Regular_ttf__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./fonts/KaTeX_Size4-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Size4-Regular.ttf");
/* harmony import */ var _fonts_KaTeX_Typewriter_Regular_woff2__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./fonts/KaTeX_Typewriter-Regular.woff2 */ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff2");
/* harmony import */ var _fonts_KaTeX_Typewriter_Regular_woff__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./fonts/KaTeX_Typewriter-Regular.woff */ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.woff");
/* harmony import */ var _fonts_KaTeX_Typewriter_Regular_ttf__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./fonts/KaTeX_Typewriter-Regular.ttf */ "../node_modules/katex/dist/fonts/KaTeX_Typewriter-Regular.ttf");
// Imports



























































var ___CSS_LOADER_EXPORT___ = _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_AMS_Regular_woff2__WEBPACK_IMPORTED_MODULE_2__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_AMS_Regular_woff__WEBPACK_IMPORTED_MODULE_3__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_AMS_Regular_ttf__WEBPACK_IMPORTED_MODULE_4__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Bold_woff2__WEBPACK_IMPORTED_MODULE_5__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Bold_woff__WEBPACK_IMPORTED_MODULE_6__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Bold_ttf__WEBPACK_IMPORTED_MODULE_7__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Regular_woff2__WEBPACK_IMPORTED_MODULE_8__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Regular_woff__WEBPACK_IMPORTED_MODULE_9__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Caligraphic_Regular_ttf__WEBPACK_IMPORTED_MODULE_10__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Bold_woff2__WEBPACK_IMPORTED_MODULE_11__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Bold_woff__WEBPACK_IMPORTED_MODULE_12__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Bold_ttf__WEBPACK_IMPORTED_MODULE_13__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Regular_woff2__WEBPACK_IMPORTED_MODULE_14__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Regular_woff__WEBPACK_IMPORTED_MODULE_15__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Fraktur_Regular_ttf__WEBPACK_IMPORTED_MODULE_16__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Bold_woff2__WEBPACK_IMPORTED_MODULE_17__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Bold_woff__WEBPACK_IMPORTED_MODULE_18__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Bold_ttf__WEBPACK_IMPORTED_MODULE_19__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_BoldItalic_woff2__WEBPACK_IMPORTED_MODULE_20__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_19___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_BoldItalic_woff__WEBPACK_IMPORTED_MODULE_21__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_20___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_BoldItalic_ttf__WEBPACK_IMPORTED_MODULE_22__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_21___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Italic_woff2__WEBPACK_IMPORTED_MODULE_23__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_22___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Italic_woff__WEBPACK_IMPORTED_MODULE_24__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_23___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Italic_ttf__WEBPACK_IMPORTED_MODULE_25__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_24___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Regular_woff2__WEBPACK_IMPORTED_MODULE_26__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_25___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Regular_woff__WEBPACK_IMPORTED_MODULE_27__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_26___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Main_Regular_ttf__WEBPACK_IMPORTED_MODULE_28__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_27___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Math_Italic_woff2__WEBPACK_IMPORTED_MODULE_29__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_28___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Math_Italic_woff__WEBPACK_IMPORTED_MODULE_30__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_29___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Math_Italic_ttf__WEBPACK_IMPORTED_MODULE_31__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_30___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Bold_woff2__WEBPACK_IMPORTED_MODULE_32__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_31___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Bold_woff__WEBPACK_IMPORTED_MODULE_33__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_32___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Bold_ttf__WEBPACK_IMPORTED_MODULE_34__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_33___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Italic_woff2__WEBPACK_IMPORTED_MODULE_35__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_34___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Italic_woff__WEBPACK_IMPORTED_MODULE_36__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_35___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Italic_ttf__WEBPACK_IMPORTED_MODULE_37__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_36___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Regular_woff2__WEBPACK_IMPORTED_MODULE_38__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_37___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Regular_woff__WEBPACK_IMPORTED_MODULE_39__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_38___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_SansSerif_Regular_ttf__WEBPACK_IMPORTED_MODULE_40__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_39___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Script_Regular_woff2__WEBPACK_IMPORTED_MODULE_41__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_40___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Script_Regular_woff__WEBPACK_IMPORTED_MODULE_42__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_41___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Script_Regular_ttf__WEBPACK_IMPORTED_MODULE_43__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_42___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size1_Regular_woff2__WEBPACK_IMPORTED_MODULE_44__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_43___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size1_Regular_woff__WEBPACK_IMPORTED_MODULE_45__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_44___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size1_Regular_ttf__WEBPACK_IMPORTED_MODULE_46__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_45___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size2_Regular_woff2__WEBPACK_IMPORTED_MODULE_47__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_46___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size2_Regular_woff__WEBPACK_IMPORTED_MODULE_48__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_47___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size2_Regular_ttf__WEBPACK_IMPORTED_MODULE_49__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_48___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size3_Regular_woff2__WEBPACK_IMPORTED_MODULE_50__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_49___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size3_Regular_woff__WEBPACK_IMPORTED_MODULE_51__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_50___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size3_Regular_ttf__WEBPACK_IMPORTED_MODULE_52__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_51___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size4_Regular_woff2__WEBPACK_IMPORTED_MODULE_53__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_52___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size4_Regular_woff__WEBPACK_IMPORTED_MODULE_54__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_53___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Size4_Regular_ttf__WEBPACK_IMPORTED_MODULE_55__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_54___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Typewriter_Regular_woff2__WEBPACK_IMPORTED_MODULE_56__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_55___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Typewriter_Regular_woff__WEBPACK_IMPORTED_MODULE_57__["default"]);
var ___CSS_LOADER_URL_REPLACEMENT_56___ = _next_dist_compiled_css_loader_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_KaTeX_Typewriter_Regular_ttf__WEBPACK_IMPORTED_MODULE_58__["default"]);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "@font-face{font-family:KaTeX_AMS;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ") format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_16___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_17___ + ") format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_18___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_19___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_20___ + ") format(\"truetype\");font-weight:700;font-style:italic}@font-face{font-family:KaTeX_Main;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_21___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_22___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_23___ + ") format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_Main;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_24___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_25___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_26___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Math;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_27___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_28___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_29___ + ") format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_SansSerif;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_30___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_31___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_32___ + ") format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_SansSerif;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_33___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_34___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_35___ + ") format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_SansSerif;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_36___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_37___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_38___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Script;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_39___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_40___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_41___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size1;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_42___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_43___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_44___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size2;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_45___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_46___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_47___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size3;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_48___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_49___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_50___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size4;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_51___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_52___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_53___ + ") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Typewriter;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_54___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_55___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_56___ + ") format(\"truetype\");font-weight:400;font-style:normal}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:inline-block;text-align:left;text-align:initial}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;white-space:nowrap;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important}.katex .katex-html{display:inline-block}.katex .katex-mathml{position:absolute;clip:rect(1px,1px,1px,1px);padding:0;border:0;height:1px;width:1px;overflow:hidden}.katex .base{position:relative}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathit{font-family:KaTeX_Math;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-weight:700;font-style:italic}.katex .amsrm,.katex .mathbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr{font-family:KaTeX_Script}.katex .mathsf{font-family:KaTeX_SansSerif}.katex .mainit{font-family:KaTeX_Main;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;vertical-align:bottom;position:relative}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;vertical-align:bottom;font-size:1px;width:2px}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{display:inline-block;width:100%}.katex .mspace{display:inline-block}.katex .mspace.negativethinspace{margin-left:-.16667em}.katex .mspace.muspace{width:.055556em}.katex .mspace.thinspace{width:.16667em}.katex .mspace.negativemediumspace{margin-left:-.22222em}.katex .mspace.mediumspace{width:.22222em}.katex .mspace.thickspace{width:.27778em}.katex .mspace.sixmuspace{width:.333333em}.katex .mspace.eightmuspace{width:.444444em}.katex .mspace.enspace{width:.5em}.katex .mspace.twelvemuspace{width:.666667em}.katex .mspace.quad{width:1em}.katex .mspace.qquad{width:2em}.katex .clap,.katex .llap,.katex .rlap{width:0;position:relative}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{display:inline-block;border:0 solid;position:relative}.katex .overline .overline-line,.katex .underline .underline-line{display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer,.katex .sizing{display:inline-block}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{width:0;position:relative}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;margin:0 -.125em;width:.25em;overflow:hidden;position:relative}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{display:block;position:absolute;width:100%;fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1}.katex svg path{stroke:none}.katex .vertical-separator svg{width:.25em}.katex .stretchy{width:100%;display:block;position:relative;overflow:hidden}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{width:100%;position:relative;overflow:hidden}.katex .halfarrow-left{position:absolute;left:0;width:50.2%;overflow:hidden}.katex .halfarrow-right{position:absolute;right:0;width:50.2%;overflow:hidden}.katex .brace-left{position:absolute;left:0;width:25.1%;overflow:hidden}.katex .brace-center{position:absolute;left:25%;width:50%;overflow:hidden}.katex .brace-right{position:absolute;right:0;width:25.1%;overflow:hidden}.katex .x-arrow-pad{padding:0 .5em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox{-moz-box-sizing:border-box;box-sizing:border-box;border:.04em solid #000}.katex .fcolorbox{-moz-box-sizing:border-box;box-sizing:border-box;border:.04em solid}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap+.mbin,.katex .cancel-lap+.mord,.katex .cancel-lap+.msupsub,.katex .mbin+.cancel-lap,.katex .mord+.cancel-lap{margin-left:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}", "",{"version":3,"sources":["webpack://../node_modules/katex/dist/katex.min.css"],"names":[],"mappings":"AAAA,WAAW,qBAAqB,CAAC,6KAA2J,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,6BAA6B,CAAC,6KAA0K,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,6BAA6B,CAAC,6KAAmL,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,yBAAyB,CAAC,+KAA8J,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,yBAAyB,CAAC,gLAAuK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,sBAAsB,CAAC,gLAAqJ,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,sBAAsB,CAAC,gLAAuK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,sBAAsB,CAAC,gLAA2J,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,sBAAsB,CAAC,gLAA8J,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,sBAAsB,CAAC,gLAA2J,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,2BAA2B,CAAC,gLAAoK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,2BAA2B,CAAC,gLAA0K,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,2BAA2B,CAAC,gLAA6K,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,wBAAwB,CAAC,gLAAoK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,uBAAuB,CAAC,gLAAiK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,uBAAuB,CAAC,gLAAiK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,uBAAuB,CAAC,gLAAiK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,uBAAuB,CAAC,gLAAiK,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,4BAA4B,CAAC,gLAAgL,CAAC,eAAe,CAAC,iBAAiB,CAAC,eAAe,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC,sBAAsB,oBAAoB,CAAC,eAAiB,CAAjB,kBAAkB,CAAC,OAAO,mDAAmD,CAAC,eAAe,CAAC,kBAAkB,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,uCAAuC,CAAC,mBAAmB,oBAAoB,CAAC,qBAAqB,iBAAiB,CAAC,0BAA0B,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,iBAAiB,CAAC,2BAA2B,oBAAoB,CAAC,eAAe,eAAe,CAAC,eAAe,iBAAiB,CAAC,eAAe,sBAAsB,CAAC,eAAe,2BAA2B,CAAC,eAAe,4BAA4B,CAAC,eAAe,sBAAsB,CAAC,iBAAiB,CAAC,eAAe,iBAAiB,CAAC,eAAe,sBAAsB,CAAC,eAAe,CAAC,mBAAmB,sBAAsB,CAAC,eAAe,CAAC,iBAAiB,CAAC,6BAA6B,qBAAqB,CAAC,gBAAgB,6BAA6B,CAAC,iBAAiB,yBAAyB,CAAC,eAAe,4BAA4B,CAAC,gBAAgB,wBAAwB,CAAC,eAAe,2BAA2B,CAAC,eAAe,sBAAsB,CAAC,iBAAiB,CAAC,eAAe,sBAAsB,CAAC,iBAAiB,CAAC,gBAAgB,oBAAoB,CAAC,kBAAkB,CAAC,gBAAgB,iBAAiB,CAAC,cAAc,kBAAkB,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,mBAAmB,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,wBAAwB,oBAAoB,CAAC,2BAA2B,eAAe,CAAC,OAAO,CAAC,iBAAiB,iBAAiB,CAAC,gBAAgB,kBAAkB,CAAC,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,iBAAiB,CAAC,yBAAyB,oBAAoB,CAAC,UAAU,CAAC,eAAe,oBAAoB,CAAC,iCAAiC,qBAAqB,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,cAAc,CAAC,mCAAmC,qBAAqB,CAAC,2BAA2B,cAAc,CAAC,0BAA0B,cAAc,CAAC,0BAA0B,eAAe,CAAC,4BAA4B,eAAe,CAAC,uBAAuB,UAAU,CAAC,6BAA6B,eAAe,CAAC,oBAAoB,SAAS,CAAC,qBAAqB,SAAS,CAAC,uCAAuC,OAAO,CAAC,iBAAiB,CAAC,4DAA4D,iBAAiB,CAAC,sDAAsD,oBAAoB,CAAC,oBAAoB,OAAO,CAAC,wCAAwC,MAAM,CAAC,yBAAyB,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,oBAAoB,CAAC,cAAc,CAAC,iBAAiB,CAAC,kEAAkE,oBAAoB,CAAC,UAAU,CAAC,mBAAmB,uBAAuB,CAAC,yBAAyB,CAAC,wCAAwC,oBAAoB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,iBAAiB,CAAC,8EAA8E,iBAAiB,CAAC,8EAA8E,iBAAiB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,iBAAiB,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,8EAA8E,kBAAkB,CAAC,8EAA8E,gBAAgB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,sBAAsB,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,iBAAiB,CAAC,8EAA8E,iBAAiB,CAAC,8EAA8E,iBAAiB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,cAAc,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,4EAA4E,gBAAgB,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,gBAAgB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,4EAA4E,eAAe,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,oBAAoB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,qBAAqB,CAAC,4EAA4E,aAAa,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,sBAAsB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,gFAAgF,aAAa,CAAC,gFAAgF,sBAAsB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,8EAA8E,qBAAqB,CAAC,gFAAgF,qBAAqB,CAAC,gFAAgF,aAAa,CAAC,0BAA0B,uBAAuB,CAAC,0BAA0B,uBAAuB,CAAC,0BAA0B,uBAAuB,CAAC,0BAA0B,uBAAuB,CAAC,2CAA2C,uBAAuB,CAAC,2CAA2C,uBAAuB,CAAC,sBAAsB,oBAAoB,CAAC,WAAW,CAAC,sCAAsC,iBAAiB,CAAC,2BAA2B,uBAAuB,CAAC,2BAA2B,uBAAuB,CAAC,mDAAmD,iBAAiB,CAAC,4BAA4B,OAAO,CAAC,iBAAiB,CAAC,gBAAgB,aAAa,CAAC,mCAAmC,oBAAoB,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,CAAC,iBAAiB,CAAC,4BAA4B,oBAAoB,CAAC,qCAAqC,iBAAiB,CAAC,qCAAqC,eAAe,CAAC,qCAAqC,gBAAgB,CAAC,kBAAkB,eAAe,CAAC,WAAW,aAAa,CAAC,iBAAiB,CAAC,UAAU,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,cAAc,CAAC,cAAc,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,gBAAgB,WAAW,CAAC,+BAA+B,WAAW,CAAC,iBAAiB,UAAU,CAAC,aAAa,CAAC,iBAAiB,CAAC,eAAe,CAAC,+CAA+C,UAAU,CAAC,kBAAkB,UAAU,CAAC,iBAAiB,CAAC,eAAe,CAAC,uBAAuB,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,wBAAwB,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,mBAAmB,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,qBAAqB,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,oBAAoB,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,cAAc,CAAC,6CAA6C,iBAAiB,CAAC,eAAe,cAAc,CAAC,aAAa,0BAAqB,CAArB,qBAAqB,CAAC,uBAAuB,CAAC,kBAAkB,0BAAqB,CAArB,qBAAqB,CAAC,kBAAkB,CAAC,mBAAmB,cAAc,CAAC,gIAAgI,iBAAiB,CAAC,aAAa,yBAAyB,CAAC,yBAAyB","sourcesContent":["@font-face{font-family:KaTeX_AMS;src:url(fonts/KaTeX_AMS-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_AMS-Regular.woff) format(\"woff\"),url(fonts/KaTeX_AMS-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(fonts/KaTeX_Caligraphic-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Bold.ttf) format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Caligraphic;src:url(fonts/KaTeX_Caligraphic-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Caligraphic-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Caligraphic-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(fonts/KaTeX_Fraktur-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Bold.ttf) format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Fraktur;src:url(fonts/KaTeX_Fraktur-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Fraktur-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Fraktur-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(fonts/KaTeX_Main-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Bold.woff) format(\"woff\"),url(fonts/KaTeX_Main-Bold.ttf) format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_Main;src:url(fonts/KaTeX_Main-BoldItalic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-BoldItalic.woff) format(\"woff\"),url(fonts/KaTeX_Main-BoldItalic.ttf) format(\"truetype\");font-weight:700;font-style:italic}@font-face{font-family:KaTeX_Main;src:url(fonts/KaTeX_Main-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Main-Italic.ttf) format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_Main;src:url(fonts/KaTeX_Main-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Main-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Main-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Math;src:url(fonts/KaTeX_Math-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_Math-Italic.woff) format(\"woff\"),url(fonts/KaTeX_Math-Italic.ttf) format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_SansSerif;src:url(fonts/KaTeX_SansSerif-Bold.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Bold.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Bold.ttf) format(\"truetype\");font-weight:700;font-style:normal}@font-face{font-family:KaTeX_SansSerif;src:url(fonts/KaTeX_SansSerif-Italic.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Italic.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Italic.ttf) format(\"truetype\");font-weight:400;font-style:italic}@font-face{font-family:KaTeX_SansSerif;src:url(fonts/KaTeX_SansSerif-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_SansSerif-Regular.woff) format(\"woff\"),url(fonts/KaTeX_SansSerif-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Script;src:url(fonts/KaTeX_Script-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Script-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Script-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size1;src:url(fonts/KaTeX_Size1-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size1-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size1-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size2;src:url(fonts/KaTeX_Size2-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size2-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size2-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size3;src:url(fonts/KaTeX_Size3-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size3-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size3-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Size4;src:url(fonts/KaTeX_Size4-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Size4-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Size4-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:KaTeX_Typewriter;src:url(fonts/KaTeX_Typewriter-Regular.woff2) format(\"woff2\"),url(fonts/KaTeX_Typewriter-Regular.woff) format(\"woff\"),url(fonts/KaTeX_Typewriter-Regular.ttf) format(\"truetype\");font-weight:400;font-style:normal}.katex-display{display:block;margin:1em 0;text-align:center}.katex-display>.katex{display:inline-block;text-align:initial}.katex{font:normal 1.21em KaTeX_Main,Times New Roman,serif;line-height:1.2;white-space:nowrap;text-indent:0;text-rendering:auto}.katex *{-ms-high-contrast-adjust:none!important}.katex .katex-html{display:inline-block}.katex .katex-mathml{position:absolute;clip:rect(1px,1px,1px,1px);padding:0;border:0;height:1px;width:1px;overflow:hidden}.katex .base{position:relative}.katex .base,.katex .strut{display:inline-block}.katex .textbf{font-weight:700}.katex .textit{font-style:italic}.katex .textrm{font-family:KaTeX_Main}.katex .textsf{font-family:KaTeX_SansSerif}.katex .texttt{font-family:KaTeX_Typewriter}.katex .mathit{font-family:KaTeX_Math;font-style:italic}.katex .mathrm{font-style:normal}.katex .mathbf{font-family:KaTeX_Main;font-weight:700}.katex .boldsymbol{font-family:KaTeX_Math;font-weight:700;font-style:italic}.katex .amsrm,.katex .mathbb{font-family:KaTeX_AMS}.katex .mathcal{font-family:KaTeX_Caligraphic}.katex .mathfrak{font-family:KaTeX_Fraktur}.katex .mathtt{font-family:KaTeX_Typewriter}.katex .mathscr{font-family:KaTeX_Script}.katex .mathsf{font-family:KaTeX_SansSerif}.katex .mainit{font-family:KaTeX_Main;font-style:italic}.katex .mainrm{font-family:KaTeX_Main;font-style:normal}.katex .vlist-t{display:inline-table;table-layout:fixed}.katex .vlist-r{display:table-row}.katex .vlist{display:table-cell;vertical-align:bottom;position:relative}.katex .vlist>span{display:block;height:0;position:relative}.katex .vlist>span>span{display:inline-block}.katex .vlist>span>.pstrut{overflow:hidden;width:0}.katex .vlist-t2{margin-right:-2px}.katex .vlist-s{display:table-cell;vertical-align:bottom;font-size:1px;width:2px}.katex .msupsub{text-align:left}.katex .mfrac>span>span{text-align:center}.katex .mfrac .frac-line{display:inline-block;width:100%}.katex .mspace{display:inline-block}.katex .mspace.negativethinspace{margin-left:-.16667em}.katex .mspace.muspace{width:.055556em}.katex .mspace.thinspace{width:.16667em}.katex .mspace.negativemediumspace{margin-left:-.22222em}.katex .mspace.mediumspace{width:.22222em}.katex .mspace.thickspace{width:.27778em}.katex .mspace.sixmuspace{width:.333333em}.katex .mspace.eightmuspace{width:.444444em}.katex .mspace.enspace{width:.5em}.katex .mspace.twelvemuspace{width:.666667em}.katex .mspace.quad{width:1em}.katex .mspace.qquad{width:2em}.katex .clap,.katex .llap,.katex .rlap{width:0;position:relative}.katex .clap>.inner,.katex .llap>.inner,.katex .rlap>.inner{position:absolute}.katex .clap>.fix,.katex .llap>.fix,.katex .rlap>.fix{display:inline-block}.katex .llap>.inner{right:0}.katex .clap>.inner,.katex .rlap>.inner{left:0}.katex .clap>.inner>span{margin-left:-50%;margin-right:50%}.katex .rule{display:inline-block;border:0 solid;position:relative}.katex .overline .overline-line,.katex .underline .underline-line{display:inline-block;width:100%}.katex .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.katex .fontsize-ensurer,.katex .sizing{display:inline-block}.katex .fontsize-ensurer.reset-size1.size1,.katex .sizing.reset-size1.size1{font-size:1em}.katex .fontsize-ensurer.reset-size1.size2,.katex .sizing.reset-size1.size2{font-size:1.2em}.katex .fontsize-ensurer.reset-size1.size3,.katex .sizing.reset-size1.size3{font-size:1.4em}.katex .fontsize-ensurer.reset-size1.size4,.katex .sizing.reset-size1.size4{font-size:1.6em}.katex .fontsize-ensurer.reset-size1.size5,.katex .sizing.reset-size1.size5{font-size:1.8em}.katex .fontsize-ensurer.reset-size1.size6,.katex .sizing.reset-size1.size6{font-size:2em}.katex .fontsize-ensurer.reset-size1.size7,.katex .sizing.reset-size1.size7{font-size:2.4em}.katex .fontsize-ensurer.reset-size1.size8,.katex .sizing.reset-size1.size8{font-size:2.88em}.katex .fontsize-ensurer.reset-size1.size9,.katex .sizing.reset-size1.size9{font-size:3.456em}.katex .fontsize-ensurer.reset-size1.size10,.katex .sizing.reset-size1.size10{font-size:4.148em}.katex .fontsize-ensurer.reset-size1.size11,.katex .sizing.reset-size1.size11{font-size:4.976em}.katex .fontsize-ensurer.reset-size2.size1,.katex .sizing.reset-size2.size1{font-size:.83333333em}.katex .fontsize-ensurer.reset-size2.size2,.katex .sizing.reset-size2.size2{font-size:1em}.katex .fontsize-ensurer.reset-size2.size3,.katex .sizing.reset-size2.size3{font-size:1.16666667em}.katex .fontsize-ensurer.reset-size2.size4,.katex .sizing.reset-size2.size4{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size2.size5,.katex .sizing.reset-size2.size5{font-size:1.5em}.katex .fontsize-ensurer.reset-size2.size6,.katex .sizing.reset-size2.size6{font-size:1.66666667em}.katex .fontsize-ensurer.reset-size2.size7,.katex .sizing.reset-size2.size7{font-size:2em}.katex .fontsize-ensurer.reset-size2.size8,.katex .sizing.reset-size2.size8{font-size:2.4em}.katex .fontsize-ensurer.reset-size2.size9,.katex .sizing.reset-size2.size9{font-size:2.88em}.katex .fontsize-ensurer.reset-size2.size10,.katex .sizing.reset-size2.size10{font-size:3.45666667em}.katex .fontsize-ensurer.reset-size2.size11,.katex .sizing.reset-size2.size11{font-size:4.14666667em}.katex .fontsize-ensurer.reset-size3.size1,.katex .sizing.reset-size3.size1{font-size:.71428571em}.katex .fontsize-ensurer.reset-size3.size2,.katex .sizing.reset-size3.size2{font-size:.85714286em}.katex .fontsize-ensurer.reset-size3.size3,.katex .sizing.reset-size3.size3{font-size:1em}.katex .fontsize-ensurer.reset-size3.size4,.katex .sizing.reset-size3.size4{font-size:1.14285714em}.katex .fontsize-ensurer.reset-size3.size5,.katex .sizing.reset-size3.size5{font-size:1.28571429em}.katex .fontsize-ensurer.reset-size3.size6,.katex .sizing.reset-size3.size6{font-size:1.42857143em}.katex .fontsize-ensurer.reset-size3.size7,.katex .sizing.reset-size3.size7{font-size:1.71428571em}.katex .fontsize-ensurer.reset-size3.size8,.katex .sizing.reset-size3.size8{font-size:2.05714286em}.katex .fontsize-ensurer.reset-size3.size9,.katex .sizing.reset-size3.size9{font-size:2.46857143em}.katex .fontsize-ensurer.reset-size3.size10,.katex .sizing.reset-size3.size10{font-size:2.96285714em}.katex .fontsize-ensurer.reset-size3.size11,.katex .sizing.reset-size3.size11{font-size:3.55428571em}.katex .fontsize-ensurer.reset-size4.size1,.katex .sizing.reset-size4.size1{font-size:.625em}.katex .fontsize-ensurer.reset-size4.size2,.katex .sizing.reset-size4.size2{font-size:.75em}.katex .fontsize-ensurer.reset-size4.size3,.katex .sizing.reset-size4.size3{font-size:.875em}.katex .fontsize-ensurer.reset-size4.size4,.katex .sizing.reset-size4.size4{font-size:1em}.katex .fontsize-ensurer.reset-size4.size5,.katex .sizing.reset-size4.size5{font-size:1.125em}.katex .fontsize-ensurer.reset-size4.size6,.katex .sizing.reset-size4.size6{font-size:1.25em}.katex .fontsize-ensurer.reset-size4.size7,.katex .sizing.reset-size4.size7{font-size:1.5em}.katex .fontsize-ensurer.reset-size4.size8,.katex .sizing.reset-size4.size8{font-size:1.8em}.katex .fontsize-ensurer.reset-size4.size9,.katex .sizing.reset-size4.size9{font-size:2.16em}.katex .fontsize-ensurer.reset-size4.size10,.katex .sizing.reset-size4.size10{font-size:2.5925em}.katex .fontsize-ensurer.reset-size4.size11,.katex .sizing.reset-size4.size11{font-size:3.11em}.katex .fontsize-ensurer.reset-size5.size1,.katex .sizing.reset-size5.size1{font-size:.55555556em}.katex .fontsize-ensurer.reset-size5.size2,.katex .sizing.reset-size5.size2{font-size:.66666667em}.katex .fontsize-ensurer.reset-size5.size3,.katex .sizing.reset-size5.size3{font-size:.77777778em}.katex .fontsize-ensurer.reset-size5.size4,.katex .sizing.reset-size5.size4{font-size:.88888889em}.katex .fontsize-ensurer.reset-size5.size5,.katex .sizing.reset-size5.size5{font-size:1em}.katex .fontsize-ensurer.reset-size5.size6,.katex .sizing.reset-size5.size6{font-size:1.11111111em}.katex .fontsize-ensurer.reset-size5.size7,.katex .sizing.reset-size5.size7{font-size:1.33333333em}.katex .fontsize-ensurer.reset-size5.size8,.katex .sizing.reset-size5.size8{font-size:1.6em}.katex .fontsize-ensurer.reset-size5.size9,.katex .sizing.reset-size5.size9{font-size:1.92em}.katex .fontsize-ensurer.reset-size5.size10,.katex .sizing.reset-size5.size10{font-size:2.30444444em}.katex .fontsize-ensurer.reset-size5.size11,.katex .sizing.reset-size5.size11{font-size:2.76444444em}.katex .fontsize-ensurer.reset-size6.size1,.katex .sizing.reset-size6.size1{font-size:.5em}.katex .fontsize-ensurer.reset-size6.size2,.katex .sizing.reset-size6.size2{font-size:.6em}.katex .fontsize-ensurer.reset-size6.size3,.katex .sizing.reset-size6.size3{font-size:.7em}.katex .fontsize-ensurer.reset-size6.size4,.katex .sizing.reset-size6.size4{font-size:.8em}.katex .fontsize-ensurer.reset-size6.size5,.katex .sizing.reset-size6.size5{font-size:.9em}.katex .fontsize-ensurer.reset-size6.size6,.katex .sizing.reset-size6.size6{font-size:1em}.katex .fontsize-ensurer.reset-size6.size7,.katex .sizing.reset-size6.size7{font-size:1.2em}.katex .fontsize-ensurer.reset-size6.size8,.katex .sizing.reset-size6.size8{font-size:1.44em}.katex .fontsize-ensurer.reset-size6.size9,.katex .sizing.reset-size6.size9{font-size:1.728em}.katex .fontsize-ensurer.reset-size6.size10,.katex .sizing.reset-size6.size10{font-size:2.074em}.katex .fontsize-ensurer.reset-size6.size11,.katex .sizing.reset-size6.size11{font-size:2.488em}.katex .fontsize-ensurer.reset-size7.size1,.katex .sizing.reset-size7.size1{font-size:.41666667em}.katex .fontsize-ensurer.reset-size7.size2,.katex .sizing.reset-size7.size2{font-size:.5em}.katex .fontsize-ensurer.reset-size7.size3,.katex .sizing.reset-size7.size3{font-size:.58333333em}.katex .fontsize-ensurer.reset-size7.size4,.katex .sizing.reset-size7.size4{font-size:.66666667em}.katex .fontsize-ensurer.reset-size7.size5,.katex .sizing.reset-size7.size5{font-size:.75em}.katex .fontsize-ensurer.reset-size7.size6,.katex .sizing.reset-size7.size6{font-size:.83333333em}.katex .fontsize-ensurer.reset-size7.size7,.katex .sizing.reset-size7.size7{font-size:1em}.katex .fontsize-ensurer.reset-size7.size8,.katex .sizing.reset-size7.size8{font-size:1.2em}.katex .fontsize-ensurer.reset-size7.size9,.katex .sizing.reset-size7.size9{font-size:1.44em}.katex .fontsize-ensurer.reset-size7.size10,.katex .sizing.reset-size7.size10{font-size:1.72833333em}.katex .fontsize-ensurer.reset-size7.size11,.katex .sizing.reset-size7.size11{font-size:2.07333333em}.katex .fontsize-ensurer.reset-size8.size1,.katex .sizing.reset-size8.size1{font-size:.34722222em}.katex .fontsize-ensurer.reset-size8.size2,.katex .sizing.reset-size8.size2{font-size:.41666667em}.katex .fontsize-ensurer.reset-size8.size3,.katex .sizing.reset-size8.size3{font-size:.48611111em}.katex .fontsize-ensurer.reset-size8.size4,.katex .sizing.reset-size8.size4{font-size:.55555556em}.katex .fontsize-ensurer.reset-size8.size5,.katex .sizing.reset-size8.size5{font-size:.625em}.katex .fontsize-ensurer.reset-size8.size6,.katex .sizing.reset-size8.size6{font-size:.69444444em}.katex .fontsize-ensurer.reset-size8.size7,.katex .sizing.reset-size8.size7{font-size:.83333333em}.katex .fontsize-ensurer.reset-size8.size8,.katex .sizing.reset-size8.size8{font-size:1em}.katex .fontsize-ensurer.reset-size8.size9,.katex .sizing.reset-size8.size9{font-size:1.2em}.katex .fontsize-ensurer.reset-size8.size10,.katex .sizing.reset-size8.size10{font-size:1.44027778em}.katex .fontsize-ensurer.reset-size8.size11,.katex .sizing.reset-size8.size11{font-size:1.72777778em}.katex .fontsize-ensurer.reset-size9.size1,.katex .sizing.reset-size9.size1{font-size:.28935185em}.katex .fontsize-ensurer.reset-size9.size2,.katex .sizing.reset-size9.size2{font-size:.34722222em}.katex .fontsize-ensurer.reset-size9.size3,.katex .sizing.reset-size9.size3{font-size:.40509259em}.katex .fontsize-ensurer.reset-size9.size4,.katex .sizing.reset-size9.size4{font-size:.46296296em}.katex .fontsize-ensurer.reset-size9.size5,.katex .sizing.reset-size9.size5{font-size:.52083333em}.katex .fontsize-ensurer.reset-size9.size6,.katex .sizing.reset-size9.size6{font-size:.5787037em}.katex .fontsize-ensurer.reset-size9.size7,.katex .sizing.reset-size9.size7{font-size:.69444444em}.katex .fontsize-ensurer.reset-size9.size8,.katex .sizing.reset-size9.size8{font-size:.83333333em}.katex .fontsize-ensurer.reset-size9.size9,.katex .sizing.reset-size9.size9{font-size:1em}.katex .fontsize-ensurer.reset-size9.size10,.katex .sizing.reset-size9.size10{font-size:1.20023148em}.katex .fontsize-ensurer.reset-size9.size11,.katex .sizing.reset-size9.size11{font-size:1.43981481em}.katex .fontsize-ensurer.reset-size10.size1,.katex .sizing.reset-size10.size1{font-size:.24108004em}.katex .fontsize-ensurer.reset-size10.size2,.katex .sizing.reset-size10.size2{font-size:.28929605em}.katex .fontsize-ensurer.reset-size10.size3,.katex .sizing.reset-size10.size3{font-size:.33751205em}.katex .fontsize-ensurer.reset-size10.size4,.katex .sizing.reset-size10.size4{font-size:.38572806em}.katex .fontsize-ensurer.reset-size10.size5,.katex .sizing.reset-size10.size5{font-size:.43394407em}.katex .fontsize-ensurer.reset-size10.size6,.katex .sizing.reset-size10.size6{font-size:.48216008em}.katex .fontsize-ensurer.reset-size10.size7,.katex .sizing.reset-size10.size7{font-size:.57859209em}.katex .fontsize-ensurer.reset-size10.size8,.katex .sizing.reset-size10.size8{font-size:.69431051em}.katex .fontsize-ensurer.reset-size10.size9,.katex .sizing.reset-size10.size9{font-size:.83317261em}.katex .fontsize-ensurer.reset-size10.size10,.katex .sizing.reset-size10.size10{font-size:1em}.katex .fontsize-ensurer.reset-size10.size11,.katex .sizing.reset-size10.size11{font-size:1.19961427em}.katex .fontsize-ensurer.reset-size11.size1,.katex .sizing.reset-size11.size1{font-size:.20096463em}.katex .fontsize-ensurer.reset-size11.size2,.katex .sizing.reset-size11.size2{font-size:.24115756em}.katex .fontsize-ensurer.reset-size11.size3,.katex .sizing.reset-size11.size3{font-size:.28135048em}.katex .fontsize-ensurer.reset-size11.size4,.katex .sizing.reset-size11.size4{font-size:.32154341em}.katex .fontsize-ensurer.reset-size11.size5,.katex .sizing.reset-size11.size5{font-size:.36173633em}.katex .fontsize-ensurer.reset-size11.size6,.katex .sizing.reset-size11.size6{font-size:.40192926em}.katex .fontsize-ensurer.reset-size11.size7,.katex .sizing.reset-size11.size7{font-size:.48231511em}.katex .fontsize-ensurer.reset-size11.size8,.katex .sizing.reset-size11.size8{font-size:.57877814em}.katex .fontsize-ensurer.reset-size11.size9,.katex .sizing.reset-size11.size9{font-size:.69453376em}.katex .fontsize-ensurer.reset-size11.size10,.katex .sizing.reset-size11.size10{font-size:.83360129em}.katex .fontsize-ensurer.reset-size11.size11,.katex .sizing.reset-size11.size11{font-size:1em}.katex .delimsizing.size1{font-family:KaTeX_Size1}.katex .delimsizing.size2{font-family:KaTeX_Size2}.katex .delimsizing.size3{font-family:KaTeX_Size3}.katex .delimsizing.size4{font-family:KaTeX_Size4}.katex .delimsizing.mult .delim-size1>span{font-family:KaTeX_Size1}.katex .delimsizing.mult .delim-size4>span{font-family:KaTeX_Size4}.katex .nulldelimiter{display:inline-block;width:.12em}.katex .delimcenter,.katex .op-symbol{position:relative}.katex .op-symbol.small-op{font-family:KaTeX_Size1}.katex .op-symbol.large-op{font-family:KaTeX_Size2}.katex .accent>.vlist-t,.katex .op-limits>.vlist-t{text-align:center}.katex .accent .accent-body{width:0;position:relative}.katex .overlay{display:block}.katex .mtable .vertical-separator{display:inline-block;margin:0 -.125em;width:.25em;overflow:hidden;position:relative}.katex .mtable .arraycolsep{display:inline-block}.katex .mtable .col-align-c>.vlist-t{text-align:center}.katex .mtable .col-align-l>.vlist-t{text-align:left}.katex .mtable .col-align-r>.vlist-t{text-align:right}.katex .svg-align{text-align:left}.katex svg{display:block;position:absolute;width:100%;fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1}.katex svg path{stroke:none}.katex .vertical-separator svg{width:.25em}.katex .stretchy{width:100%;display:block;position:relative;overflow:hidden}.katex .stretchy:after,.katex .stretchy:before{content:\"\"}.katex .hide-tail{width:100%;position:relative;overflow:hidden}.katex .halfarrow-left{position:absolute;left:0;width:50.2%;overflow:hidden}.katex .halfarrow-right{position:absolute;right:0;width:50.2%;overflow:hidden}.katex .brace-left{position:absolute;left:0;width:25.1%;overflow:hidden}.katex .brace-center{position:absolute;left:25%;width:50%;overflow:hidden}.katex .brace-right{position:absolute;right:0;width:25.1%;overflow:hidden}.katex .x-arrow-pad{padding:0 .5em}.katex .mover,.katex .munder,.katex .x-arrow{text-align:center}.katex .boxpad{padding:0 .3em}.katex .fbox{box-sizing:border-box;border:.04em solid #000}.katex .fcolorbox{box-sizing:border-box;border:.04em solid}.katex .cancel-pad{padding:0 .2em}.katex .cancel-lap+.mbin,.katex .cancel-lap+.mord,.katex .cancel-lap+.msupsub,.katex .mbin+.cancel-lap,.katex .mord+.cancel-lap{margin-left:-.2em}.katex .sout{border-bottom-style:solid;border-bottom-width:.08em}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/editor/lib/index.css":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/editor/lib/index.css ***!
  \******************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ":root {\r\n    --black: #000000;\r\n    --white: #ffffff;\r\n    --transparent: rgba(0, 0, 0, 0);\r\n    --fullBlack: rgba(0, 0, 0, 1);\r\n    --darkBlack: rgba(0, 0, 0, 0.87);\r\n    --lightBlack: rgba(0, 0, 0, 0.54);\r\n    --minBlack: rgba(0, 0, 0, 0.26);\r\n    --faintBlack: rgba(0, 0, 0, 0.12);\r\n    --fullWhite: rgba(255, 255, 255, 1);\r\n    --darkWhite: rgba(255, 255, 255, 0.87);\r\n    --lightWhite: rgba(255, 255, 255, 0.54);\r\n    --minWhite: rgba(255, 255, 255, 0.26);\r\n    --faintWhite: rgba(255, 255, 255, 0.12);\r\n    --grey300: #e0e0e0;\r\n    --grey900: #212121;\r\n}\r\n/* based on: https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css */\r\n:root {\r\n  --gutter-width: 0rem;\r\n  --outer-margin: 0rem;\r\n  --gutter-compensation: -webkit-calc((var(--gutter-width) * 0.5) * -1);\r\n  --gutter-compensation: calc((var(--gutter-width) * 0.5) * -1);\r\n  --half-gutter-width: -webkit-calc((var(--gutter-width) * 0.5));\r\n  --half-gutter-width: calc((var(--gutter-width) * 0.5));\r\n  --xs-min: 30;\r\n  --sm-min: 48;\r\n  --md-min: 64;\r\n  --lg-min: 75;\r\n  --screen-xs-min: var(--xs-min) em;\r\n  --screen-sm-min: var(--sm-min) em;\r\n  --screen-md-min: var(--md-min) em;\r\n  --screen-lg-min: var(--lg-min) em;\r\n  --container-sm: -webkit-calc(var(--sm-min) + var(--gutter-width));\r\n  --container-sm: calc(var(--sm-min) + var(--gutter-width));\r\n  --container-md: -webkit-calc(var(--md-min) + var(--gutter-width));\r\n  --container-md: calc(var(--md-min) + var(--gutter-width));\r\n  --container-lg: -webkit-calc(var(--lg-min) + var(--gutter-width));\r\n  --container-lg: calc(var(--lg-min) + var(--gutter-width));\r\n}\r\n.react-page-editable {\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: 0rem;\r\n  padding-right: var(--outer-margin, 2rem);\r\n  padding-left: 0rem;\r\n  padding-left: var(--outer-margin, 2rem);\r\n}\r\n.react-page-row {\r\n  -moz-box-sizing: border-box;\r\n       box-sizing: border-box;\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: flex;\r\n  -webkit-flex: 1 1;\r\n     -moz-box-flex: 1;\r\n          flex: 1 1;\r\n  -webkit-flex-direction: row;\r\n     -moz-box-orient: horizontal;\r\n     -moz-box-direction: normal;\r\n          flex-direction: row;\r\n  -webkit-flex-wrap: wrap;\r\n          flex-wrap: wrap;\r\n  margin-right: -webkit-calc((0rem * 0.5) * -1);\r\n  margin-right: calc((0rem * 0.5) * -1);\r\n  margin-right: var(--gutter-compensation, -0.5rem);\r\n  margin-left: -webkit-calc((0rem * 0.5) * -1);\r\n  margin-left: calc((0rem * 0.5) * -1);\r\n  margin-left: var(--gutter-compensation, -0.5rem);\r\n  position: relative;\r\n}\r\n.react-page-cell-xs,\r\n.react-page-cell-xs-1,\r\n.react-page-cell-xs-2,\r\n.react-page-cell-xs-3,\r\n.react-page-cell-xs-4,\r\n.react-page-cell-xs-5,\r\n.react-page-cell-xs-6,\r\n.react-page-cell-xs-7,\r\n.react-page-cell-xs-8,\r\n.react-page-cell-xs-9,\r\n.react-page-cell-xs-10,\r\n.react-page-cell-xs-11,\r\n.react-page-cell-xs-12,\r\n.react-page-cell-xs-offset-0,\r\n.react-page-cell-xs-offset-1,\r\n.react-page-cell-xs-offset-2,\r\n.react-page-cell-xs-offset-3,\r\n.react-page-cell-xs-offset-4,\r\n.react-page-cell-xs-offset-5,\r\n.react-page-cell-xs-offset-6,\r\n.react-page-cell-xs-offset-7,\r\n.react-page-cell-xs-offset-8,\r\n.react-page-cell-xs-offset-9,\r\n.react-page-cell-xs-offset-10,\r\n.react-page-cell-xs-offset-11,\r\n.react-page-cell-xs-offset-12 {\r\n  -moz-box-sizing: border-box;\r\n       box-sizing: border-box;\r\n  -webkit-flex: 0 0 auto;\r\n     -moz-box-flex: 0;\r\n          flex: 0 0 auto;\r\n  padding-right: -webkit-calc((0rem * 0.5));\r\n  padding-right: calc((0rem * 0.5));\r\n  padding-right: var(--half-gutter-width, 0.5rem);\r\n  padding-left: -webkit-calc((0rem * 0.5));\r\n  padding-left: calc((0rem * 0.5));\r\n  padding-left: var(--half-gutter-width, 0.5rem);\r\n  min-width: 0;\r\n}\r\n.react-page-cell-xs {\r\n  -webkit-flex-grow: 1;\r\n     -moz-box-flex: 1;\r\n          flex-grow: 1;\r\n  -webkit-flex-basis: 0;\r\n          flex-basis: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n.react-page-cell-xs-1 {\r\n  -webkit-flex-basis: 8.33333333%;\r\n          flex-basis: 8.33333333%;\r\n  width: 8.33333333%;\r\n}\r\n.react-page-cell-xs-2 {\r\n  -webkit-flex-basis: 16.66666667%;\r\n          flex-basis: 16.66666667%;\r\n  width: 16.66666667%;\r\n}\r\n.react-page-cell-xs-3 {\r\n  -webkit-flex-basis: 25%;\r\n          flex-basis: 25%;\r\n  width: 25%;\r\n  min-width: 25%;\r\n}\r\n.react-page-cell-xs-4 {\r\n  -webkit-flex-basis: 33.33333333%;\r\n          flex-basis: 33.33333333%;\r\n  width: 33.33333333%;\r\n}\r\n.react-page-cell-xs-5 {\r\n  -webkit-flex-basis: 41.66666667%;\r\n          flex-basis: 41.66666667%;\r\n  width: 41.66666667%;\r\n}\r\n.react-page-cell-xs-6 {\r\n  -webkit-flex-basis: 50%;\r\n          flex-basis: 50%;\r\n  width: 50%;\r\n  min-width: 50%;\r\n}\r\n.react-page-cell-xs-7 {\r\n  -webkit-flex-basis: 58.33333333%;\r\n          flex-basis: 58.33333333%;\r\n  width: 58.33333333%;\r\n}\r\n.react-page-cell-xs-8 {\r\n  -webkit-flex-basis: 66.66666667%;\r\n          flex-basis: 66.66666667%;\r\n  width: 66.66666667%;\r\n}\r\n.react-page-cell-xs-9 {\r\n  -webkit-flex-basis: 75%;\r\n          flex-basis: 75%;\r\n  width: 75%;\r\n  min-width: 75%;\r\n}\r\n.react-page-cell-xs-10 {\r\n  -webkit-flex-basis: 83.33333333%;\r\n          flex-basis: 83.33333333%;\r\n  width: 83.33333333%;\r\n}\r\n.react-page-cell-xs-11 {\r\n  -webkit-flex-basis: 91.66666667%;\r\n          flex-basis: 91.66666667%;\r\n  width: 91.66666667%;\r\n}\r\n.react-page-cell-xs-12 {\r\n  -webkit-flex-basis: 100%;\r\n          flex-basis: 100%;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n.react-page-cell-xs-offset-0 {\r\n  margin-left: 0;\r\n}\r\n.react-page-cell-xs-offset-1 {\r\n  margin-left: 8.33333333%;\r\n}\r\n.react-page-cell-xs-offset-2 {\r\n  margin-left: 16.66666667%;\r\n}\r\n.react-page-cell-xs-offset-3 {\r\n  margin-left: 25%;\r\n}\r\n.react-page-cell-xs-offset-4 {\r\n  margin-left: 33.33333333%;\r\n}\r\n.react-page-cell-xs-offset-5 {\r\n  margin-left: 41.66666667%;\r\n}\r\n.react-page-cell-xs-offset-6 {\r\n  margin-left: 50%;\r\n}\r\n.react-page-cell-xs-offset-7 {\r\n  margin-left: 58.33333333%;\r\n}\r\n.react-page-cell-xs-offset-8 {\r\n  margin-left: 66.66666667%;\r\n}\r\n.react-page-cell-xs-offset-9 {\r\n  margin-left: 75%;\r\n}\r\n.react-page-cell-xs-offset-10 {\r\n  margin-left: 83.33333333%;\r\n}\r\n.react-page-cell-xs-offset-11 {\r\n  margin-left: 91.66666667%;\r\n}\r\n[dir=\"ltr\"] .start-xs {\r\n  text-align: left;\r\n}\r\n[dir=\"rtl\"] .start-xs {\r\n  text-align: right;\r\n}\r\n.start-xs {\r\n  -webkit-justify-content: flex-start;\r\n     -moz-box-pack: start;\r\n          justify-content: flex-start;\r\n}\r\n.center-xs {\r\n  -webkit-justify-content: center;\r\n     -moz-box-pack: center;\r\n          justify-content: center;\r\n  text-align: center;\r\n}\r\n[dir=\"ltr\"] .end-xs {\r\n  text-align: right;\r\n}\r\n[dir=\"rtl\"] .end-xs {\r\n  text-align: left;\r\n}\r\n.end-xs {\r\n  -webkit-justify-content: flex-end;\r\n     -moz-box-pack: end;\r\n          justify-content: flex-end;\r\n}\r\n.top-xs {\r\n  -webkit-align-items: flex-start;\r\n     -moz-box-align: start;\r\n          align-items: flex-start;\r\n}\r\n.middle-xs {\r\n  -webkit-align-items: center;\r\n     -moz-box-align: center;\r\n          align-items: center;\r\n}\r\n.bottom-xs {\r\n  -webkit-align-items: flex-end;\r\n     -moz-box-align: end;\r\n          align-items: flex-end;\r\n}\r\n.around-xs {\r\n  -webkit-justify-content: space-around;\r\n          justify-content: space-around;\r\n}\r\n.between-xs {\r\n  -webkit-justify-content: space-between;\r\n     -moz-box-pack: justify;\r\n          justify-content: space-between;\r\n}\r\n.first-xs {\r\n  -webkit-order: -1;\r\n     -moz-box-ordinal-group: 0;\r\n          order: -1;\r\n}\r\n.last-xs {\r\n  -webkit-order: 1;\r\n     -moz-box-ordinal-group: 2;\r\n          order: 1;\r\n}\r\n@media only screen and (min-width: 48em) {\r\n  .react-page-cell-sm,\r\n  .react-page-cell-sm-1,\r\n  .react-page-cell-sm-2,\r\n  .react-page-cell-sm-3,\r\n  .react-page-cell-sm-4,\r\n  .react-page-cell-sm-5,\r\n  .react-page-cell-sm-6,\r\n  .react-page-cell-sm-7,\r\n  .react-page-cell-sm-8,\r\n  .react-page-cell-sm-9,\r\n  .react-page-cell-sm-10,\r\n  .react-page-cell-sm-11,\r\n  .react-page-cell-sm-12,\r\n  .react-page-cell-sm-offset-0,\r\n  .react-page-cell-sm-offset-1,\r\n  .react-page-cell-sm-offset-2,\r\n  .react-page-cell-sm-offset-3,\r\n  .react-page-cell-sm-offset-4,\r\n  .react-page-cell-sm-offset-5,\r\n  .react-page-cell-sm-offset-6,\r\n  .react-page-cell-sm-offset-7,\r\n  .react-page-cell-sm-offset-8,\r\n  .react-page-cell-sm-offset-9,\r\n  .react-page-cell-sm-offset-10,\r\n  .react-page-cell-sm-offset-11,\r\n  .react-page-cell-sm-offset-12 {\r\n    -moz-box-sizing: border-box;\r\n         box-sizing: border-box;\r\n    -webkit-flex: 0 0 auto;\r\n       -moz-box-flex: 0;\r\n            flex: 0 0 auto;\r\n    padding-right: -webkit-calc((0rem * 0.5));\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: -webkit-calc((0rem * 0.5));\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-sm {\r\n    -webkit-flex-grow: 1;\r\n       -moz-box-flex: 1;\r\n            flex-grow: 1;\r\n    -webkit-flex-basis: 0;\r\n            flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-1 {\r\n    -webkit-flex-basis: 8.33333333%;\r\n            flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-2 {\r\n    -webkit-flex-basis: 16.66666667%;\r\n            flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-3 {\r\n    -webkit-flex-basis: 25%;\r\n            flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-4 {\r\n    -webkit-flex-basis: 33.33333333%;\r\n            flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-5 {\r\n    -webkit-flex-basis: 41.66666667%;\r\n            flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-6 {\r\n    -webkit-flex-basis: 50%;\r\n            flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-7 {\r\n    -webkit-flex-basis: 58.33333333%;\r\n            flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-8 {\r\n    -webkit-flex-basis: 66.66666667%;\r\n            flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-9 {\r\n    -webkit-flex-basis: 75%;\r\n            flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-10 {\r\n    -webkit-flex-basis: 83.33333333%;\r\n            flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-11 {\r\n    -webkit-flex-basis: 91.66666667%;\r\n            flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-12 {\r\n    -webkit-flex-basis: 100%;\r\n            flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-sm {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-sm {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-sm {\r\n    -webkit-justify-content: flex-start;\r\n       -moz-box-pack: start;\r\n            justify-content: flex-start;\r\n  }\r\n\r\n  .center-sm {\r\n    -webkit-justify-content: center;\r\n       -moz-box-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-sm {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-sm {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-sm {\r\n    -webkit-justify-content: flex-end;\r\n       -moz-box-pack: end;\r\n            justify-content: flex-end;\r\n  }\r\n\r\n  .top-sm {\r\n    -webkit-align-items: flex-start;\r\n       -moz-box-align: start;\r\n            align-items: flex-start;\r\n  }\r\n\r\n  .middle-sm {\r\n    -webkit-align-items: center;\r\n       -moz-box-align: center;\r\n            align-items: center;\r\n  }\r\n\r\n  .bottom-sm {\r\n    -webkit-align-items: flex-end;\r\n       -moz-box-align: end;\r\n            align-items: flex-end;\r\n  }\r\n\r\n  .around-sm {\r\n    -webkit-justify-content: space-around;\r\n            justify-content: space-around;\r\n  }\r\n\r\n  .between-sm {\r\n    -webkit-justify-content: space-between;\r\n       -moz-box-pack: justify;\r\n            justify-content: space-between;\r\n  }\r\n\r\n  .first-sm {\r\n    -webkit-order: -1;\r\n       -moz-box-ordinal-group: 0;\r\n            order: -1;\r\n  }\r\n\r\n  .last-sm {\r\n    -webkit-order: 1;\r\n       -moz-box-ordinal-group: 2;\r\n            order: 1;\r\n  }\r\n}\r\n@media only screen and (min-width: 64em) {\r\n  .react-page-cell-md,\r\n  .react-page-cell-md-1,\r\n  .react-page-cell-md-2,\r\n  .react-page-cell-md-3,\r\n  .react-page-cell-md-4,\r\n  .react-page-cell-md-5,\r\n  .react-page-cell-md-6,\r\n  .react-page-cell-md-7,\r\n  .react-page-cell-md-8,\r\n  .react-page-cell-md-9,\r\n  .react-page-cell-md-10,\r\n  .react-page-cell-md-11,\r\n  .react-page-cell-md-12,\r\n  .react-page-cell-md-offset-0,\r\n  .react-page-cell-md-offset-1,\r\n  .react-page-cell-md-offset-2,\r\n  .react-page-cell-md-offset-3,\r\n  .react-page-cell-md-offset-4,\r\n  .react-page-cell-md-offset-5,\r\n  .react-page-cell-md-offset-6,\r\n  .react-page-cell-md-offset-7,\r\n  .react-page-cell-md-offset-8,\r\n  .react-page-cell-md-offset-9,\r\n  .react-page-cell-md-offset-10,\r\n  .react-page-cell-md-offset-11,\r\n  .react-page-cell-md-offset-12 {\r\n    -moz-box-sizing: border-box;\r\n         box-sizing: border-box;\r\n    -webkit-flex: 0 0 auto;\r\n       -moz-box-flex: 0;\r\n            flex: 0 0 auto;\r\n    padding-right: -webkit-calc((0rem * 0.5));\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: -webkit-calc((0rem * 0.5));\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-md {\r\n    -webkit-flex-grow: 1;\r\n       -moz-box-flex: 1;\r\n            flex-grow: 1;\r\n    -webkit-flex-basis: 0;\r\n            flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-1 {\r\n    -webkit-flex-basis: 8.33333333%;\r\n            flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-2 {\r\n    -webkit-flex-basis: 16.66666667%;\r\n            flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-3 {\r\n    -webkit-flex-basis: 25%;\r\n            flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-4 {\r\n    -webkit-flex-basis: 33.33333333%;\r\n            flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-5 {\r\n    -webkit-flex-basis: 41.66666667%;\r\n            flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-6 {\r\n    -webkit-flex-basis: 50%;\r\n            flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-7 {\r\n    -webkit-flex-basis: 58.33333333%;\r\n            flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-8 {\r\n    -webkit-flex-basis: 66.66666667%;\r\n            flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-9 {\r\n    -webkit-flex-basis: 75%;\r\n            flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-10 {\r\n    -webkit-flex-basis: 83.33333333%;\r\n            flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-11 {\r\n    -webkit-flex-basis: 91.66666667%;\r\n            flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-12 {\r\n    -webkit-flex-basis: 100%;\r\n            flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-md-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-md {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-md {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-md {\r\n    -webkit-justify-content: flex-start;\r\n       -moz-box-pack: start;\r\n            justify-content: flex-start;\r\n  }\r\n\r\n  .center-md {\r\n    -webkit-justify-content: center;\r\n       -moz-box-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-md {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-md {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-md {\r\n    -webkit-justify-content: flex-end;\r\n       -moz-box-pack: end;\r\n            justify-content: flex-end;\r\n  }\r\n\r\n  .top-md {\r\n    -webkit-align-items: flex-start;\r\n       -moz-box-align: start;\r\n            align-items: flex-start;\r\n  }\r\n\r\n  .middle-md {\r\n    -webkit-align-items: center;\r\n       -moz-box-align: center;\r\n            align-items: center;\r\n  }\r\n\r\n  .bottom-md {\r\n    -webkit-align-items: flex-end;\r\n       -moz-box-align: end;\r\n            align-items: flex-end;\r\n  }\r\n\r\n  .around-md {\r\n    -webkit-justify-content: space-around;\r\n            justify-content: space-around;\r\n  }\r\n\r\n  .between-md {\r\n    -webkit-justify-content: space-between;\r\n       -moz-box-pack: justify;\r\n            justify-content: space-between;\r\n  }\r\n\r\n  .first-md {\r\n    -webkit-order: -1;\r\n       -moz-box-ordinal-group: 0;\r\n            order: -1;\r\n  }\r\n\r\n  .last-md {\r\n    -webkit-order: 1;\r\n       -moz-box-ordinal-group: 2;\r\n            order: 1;\r\n  }\r\n}\r\n@media only screen and (min-width: 75em) {\r\n  .react-page-cell-lg,\r\n  .react-page-cell-lg-1,\r\n  .react-page-cell-lg-2,\r\n  .react-page-cell-lg-3,\r\n  .react-page-cell-lg-4,\r\n  .react-page-cell-lg-5,\r\n  .react-page-cell-lg-6,\r\n  .react-page-cell-lg-7,\r\n  .react-page-cell-lg-8,\r\n  .react-page-cell-lg-9,\r\n  .react-page-cell-lg-10,\r\n  .react-page-cell-lg-11,\r\n  .react-page-cell-lg-12,\r\n  .react-page-cell-lg-offset-0,\r\n  .react-page-cell-lg-offset-1,\r\n  .react-page-cell-lg-offset-2,\r\n  .react-page-cell-lg-offset-3,\r\n  .react-page-cell-lg-offset-4,\r\n  .react-page-cell-lg-offset-5,\r\n  .react-page-cell-lg-offset-6,\r\n  .react-page-cell-lg-offset-7,\r\n  .react-page-cell-lg-offset-8,\r\n  .react-page-cell-lg-offset-9,\r\n  .react-page-cell-lg-offset-10,\r\n  .react-page-cell-lg-offset-11,\r\n  .react-page-cell-lg-offset-12 {\r\n    -moz-box-sizing: border-box;\r\n         box-sizing: border-box;\r\n    -webkit-flex: 0 0 auto;\r\n       -moz-box-flex: 0;\r\n            flex: 0 0 auto;\r\n    padding-right: -webkit-calc((0rem * 0.5));\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: -webkit-calc((0rem * 0.5));\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-lg {\r\n    -webkit-flex-grow: 1;\r\n       -moz-box-flex: 1;\r\n            flex-grow: 1;\r\n    -webkit-flex-basis: 0;\r\n            flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-1 {\r\n    -webkit-flex-basis: 8.33333333%;\r\n            flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-2 {\r\n    -webkit-flex-basis: 16.66666667%;\r\n            flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-3 {\r\n    -webkit-flex-basis: 25%;\r\n            flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-4 {\r\n    -webkit-flex-basis: 33.33333333%;\r\n            flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-5 {\r\n    -webkit-flex-basis: 41.66666667%;\r\n            flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-6 {\r\n    -webkit-flex-basis: 50%;\r\n            flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-7 {\r\n    -webkit-flex-basis: 58.33333333%;\r\n            flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-8 {\r\n    -webkit-flex-basis: 66.66666667%;\r\n            flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-9 {\r\n    -webkit-flex-basis: 75%;\r\n            flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-10 {\r\n    -webkit-flex-basis: 83.33333333%;\r\n            flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-11 {\r\n    -webkit-flex-basis: 91.66666667%;\r\n            flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-12 {\r\n    -webkit-flex-basis: 100%;\r\n            flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-lg {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-lg {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-lg {\r\n    -webkit-justify-content: flex-start;\r\n       -moz-box-pack: start;\r\n            justify-content: flex-start;\r\n  }\r\n\r\n  .center-lg {\r\n    -webkit-justify-content: center;\r\n       -moz-box-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-lg {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-lg {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-lg {\r\n    -webkit-justify-content: flex-end;\r\n       -moz-box-pack: end;\r\n            justify-content: flex-end;\r\n  }\r\n\r\n  .top-lg {\r\n    -webkit-align-items: flex-start;\r\n       -moz-box-align: start;\r\n            align-items: flex-start;\r\n  }\r\n\r\n  .middle-lg {\r\n    -webkit-align-items: center;\r\n       -moz-box-align: center;\r\n            align-items: center;\r\n  }\r\n\r\n  .bottom-lg {\r\n    -webkit-align-items: flex-end;\r\n       -moz-box-align: end;\r\n            align-items: flex-end;\r\n  }\r\n\r\n  .around-lg {\r\n    -webkit-justify-content: space-around;\r\n            justify-content: space-around;\r\n  }\r\n\r\n  .between-lg {\r\n    -webkit-justify-content: space-between;\r\n       -moz-box-pack: justify;\r\n            justify-content: space-between;\r\n  }\r\n\r\n  .first-lg {\r\n    -webkit-order: -1;\r\n       -moz-box-ordinal-group: 0;\r\n            order: -1;\r\n  }\r\n\r\n  .last-lg {\r\n    -webkit-order: 1;\r\n       -moz-box-ordinal-group: 2;\r\n            order: 1;\r\n  }\r\n}\r\n.react-page-row-has-floating-children {\r\n  display: block !important;\r\n}\r\n.react-page-row-is-hovering-this:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  background: black;\r\n  display: block;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n  z-index: 2;\r\n}\r\n.react-page-row-is-hovering-above:before {\r\n  top: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n.react-page-row-is-hovering-below:before {\r\n  bottom: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n.react-page-row-is-hovering-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-row-is-hovering-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n@-webkit-keyframes reactPageCellResizeableAnimate {\r\n  0% {\r\n    background-color: rgba(255, 255, 255, 0.26);\r\n    background-color: var(--minWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n  50% {\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n    background-color: var(--faintWhite);\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n  100% {\r\n    background-color: rgba(255, 255, 255, 0.87);\r\n    background-color: var(--darkWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n}\r\n@keyframes reactPageCellResizeableAnimate {\r\n  0% {\r\n    background-color: rgba(255, 255, 255, 0.26);\r\n    background-color: var(--minWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n  50% {\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n    background-color: var(--faintWhite);\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n  100% {\r\n    background-color: rgba(255, 255, 255, 0.87);\r\n    background-color: var(--darkWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n}\r\n.react-page-row .resize-handle {\r\n  position: absolute;\r\n  z-index: 6;\r\n  width: 4px;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -2px;\r\n  cursor: e-resize;\r\n  background-color: rgba(0, 0, 0, 0.54);\r\n  background-color: var(--lightBlack);\r\n  mix-blend-mode: difference;\r\n}\r\n.react-page-row .resize-handle:after {\r\n  content: ' ';\r\n  background-color: rgba(255, 255, 255, 0.87);\r\n  background-color: var(--darkWhite);\r\n  /* width: 30px; */\r\n  /* height: 30px; */\r\n  position: absolute;\r\n  /* z-index: 1000; */\r\n  top: 40%;\r\n  bottom: 40%;\r\n  left: 0;\r\n  right: 0;\r\n  -webkit-transition: all 200ms linear;\r\n  transition: all 200ms linear;\r\n  mix-blend-mode: normal;\r\n\r\n  -webkit-animation-name: reactPageCellResizeableAnimate;\r\n\r\n          animation-name: reactPageCellResizeableAnimate;\r\n  -webkit-animation-iteration-count: 1;\r\n          animation-iteration-count: 1;\r\n  -webkit-animation-timing-function: ease;\r\n          animation-timing-function: ease;\r\n  -webkit-animation-duration: 0.8s;\r\n          animation-duration: 0.8s;\r\n}\r\n.react-page-row .resize-handle:hover:after,\r\n.react-page-row .resize-handle:active:after {\r\n  background-color: rgba(255, 255, 255, 1);\r\n  background-color: var(--fullWhite);\r\n  top: 0;\r\n  bottom: 0;\r\n}\r\n.react-page-editable {\r\n  position: relative;\r\n  -moz-box-sizing: border-box;\r\n       box-sizing: border-box;\r\n  width: 100%;\r\n  min-height: 480px;\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: flex;\r\n  -webkit-flex: 0 1 auto;\r\n     -moz-box-flex: 0;\r\n          flex: 0 1 auto;\r\n\r\n  -webkit-flex-direction: column;\r\n\r\n     -moz-box-orient: vertical;\r\n\r\n     -moz-box-direction: normal;\r\n\r\n          flex-direction: column;\r\n\r\n  -webkit-align-items: stretch;\r\n\r\n     -moz-box-align: stretch;\r\n\r\n          align-items: stretch;\r\n}\r\n.react-page-editable .react-page-cell-insert-new {\r\n    cursor: cell;\r\n    -webkit-flex: 1 1;\r\n       -moz-box-flex: 1;\r\n            flex: 1 1;\r\n    min-height: 100px;\r\n\r\n    -webkit-transition: all ease 0.4s;\r\n\r\n    transition: all ease 0.4s;\r\n    display: -webkit-flex;\r\n    display: -moz-box;\r\n    display: flex;\r\n    -webkit-justify-content: center;\r\n       -moz-box-pack: center;\r\n            justify-content: center;\r\n    -webkit-align-items: center;\r\n       -moz-box-align: center;\r\n            align-items: center;\r\n    border: 1px solid rgba(0, 0, 0, 0);\r\n    z-index: 1;\r\n    position: relative;\r\n  }\r\n.react-page-editable .react-page-cell-insert-new:after {\r\n    content: '+';\r\n    font-size: 52px;\r\n    font-family: monospace;\r\n    line-height: 52px;\r\n    background-color: rgba(0, 0, 0, 0.26);\r\n    background-color: var(--minBlack);\r\n    color: white;\r\n    width: 52px;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n  }\r\n.react-page-editable .react-page-cell-insert-new:hover,\r\n  .react-page-editable .react-page-cell-insert-new.hover {\r\n    background: rgba(0, 0, 0, 0.26);\r\n    background: var(--minBlack);\r\n    border: 1px solid rgba(255, 255, 255, 0.54);\r\n    border: 1px solid var(--lightWhite);\r\n  }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable {\r\n      cursor: move;\r\n      position: relative;\r\n      -webkit-transition: opacity 200ms ease;\r\n      transition: opacity 200ms ease;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n\r\n      cursor: move;\r\n      border: 1px solid rgba(0, 0, 0, 0);\r\n      -webkit-transition: all ease 0.4s;\r\n      transition: all ease 0.4s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 2rem;\r\n      height: 2rem;\r\n      cursor: move;\r\n      background: rgba(0, 0, 0, 0.12);\r\n      background: var(--faintBlack);\r\n      content: '';\r\n      z-index: 500;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle {\r\n      opacity: 0;\r\n      -webkit-transition: opacity 0.3s;\r\n      transition: opacity 0.3s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle {\r\n      opacity: 1;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before {\r\n      top: -300%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon {\r\n      width: 70%;\r\n      top: 50%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      top: 400%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      width: 100%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      height: 2px;\r\n      position: absolute;\r\n      content: '';\r\n      -webkit-transform: translate(-50%, -50%);\r\n              transform: translate(-50%, -50%);\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: white;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay {\r\n      background: rgba(0, 0, 0, 0.12);\r\n      background: var(--faintBlack);\r\n      border: 1px solid rgba(255, 255, 255, 0.54);\r\n      border: 1px solid var(--lightWhite);\r\n      background-blend-mode: screen;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf {\r\n      z-index: 3;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay {\r\n      float: left;\r\n      z-index: 4;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit {\r\n      opacity: 0.4;\r\n      outline: none;\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay {\r\n      border: 1px solid rgba(0, 0, 0, 0.2);\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell-move-actions {\r\n      opacity: 0;\r\n      -webkit-transition: 0.6s;\r\n      transition: 0.6s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell:hover > .react-page-cell-move-actions {\r\n      opacity: 0.8;\r\n    }\r\n.react-page-cell-droppable {\r\n  /*position: relative;*/\r\n}\r\n.react-page-cell-droppable-is-over-current:after {\r\n  /* extend dropable area a bit, so that its easier to add as last eleent */\r\n  content: '';\r\n  height: 100px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: -100px;\r\n}\r\n.react-page-cell-droppable-is-over-current:before {\r\n  content: ' ';\r\n  display: block;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n}\r\n.react-page-cell-droppable-is-over-above:before,\r\n.react-page-cell-droppable-is-over-below:before {\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-is-over-left-of:before,\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  border-top: 0;\r\n  border-bottom: 0;\r\n}\r\n.react-page-cell-droppable-is-over-above:before {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-above:before {\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-below:before {\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-below:before {\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-left-of:before {\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-right-of:before {\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-inline-right:before,\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  top: 0;\r\n  width: 50%;\r\n  height: 36%;\r\n  max-height: 128px;\r\n  background-color: #e0e0e0;\r\n  background-color: var(--grey300);\r\n  border: 1px solid rgba(0, 0, 0, 0.26);\r\n  border: 1px solid var(--minBlack);\r\n}\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  left: 0;\r\n}\r\n.react-page-cell-droppable-is-over-inline-right:before {\r\n  right: 0;\r\n}\r\n.react-page-cell-droppable-not-allowed {\r\n  cursor: not-allowed;\r\n}\r\n.react-page-cell-error {\r\n  background-color: red;\r\n  padding: 8px;\r\n  margin: 2px;\r\n  overflow: hidden;\r\n}\r\n.react-page-cell-error strong {\r\n  margin: 0 auto;\r\n}\r\n.react-page-cell-error code {\r\n  overflow: scroll;\r\n}\r\n.react-page-editable .react-page-cell-handle {\r\n    display: none;\r\n  }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle {\r\n      position: absolute;\r\n      top: 0px;\r\n      left: 50%;\r\n      -webkit-transform: translateX(-50%) translateY(-100%);\r\n              transform: translateX(-50%) translateY(-100%);\r\n      -webkit-transition: opacity ease 0.4s;\r\n      transition: opacity ease 0.4s;\r\n      opacity: 0;\r\n\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      background: rgba(255, 255, 255, 0.95);\r\n      text-align: center;\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      display: inline-block;\r\n      padding: 12px 24px;\r\n      margin: 0 auto;\r\n      border-radius: 12px 12px 0 0;\r\n      text-transform: uppercase;\r\n      font-size: 14px;\r\n      line-height: 1.4;\r\n      letter-spacing: 0.15em;\r\n\r\n      box-shadow: 0 -5px 5px rgba(0, 0, 0, 0.22);\r\n      pointer-events: none;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-drag-enabled, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-drag-enabled, .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-drag-enabled {\r\n      cursor: move;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused > .react-page-cell-handle {\r\n      opacity: 1;\r\n      pointer-events: all;\r\n    }\r\n/* general rules for read only and edit */\r\n.react-page-cell {\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: flex;\r\n  -webkit-flex-direction: column;\r\n     -moz-box-orient: vertical;\r\n     -moz-box-direction: normal;\r\n          flex-direction: column;\r\n  -moz-box-sizing: border-box;\r\n       box-sizing: border-box;\r\n}\r\n.react-page-cell-inline-left {\r\n    float: left;\r\n  }\r\n.react-page-cell-inline-right {\r\n    float: right;\r\n  }\r\n.react-page-cell-has-inline-neighbour {\r\n    float: none;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n.react-page-cell .react-page-cell-inner {\r\n    height: 100%;\r\n    -moz-box-sizing: border-box;\r\n         box-sizing: border-box;\r\n    outline: none;\r\n  }\r\n/* edit */\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell, .react-page-editable.react-page-editable-mode-resizing .react-page-cell, .react-page-editable.react-page-editable-mode-layout .react-page-cell {\r\n      position: relative;\r\n      -webkit-transition: box-shadow 0.3s;\r\n      transition: box-shadow 0.3s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-is-draft, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-is-draft, .react-page-editable.react-page-editable-mode-layout .react-page-cell-is-draft {\r\n        opacity: 0.3;\r\n        outline: 1px dashed black;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-bring-to-front, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-bring-to-front, .react-page-editable.react-page-editable-mode-layout .react-page-cell-bring-to-front {\r\n        z-index: 3;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-has-plugin:hover, .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-has-plugin:hover, .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-has-plugin:hover {\r\n        z-index: 2;\r\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused.react-page-cell-focused, .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused.react-page-cell-focused, .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused.react-page-cell-focused {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-editable.react-page-editable-mode-insert .react-page-cell {\r\n      cursor: cell\r\n    }\r\n.react-page-editable.react-page-editable-mode-insert .react-page-cell:hover {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-controls-mode-toggle-button-inner {\r\n  float: right;\r\n  margin: 8px;\r\n}\r\n.react-page-controls-mode-toggle-button-description {\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 16px;\r\n  margin-top: 18px;\r\n  float: right;\r\n  background: transparent;\r\n  color: transparent;\r\n  border: 1px transparent solid;\r\n  padding: 2px 8px;\r\n  text-align: right;\r\n  display: none;\r\n  -webkit-transition: all 200ms ease;\r\n  transition: all 200ms ease;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n.react-page-controls-mode-toggle-button:hover\r\n  .react-page-controls-mode-toggle-button-description {\r\n  max-width: 999px;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n  color: #ffffff;\r\n  color: var(--white);\r\n  display: block;\r\n  border: 1px solid rgba(0, 0, 0, 0.12);\r\n  border: 1px solid var(--faintBlack);\r\n}\r\n.react-page-controls-mode-toggle-clearfix {\r\n  clear: both;\r\n}\r\n@-webkit-keyframes fadeIn {\r\n  0% {\r\n   opacity: 0;\r\n   -webkit-transform: scale(0);\r\n           transform: scale(0);\r\n  }\r\n  80% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1.05);\r\n            transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n}\r\n@keyframes fadeIn {\r\n  0% {\r\n   opacity: 0;\r\n   -webkit-transform: scale(0);\r\n           transform: scale(0);\r\n  }\r\n  80% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1.05);\r\n            transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n}\r\n.react-page-controls-mode-toggle-control {\r\n  z-index: 1;\r\n  -webkit-animation: fadeIn 0.8s forwards;\r\n          animation: fadeIn 0.8s forwards;\r\n  opacity: 0;\r\n\r\n}\r\n.react-page-plugin-drawer-item {\r\n  cursor: pointer;\r\n\r\n  z-index: 1;\r\n}\r\n.react-page-plugin-drawer-item:hover {\r\n  z-index: 2;\r\n  box-shadow: 0 0 20px #ccc;\r\n}\r\n.react-page-controls-trash {\r\n  position: fixed;\r\n  bottom: -64px;\r\n  z-index: 500;\r\n  left: 50%;\r\n  -webkit-transition: bottom 200ms ease;\r\n  transition: bottom 200ms ease;\r\n  padding: 8px;\r\n}\r\n.react-page-controls-trash.react-page-controls-trash-active {\r\n  bottom: 16px;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */", "",{"version":3,"sources":["webpack://../packages/editor/src/variables.css","webpack://../packages/editor/src/core/grid.css","webpack://../packages/editor/src/core/components/Row/index.css","webpack://../packages/editor/src/core/components/Editable/index.css","webpack://../packages/editor/src/core/components/Cell/Draggable/index.css","webpack://../packages/editor/src/core/components/Cell/Droppable/index.css","webpack://../packages/editor/src/core/components/Cell/ErrorCell/index.css","webpack://../packages/editor/src/core/components/Cell/Handle/index.css","webpack://../packages/editor/src/core/components/Cell/index.css","webpack://../packages/editor/src/ui/Sidebar/Button/index.css","webpack://../packages/editor/src/ui/Sidebar/index.css","webpack://../packages/editor/src/ui/PluginDrawer/Item/index.css","webpack://../packages/editor/src/ui/Trash/index.css","webpack://../packages/editor/lib/index.css"],"names":[],"mappings":"AAAA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,+BAA+B;IAC/B,6BAA6B;IAC7B,gCAAgC;IAChC,iCAAiC;IACjC,+BAA+B;IAC/B,iCAAiC;IACjC,mCAAmC;IACnC,sCAAsC;IACtC,uCAAuC;IACvC,qCAAqC;IACrC,uCAAuC;IACvC,kBAAkB;IAClB,kBAAkB;AACtB;AChBA,iGAAiG;AAEjG;EACE,oBAAoB;EACpB,oBAAoB;EACpB,qEAA6D;EAA7D,6DAA6D;EAC7D,8DAAsD;EAAtD,sDAAsD;EACtD,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,iCAAiC;EACjC,iCAAiC;EACjC,iCAAiC;EACjC,iCAAiC;EACjC,iEAAyD;EAAzD,yDAAyD;EACzD,iEAAyD;EAAzD,yDAAyD;EACzD,iEAAyD;EAAzD,yDAAyD;AAC3D;AAMA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,mBAAwC;EAAxC,wCAAwC;EACxC,kBAAuC;EAAvC,uCAAuC;AACzC;AAEA;EACE,2BAAsB;OAAtB,sBAAsB;EACtB,qBAAa;EAAb,iBAAa;EAAb,aAAa;EACb,iBAAO;KAAP,gBAAO;UAAP,SAAO;EACP,2BAAmB;KAAnB,2BAAmB;KAAnB,0BAAmB;UAAnB,mBAAmB;EACnB,uBAAe;UAAf,eAAe;EACf,6CAAiD;EAAjD,qCAAiD;EAAjD,iDAAiD;EACjD,4CAAgD;EAAhD,oCAAgD;EAAhD,gDAAgD;EAChD,kBAAkB;AACpB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;EA0BE,2BAAsB;OAAtB,sBAAsB;EACtB,sBAAc;KAAd,gBAAc;UAAd,cAAc;EACd,yCAA+C;EAA/C,iCAA+C;EAA/C,+CAA+C;EAC/C,wCAA8C;EAA9C,gCAA8C;EAA9C,8CAA8C;EAC9C,YAAY;AACd;AAEA;EACE,oBAAY;KAAZ,gBAAY;UAAZ,YAAY;EACZ,qBAAa;UAAb,aAAa;EACb,WAAW;EACX,eAAe;AACjB;AAEA;EACE,+BAAuB;UAAvB,uBAAuB;EACvB,kBAAkB;AACpB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,uBAAe;UAAf,eAAe;EACf,UAAU;EACV,cAAc;AAChB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,uBAAe;UAAf,eAAe;EACf,UAAU;EACV,cAAc;AAChB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,uBAAe;UAAf,eAAe;EACf,UAAU;EACV,cAAc;AAChB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,mBAAmB;AACrB;AAEA;EACE,wBAAgB;UAAhB,gBAAgB;EAChB,WAAW;EACX,eAAe;AACjB;AAEA;EACE,cAAc;AAChB;AAEA;EACE,wBAAwB;AAC1B;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,gBAAgB;AAClB;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,gBAAgB;AAClB;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,gBAAgB;AAClB;AAEA;EACE,yBAAyB;AAC3B;AAEA;EACE,yBAAyB;AAC3B;AAEA;EAEE,gBAAA;AACF;AAHA;EAEE,iBAAA;AACF;AAHA;EACE,mCAA2B;KAA3B,oBAA2B;UAA3B,2BAA2B;AAE7B;AAEA;EACE,+BAAuB;KAAvB,qBAAuB;UAAvB,uBAAuB;EACvB,kBAAkB;AACpB;AAEA;EAEE,iBAAA;AACF;AAHA;EAEE,gBAAA;AACF;AAHA;EACE,iCAAyB;KAAzB,kBAAyB;UAAzB,yBAAyB;AAE3B;AAEA;EACE,+BAAuB;KAAvB,qBAAuB;UAAvB,uBAAuB;AACzB;AAEA;EACE,2BAAmB;KAAnB,sBAAmB;UAAnB,mBAAmB;AACrB;AAEA;EACE,6BAAqB;KAArB,mBAAqB;UAArB,qBAAqB;AACvB;AAEA;EACE,qCAA6B;UAA7B,6BAA6B;AAC/B;AAEA;EACE,sCAA8B;KAA9B,sBAA8B;UAA9B,8BAA8B;AAChC;AAEA;EACE,iBAAS;KAAT,yBAAS;UAAT,SAAS;AACX;AAEA;EACE,gBAAQ;KAAR,yBAAQ;UAAR,QAAQ;AACV;AAEA;EACE;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BE,2BAAsB;SAAtB,sBAAsB;IACtB,sBAAc;OAAd,gBAAc;YAAd,cAAc;IACd,yCAA+C;IAA/C,iCAA+C;IAA/C,+CAA+C;IAC/C,wCAA8C;IAA9C,gCAA8C;IAA9C,8CAA8C;IAC9C,YAAY;EACd;;EAEA;IACE,oBAAY;OAAZ,gBAAY;YAAZ,YAAY;IACZ,qBAAa;YAAb,aAAa;IACb,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,+BAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,wBAAgB;YAAhB,gBAAgB;IAChB,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IAEE,gBAAA;IACF;;EAHA;IAEE,iBAAA;IACF;;EAHA;IACE,mCAA2B;OAA3B,oBAA2B;YAA3B,2BAA2B;EAE7B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IAEE,iBAAA;IACF;;EAHA;IAEE,gBAAA;IACF;;EAHA;IACE,iCAAyB;OAAzB,kBAAyB;YAAzB,yBAAyB;EAE3B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;EACzB;;EAEA;IACE,2BAAmB;OAAnB,sBAAmB;YAAnB,mBAAmB;EACrB;;EAEA;IACE,6BAAqB;OAArB,mBAAqB;YAArB,qBAAqB;EACvB;;EAEA;IACE,qCAA6B;YAA7B,6BAA6B;EAC/B;;EAEA;IACE,sCAA8B;OAA9B,sBAA8B;YAA9B,8BAA8B;EAChC;;EAEA;IACE,iBAAS;OAAT,yBAAS;YAAT,SAAS;EACX;;EAEA;IACE,gBAAQ;OAAR,yBAAQ;YAAR,QAAQ;EACV;AACF;AAEA;EACE;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BE,2BAAsB;SAAtB,sBAAsB;IACtB,sBAAc;OAAd,gBAAc;YAAd,cAAc;IACd,yCAA+C;IAA/C,iCAA+C;IAA/C,+CAA+C;IAC/C,wCAA8C;IAA9C,gCAA8C;IAA9C,8CAA8C;IAC9C,YAAY;EACd;;EAEA;IACE,oBAAY;OAAZ,gBAAY;YAAZ,YAAY;IACZ,qBAAa;YAAb,aAAa;IACb,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,+BAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,wBAAgB;YAAhB,gBAAgB;IAChB,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IAEE,gBAAA;IACF;;EAHA;IAEE,iBAAA;IACF;;EAHA;IACE,mCAA2B;OAA3B,oBAA2B;YAA3B,2BAA2B;EAE7B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IAEE,iBAAA;IACF;;EAHA;IAEE,gBAAA;IACF;;EAHA;IACE,iCAAyB;OAAzB,kBAAyB;YAAzB,yBAAyB;EAE3B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;EACzB;;EAEA;IACE,2BAAmB;OAAnB,sBAAmB;YAAnB,mBAAmB;EACrB;;EAEA;IACE,6BAAqB;OAArB,mBAAqB;YAArB,qBAAqB;EACvB;;EAEA;IACE,qCAA6B;YAA7B,6BAA6B;EAC/B;;EAEA;IACE,sCAA8B;OAA9B,sBAA8B;YAA9B,8BAA8B;EAChC;;EAEA;IACE,iBAAS;OAAT,yBAAS;YAAT,SAAS;EACX;;EAEA;IACE,gBAAQ;OAAR,yBAAQ;YAAR,QAAQ;EACV;AACF;AAEA;EACE;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BE,2BAAsB;SAAtB,sBAAsB;IACtB,sBAAc;OAAd,gBAAc;YAAd,cAAc;IACd,yCAA+C;IAA/C,iCAA+C;IAA/C,+CAA+C;IAC/C,wCAA8C;IAA9C,gCAA8C;IAA9C,8CAA8C;IAC9C,YAAY;EACd;;EAEA;IACE,oBAAY;OAAZ,gBAAY;YAAZ,YAAY;IACZ,qBAAa;YAAb,aAAa;IACb,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,+BAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,uBAAe;YAAf,eAAe;IACf,UAAU;IACV,cAAc;EAChB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,gCAAwB;YAAxB,wBAAwB;IACxB,mBAAmB;EACrB;;EAEA;IACE,wBAAgB;YAAhB,gBAAgB;IAChB,WAAW;IACX,eAAe;EACjB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IAEE,gBAAA;IACF;;EAHA;IAEE,iBAAA;IACF;;EAHA;IACE,mCAA2B;OAA3B,oBAA2B;YAA3B,2BAA2B;EAE7B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;IACvB,kBAAkB;EACpB;;EAEA;IAEE,iBAAA;IACF;;EAHA;IAEE,gBAAA;IACF;;EAHA;IACE,iCAAyB;OAAzB,kBAAyB;YAAzB,yBAAyB;EAE3B;;EAEA;IACE,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;EACzB;;EAEA;IACE,2BAAmB;OAAnB,sBAAmB;YAAnB,mBAAmB;EACrB;;EAEA;IACE,6BAAqB;OAArB,mBAAqB;YAArB,qBAAqB;EACvB;;EAEA;IACE,qCAA6B;YAA7B,6BAA6B;EAC/B;;EAEA;IACE,sCAA8B;OAA9B,sBAA8B;YAA9B,8BAA8B;EAChC;;EAEA;IACE,iBAAS;OAAT,yBAAS;YAAT,SAAS;EACX;;EAEA;IACE,gBAAQ;OAAR,yBAAQ;YAAR,QAAQ;EACV;AACF;AC1zBA;EACE,yBAAyB;AAC3B;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,cAAc;EACd,+BAA4B;EAA5B,4BAA4B;EAC5B,UAAU;AACZ;AAEA;EACE,MAAM;EACN,WAAW;EACX,WAAW;AACb;AAEA;EACE,SAAS;EACT,WAAW;EACX,WAAW;AACb;AAEA;EACE,MAAM;EACN,OAAO;EACP,SAAS;EACT,UAAU;AACZ;AAEA;EACE,MAAM;EACN,QAAQ;EACR,SAAS;EACT,UAAU;AACZ;AAEA;EACE;IACE,2CAAiC;IAAjC,iCAAiC;IACjC,QAAQ;IACR,WAAW;EACb;EACA;IACE,2CAAmC;IAAnC,mCAAmC;IACnC,MAAM;IACN,SAAS;EACX;EACA;IACE,2CAAkC;IAAlC,kCAAkC;IAClC,QAAQ;IACR,WAAW;EACb;AACF;AAhBA;EACE;IACE,2CAAiC;IAAjC,iCAAiC;IACjC,QAAQ;IACR,WAAW;EACb;EACA;IACE,2CAAmC;IAAnC,mCAAmC;IACnC,MAAM;IACN,SAAS;EACX;EACA;IACE,2CAAkC;IAAlC,kCAAkC;IAClC,QAAQ;IACR,WAAW;EACb;AACF;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,UAAU;EACV,MAAM;EACN,SAAS;EACT,UAAU;EACV,gBAAgB;EAChB,qCAAmC;EAAnC,mCAAmC;EACnC,0BAA0B;AAC5B;AAEA;EACE,YAAY;EACZ,2CAAkC;EAAlC,kCAAkC;EAClC,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,QAAQ;EACR,WAAW;EACX,OAAO;EACP,QAAQ;EACR,oCAA4B;EAA5B,4BAA4B;EAC5B,sBAAsB;;EAEtB,sDAA8C;;UAA9C,8CAA8C;EAC9C,oCAA4B;UAA5B,4BAA4B;EAC5B,uCAA+B;UAA/B,+BAA+B;EAC/B,gCAAwB;UAAxB,wBAAwB;AAC1B;AAEA;;EAEE,wCAAkC;EAAlC,kCAAkC;EAClC,MAAM;EACN,SAAS;AACX;AC9FA;EACE,kBAAkB;EAClB,2BAAsB;OAAtB,sBAAsB;EACtB,WAAW;EACX,iBAAiB;EAIjB,qBAAa;EAAb,iBAAa;EAAb,aAAa;EAIb,sBAAc;KAAd,gBAAc;UAAd,cAAc;;EAId,8BAAsB;;KAAtB,yBAAsB;;KAAtB,0BAAsB;;UAAtB,sBAAsB;;EAEtB,4BAAoB;;KAApB,uBAAoB;;UAApB,oBAAoB;AAiCtB;AA/BE;IACE,YAAY;IACZ,iBAAO;OAAP,gBAAO;YAAP,SAAO;IACP,iBAAiB;;IAEjB,iCAAyB;;IAAzB,yBAAyB;IACzB,qBAAa;IAAb,iBAAa;IAAb,aAAa;IACb,+BAAuB;OAAvB,qBAAuB;YAAvB,uBAAuB;IACvB,2BAAmB;OAAnB,sBAAmB;YAAnB,mBAAmB;IACnB,kCAAkC;IAClC,UAAU;IACV,kBAAkB;EACpB;AAEA;IACE,YAAY;IACZ,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,qCAAiC;IAAjC,iCAAiC;IACjC,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,kBAAkB;EACpB;AAEA;;IAEE,+BAA2B;IAA3B,2BAA2B;IAC3B,2CAAmC;IAAnC,mCAAmC;EACrC;AC9CE;MACE,YAAY;MACZ,kBAAkB;MAClB,sCAA8B;MAA9B,8BAA8B;IAChC;AAEA;MACE,kBAAkB;MAClB,MAAM;MACN,OAAO;MACP,SAAS;MACT,QAAQ;;MAER,YAAY;MACZ,kCAAkC;MAClC,iCAAyB;MAAzB,yBAAyB;IAC3B;AAEA;MACE,kBAAkB;MAClB,MAAM;MACN,QAAQ;MACR,WAAW;MACX,YAAY;MACZ,YAAY;MACZ,+BAA6B;MAA7B,6BAA6B;MAC7B,WAAW;MACX,YAAY;IACd;AAEA;MACE,UAAU;MACV,gCAAwB;MAAxB,wBAAwB;IAC1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAYE,UAAU;IACZ;AAEA;;;;MAEE,UAAU;IACZ;AAEA;;;;MAEE,UAAU;MACV,QAAQ;IACV;AAEA;;;;MAEE,SAAS;IACX;AAEA;;;;;;;;;;;;MAIE,WAAW;IACb;AAEA;;;;;;;;;;;;;;;;;;MAME,WAAW;MACX,kBAAkB;MAClB,WAAW;MACX,wCAAgC;cAAhC,gCAAgC;MAChC,SAAS;MACT,gCAAgC;MAChC,iBAAiB;IACnB;AAEA;;;;;;;;;;;;;MAKE,+BAA6B;MAA7B,6BAA6B;MAC7B,2CAAmC;MAAnC,mCAAmC;MACnC,6BAA6B;IAC/B;AAEA;MACE,UAAU;IACZ;AAEA;;;;;;MAEE,WAAW;MACX,UAAU;IACZ;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;MASE,YAAY;MACZ,aAAa;IACf;AAIA;MACE,oCAAoC;IACtC;AACA;MACE,UAAU;MACV,wBAAgB;MAAhB,gBAAgB;IAClB;AACA;MACE,YAAY;IACd;ACxIJ;EACE,sBAAsB;AACxB;AAEA;EACE,yEAAyE;EACzE,WAAW;EACX,aAAa;EACb,WAAW;EACX,kBAAkB;EAClB,cAAc;AAChB;AAEA;EACE,YAAY;EACZ,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,+BAA4B;EAA5B,4BAA4B;AAC9B;AAEA;;EAEE,cAAc;EACd,eAAe;AACjB;AACA;;EAEE,aAAa;EACb,gBAAgB;AAClB;AAEA;EACE,MAAM;EACN,OAAO;EACP,QAAQ;EACR,WAAW;EACX,cAAc;EACd,eAAe;AACjB;AACA;EACE,WAAW;AACb;AAEA;EACE,SAAS;EACT,OAAO;EACP,QAAQ;EACR,WAAW;AACb;AACA;EACE,WAAW;AACb;AAEA;EACE,MAAM;EACN,OAAO;EACP,SAAS;EACT,UAAU;AACZ;AACA;EACE,UAAU;AACZ;AAEA;EACE,MAAM;EACN,QAAQ;EACR,SAAS;EACT,UAAU;AACZ;AACA;EACE,UAAU;AACZ;AAEA;;EAEE,MAAM;EACN,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,yBAAgC;EAAhC,gCAAgC;EAChC,qCAAiC;EAAjC,iCAAiC;AACnC;AAEA;EACE,OAAO;AACT;AACA;EACE,QAAQ;AACV;AAEA;EACE,mBAAmB;AACrB;AC7FA;EACE,qBAAqB;EACrB,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;AAEA;EACE,cAAc;AAChB;AAEA;EACE,gBAAgB;AAClB;ACZE;IACE,aAAa;EACf;AAIE;MACE,kBAAkB;MAClB,QAAQ;MACR,SAAS;MACT,qDAA6C;cAA7C,6CAA6C;MAC7C,qCAA6B;MAA7B,6BAA6B;MAC7B,UAAU;;MAEV,0BAA0B;;MAE1B,qCAAqC;MACrC,kBAAkB;MAClB,0BAA0B;;MAE1B,qBAAqB;MACrB,kBAAkB;MAClB,cAAc;MACd,4BAA4B;MAC5B,yBAAyB;MACzB,eAAe;MACf,gBAAgB;MAChB,sBAAsB;;MAEtB,0CAAuC;MACvC,oBAAoB;IACtB;AAEA;MACE,YAAY;IACd;AAEA;;;;;;MAEE,UAAU;MACV,mBAAmB;IACrB;ACrCJ,yCAAyC;AAEzC;EACE,qBAAa;EAAb,iBAAa;EAAb,aAAa;EACb,8BAAsB;KAAtB,yBAAsB;KAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,2BAAsB;OAAtB,sBAAsB;AAoBxB;AAnBE;IACE,WAAW;EACb;AAEA;IACE,YAAY;EACd;AAEA;IACE,WAAW;IACX,WAAW;IACX,cAAc;EAChB;AAEA;IACE,YAAY;IACZ,2BAAsB;SAAtB,sBAAsB;IACtB,aAAa;EACf;AAGF,SAAS;AAKL;MACE,kBAAkB;MAClB,mCAA2B;MAA3B,2BAA2B;IAmB7B;AAjBE;QACE,YAAY;QACZ,yBAAyB;MAC3B;AACA;QACE,UAAU;MACZ;AACA;QACE,UAAU;QACV,uCAAuC;QACvC,UAAU;MACZ;AACA;QACE,UAAU;QACV,uCAAuC;QACvC,UAAU;MACZ;AAKF;MACE;IAMF;AALE;QACE,UAAU;QACV,uCAAuC;QACvC,UAAU;MACZ;ACpEN;EACE,YAAY;EACZ,WAAW;AACb;AAEA;EACE,+BAA+B;EAC/B,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,6BAA6B;EAC7B,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EACb,kCAA0B;EAA1B,0BAA0B;EAC1B,mBAAmB;EACnB,gBAAgB;AAClB;AAEA;;EAEE,gBAAgB;EAChB,+BAA4B;EAA5B,4BAA4B;EAC5B,cAAmB;EAAnB,mBAAmB;EACnB,cAAc;EACd,qCAAmC;EAAnC,mCAAmC;AACrC;AC1BA;EACE,WAAW;AACb;AAEA;EACE;GACC,UAAU;GACV,2BAAmB;WAAnB,mBAAmB;EACpB;EACA;IACE,UAAU;IACV,8BAAsB;YAAtB,sBAAsB;EACxB;EACA;IACE,UAAU;IACV,2BAAmB;YAAnB,mBAAmB;EACrB;AACF;AAbA;EACE;GACC,UAAU;GACV,2BAAmB;WAAnB,mBAAmB;EACpB;EACA;IACE,UAAU;IACV,8BAAsB;YAAtB,sBAAsB;EACxB;EACA;IACE,UAAU;IACV,2BAAmB;YAAnB,mBAAmB;EACrB;AACF;AAEA;EACE,UAAU;EACV,uCAA+B;UAA/B,+BAA+B;EAC/B,UAAU;;AAEZ;AC1BA;EACE,eAAe;;EAEf,UAAU;AACZ;AACA;EACE,UAAU;EACV,yBAAyB;AAC3B;ACRA;EACE,eAAe;EACf,aAAa;EACb,YAAY;EACZ,SAAS;EACT,qCAA6B;EAA7B,6BAA6B;EAC7B,YAAY;AACd;AAEA;EACE,YAAY;AACd;;;ACu9CA,ogvDAAogvD","sourcesContent":[":root {\r\n    --black: #000000;\r\n    --white: #ffffff;\r\n    --transparent: rgba(0, 0, 0, 0);\r\n    --fullBlack: rgba(0, 0, 0, 1);\r\n    --darkBlack: rgba(0, 0, 0, 0.87);\r\n    --lightBlack: rgba(0, 0, 0, 0.54);\r\n    --minBlack: rgba(0, 0, 0, 0.26);\r\n    --faintBlack: rgba(0, 0, 0, 0.12);\r\n    --fullWhite: rgba(255, 255, 255, 1);\r\n    --darkWhite: rgba(255, 255, 255, 0.87);\r\n    --lightWhite: rgba(255, 255, 255, 0.54);\r\n    --minWhite: rgba(255, 255, 255, 0.26);\r\n    --faintWhite: rgba(255, 255, 255, 0.12);\r\n    --grey300: #e0e0e0;\r\n    --grey900: #212121;\r\n}","/* based on: https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css */\r\n\r\n:root {\r\n  --gutter-width: 0rem;\r\n  --outer-margin: 0rem;\r\n  --gutter-compensation: calc((var(--gutter-width) * 0.5) * -1);\r\n  --half-gutter-width: calc((var(--gutter-width) * 0.5));\r\n  --xs-min: 30;\r\n  --sm-min: 48;\r\n  --md-min: 64;\r\n  --lg-min: 75;\r\n  --screen-xs-min: var(--xs-min) em;\r\n  --screen-sm-min: var(--sm-min) em;\r\n  --screen-md-min: var(--md-min) em;\r\n  --screen-lg-min: var(--lg-min) em;\r\n  --container-sm: calc(var(--sm-min) + var(--gutter-width));\r\n  --container-md: calc(var(--md-min) + var(--gutter-width));\r\n  --container-lg: calc(var(--lg-min) + var(--gutter-width));\r\n}\r\n\r\n@custom-media --sm-viewport only screen and (min-width: 48em);\r\n@custom-media --md-viewport only screen and (min-width: 64em);\r\n@custom-media --lg-viewport only screen and (min-width: 75em);\r\n\r\n.react-page-editable {\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: var(--outer-margin, 2rem);\r\n  padding-left: var(--outer-margin, 2rem);\r\n}\r\n\r\n.react-page-row {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-right: var(--gutter-compensation, -0.5rem);\r\n  margin-left: var(--gutter-compensation, -0.5rem);\r\n  position: relative;\r\n}\r\n\r\n.react-page-cell-xs,\r\n.react-page-cell-xs-1,\r\n.react-page-cell-xs-2,\r\n.react-page-cell-xs-3,\r\n.react-page-cell-xs-4,\r\n.react-page-cell-xs-5,\r\n.react-page-cell-xs-6,\r\n.react-page-cell-xs-7,\r\n.react-page-cell-xs-8,\r\n.react-page-cell-xs-9,\r\n.react-page-cell-xs-10,\r\n.react-page-cell-xs-11,\r\n.react-page-cell-xs-12,\r\n.react-page-cell-xs-offset-0,\r\n.react-page-cell-xs-offset-1,\r\n.react-page-cell-xs-offset-2,\r\n.react-page-cell-xs-offset-3,\r\n.react-page-cell-xs-offset-4,\r\n.react-page-cell-xs-offset-5,\r\n.react-page-cell-xs-offset-6,\r\n.react-page-cell-xs-offset-7,\r\n.react-page-cell-xs-offset-8,\r\n.react-page-cell-xs-offset-9,\r\n.react-page-cell-xs-offset-10,\r\n.react-page-cell-xs-offset-11,\r\n.react-page-cell-xs-offset-12 {\r\n  box-sizing: border-box;\r\n  flex: 0 0 auto;\r\n  padding-right: var(--half-gutter-width, 0.5rem);\r\n  padding-left: var(--half-gutter-width, 0.5rem);\r\n  min-width: 0;\r\n}\r\n\r\n.react-page-cell-xs {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n\r\n.react-page-cell-xs-1 {\r\n  flex-basis: 8.33333333%;\r\n  width: 8.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-2 {\r\n  flex-basis: 16.66666667%;\r\n  width: 16.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-3 {\r\n  flex-basis: 25%;\r\n  width: 25%;\r\n  min-width: 25%;\r\n}\r\n\r\n.react-page-cell-xs-4 {\r\n  flex-basis: 33.33333333%;\r\n  width: 33.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-5 {\r\n  flex-basis: 41.66666667%;\r\n  width: 41.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-6 {\r\n  flex-basis: 50%;\r\n  width: 50%;\r\n  min-width: 50%;\r\n}\r\n\r\n.react-page-cell-xs-7 {\r\n  flex-basis: 58.33333333%;\r\n  width: 58.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-8 {\r\n  flex-basis: 66.66666667%;\r\n  width: 66.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-9 {\r\n  flex-basis: 75%;\r\n  width: 75%;\r\n  min-width: 75%;\r\n}\r\n\r\n.react-page-cell-xs-10 {\r\n  flex-basis: 83.33333333%;\r\n  width: 83.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-11 {\r\n  flex-basis: 91.66666667%;\r\n  width: 91.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-12 {\r\n  flex-basis: 100%;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n\r\n.react-page-cell-xs-offset-0 {\r\n  margin-left: 0;\r\n}\r\n\r\n.react-page-cell-xs-offset-1 {\r\n  margin-left: 8.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-offset-2 {\r\n  margin-left: 16.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-offset-3 {\r\n  margin-left: 25%;\r\n}\r\n\r\n.react-page-cell-xs-offset-4 {\r\n  margin-left: 33.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-offset-5 {\r\n  margin-left: 41.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-offset-6 {\r\n  margin-left: 50%;\r\n}\r\n\r\n.react-page-cell-xs-offset-7 {\r\n  margin-left: 58.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-offset-8 {\r\n  margin-left: 66.66666667%;\r\n}\r\n\r\n.react-page-cell-xs-offset-9 {\r\n  margin-left: 75%;\r\n}\r\n\r\n.react-page-cell-xs-offset-10 {\r\n  margin-left: 83.33333333%;\r\n}\r\n\r\n.react-page-cell-xs-offset-11 {\r\n  margin-left: 91.66666667%;\r\n}\r\n\r\n.start-xs {\r\n  justify-content: flex-start;\r\n  text-align: start;\r\n}\r\n\r\n.center-xs {\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.end-xs {\r\n  justify-content: flex-end;\r\n  text-align: end;\r\n}\r\n\r\n.top-xs {\r\n  align-items: flex-start;\r\n}\r\n\r\n.middle-xs {\r\n  align-items: center;\r\n}\r\n\r\n.bottom-xs {\r\n  align-items: flex-end;\r\n}\r\n\r\n.around-xs {\r\n  justify-content: space-around;\r\n}\r\n\r\n.between-xs {\r\n  justify-content: space-between;\r\n}\r\n\r\n.first-xs {\r\n  order: -1;\r\n}\r\n\r\n.last-xs {\r\n  order: 1;\r\n}\r\n\r\n@media (--sm-viewport) {\r\n  .react-page-cell-sm,\r\n  .react-page-cell-sm-1,\r\n  .react-page-cell-sm-2,\r\n  .react-page-cell-sm-3,\r\n  .react-page-cell-sm-4,\r\n  .react-page-cell-sm-5,\r\n  .react-page-cell-sm-6,\r\n  .react-page-cell-sm-7,\r\n  .react-page-cell-sm-8,\r\n  .react-page-cell-sm-9,\r\n  .react-page-cell-sm-10,\r\n  .react-page-cell-sm-11,\r\n  .react-page-cell-sm-12,\r\n  .react-page-cell-sm-offset-0,\r\n  .react-page-cell-sm-offset-1,\r\n  .react-page-cell-sm-offset-2,\r\n  .react-page-cell-sm-offset-3,\r\n  .react-page-cell-sm-offset-4,\r\n  .react-page-cell-sm-offset-5,\r\n  .react-page-cell-sm-offset-6,\r\n  .react-page-cell-sm-offset-7,\r\n  .react-page-cell-sm-offset-8,\r\n  .react-page-cell-sm-offset-9,\r\n  .react-page-cell-sm-offset-10,\r\n  .react-page-cell-sm-offset-11,\r\n  .react-page-cell-sm-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-sm {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  .start-sm {\r\n    justify-content: flex-start;\r\n    text-align: start;\r\n  }\r\n\r\n  .center-sm {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .end-sm {\r\n    justify-content: flex-end;\r\n    text-align: end;\r\n  }\r\n\r\n  .top-sm {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-sm {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-sm {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-sm {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-sm {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-sm {\r\n    order: -1;\r\n  }\r\n\r\n  .last-sm {\r\n    order: 1;\r\n  }\r\n}\r\n\r\n@media (--md-viewport) {\r\n  .react-page-cell-md,\r\n  .react-page-cell-md-1,\r\n  .react-page-cell-md-2,\r\n  .react-page-cell-md-3,\r\n  .react-page-cell-md-4,\r\n  .react-page-cell-md-5,\r\n  .react-page-cell-md-6,\r\n  .react-page-cell-md-7,\r\n  .react-page-cell-md-8,\r\n  .react-page-cell-md-9,\r\n  .react-page-cell-md-10,\r\n  .react-page-cell-md-11,\r\n  .react-page-cell-md-12,\r\n  .react-page-cell-md-offset-0,\r\n  .react-page-cell-md-offset-1,\r\n  .react-page-cell-md-offset-2,\r\n  .react-page-cell-md-offset-3,\r\n  .react-page-cell-md-offset-4,\r\n  .react-page-cell-md-offset-5,\r\n  .react-page-cell-md-offset-6,\r\n  .react-page-cell-md-offset-7,\r\n  .react-page-cell-md-offset-8,\r\n  .react-page-cell-md-offset-9,\r\n  .react-page-cell-md-offset-10,\r\n  .react-page-cell-md-offset-11,\r\n  .react-page-cell-md-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-md {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-md-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  .start-md {\r\n    justify-content: flex-start;\r\n    text-align: start;\r\n  }\r\n\r\n  .center-md {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .end-md {\r\n    justify-content: flex-end;\r\n    text-align: end;\r\n  }\r\n\r\n  .top-md {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-md {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-md {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-md {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-md {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-md {\r\n    order: -1;\r\n  }\r\n\r\n  .last-md {\r\n    order: 1;\r\n  }\r\n}\r\n\r\n@media (--lg-viewport) {\r\n  .react-page-cell-lg,\r\n  .react-page-cell-lg-1,\r\n  .react-page-cell-lg-2,\r\n  .react-page-cell-lg-3,\r\n  .react-page-cell-lg-4,\r\n  .react-page-cell-lg-5,\r\n  .react-page-cell-lg-6,\r\n  .react-page-cell-lg-7,\r\n  .react-page-cell-lg-8,\r\n  .react-page-cell-lg-9,\r\n  .react-page-cell-lg-10,\r\n  .react-page-cell-lg-11,\r\n  .react-page-cell-lg-12,\r\n  .react-page-cell-lg-offset-0,\r\n  .react-page-cell-lg-offset-1,\r\n  .react-page-cell-lg-offset-2,\r\n  .react-page-cell-lg-offset-3,\r\n  .react-page-cell-lg-offset-4,\r\n  .react-page-cell-lg-offset-5,\r\n  .react-page-cell-lg-offset-6,\r\n  .react-page-cell-lg-offset-7,\r\n  .react-page-cell-lg-offset-8,\r\n  .react-page-cell-lg-offset-9,\r\n  .react-page-cell-lg-offset-10,\r\n  .react-page-cell-lg-offset-11,\r\n  .react-page-cell-lg-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-lg {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  .start-lg {\r\n    justify-content: flex-start;\r\n    text-align: start;\r\n  }\r\n\r\n  .center-lg {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .end-lg {\r\n    justify-content: flex-end;\r\n    text-align: end;\r\n  }\r\n\r\n  .top-lg {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-lg {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-lg {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-lg {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-lg {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-lg {\r\n    order: -1;\r\n  }\r\n\r\n  .last-lg {\r\n    order: 1;\r\n  }\r\n}\r\n",".react-page-row-has-floating-children {\r\n  display: block !important;\r\n}\r\n\r\n.react-page-row-is-hovering-this:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  background: black;\r\n  display: block;\r\n  background: var(--darkBlack);\r\n  z-index: 2;\r\n}\r\n\r\n.react-page-row-is-hovering-above:before {\r\n  top: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n\r\n.react-page-row-is-hovering-below:before {\r\n  bottom: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n\r\n.react-page-row-is-hovering-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n\r\n.react-page-row-is-hovering-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n\r\n@keyframes reactPageCellResizeableAnimate {\r\n  0% {\r\n    background-color: var(--minWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n  50% {\r\n    background-color: var(--faintWhite);\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n  100% {\r\n    background-color: var(--darkWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n}\r\n\r\n.react-page-row .resize-handle {\r\n  position: absolute;\r\n  z-index: 6;\r\n  width: 4px;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -2px;\r\n  cursor: e-resize;\r\n  background-color: var(--lightBlack);\r\n  mix-blend-mode: difference;\r\n}\r\n\r\n.react-page-row .resize-handle:after {\r\n  content: ' ';\r\n  background-color: var(--darkWhite);\r\n  /* width: 30px; */\r\n  /* height: 30px; */\r\n  position: absolute;\r\n  /* z-index: 1000; */\r\n  top: 40%;\r\n  bottom: 40%;\r\n  left: 0;\r\n  right: 0;\r\n  transition: all 200ms linear;\r\n  mix-blend-mode: normal;\r\n\r\n  animation-name: reactPageCellResizeableAnimate;\r\n  animation-iteration-count: 1;\r\n  animation-timing-function: ease;\r\n  animation-duration: 0.8s;\r\n}\r\n\r\n.react-page-row .resize-handle:hover:after,\r\n.react-page-row .resize-handle:active:after {\r\n  background-color: var(--fullWhite);\r\n  top: 0;\r\n  bottom: 0;\r\n}\r\n",".react-page-editable {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  min-height: 480px;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  -webkit-flex: 0 1 auto;\r\n  -ms-flex: 0 1 auto;\r\n  -webkit-box-flex: 0;\r\n  flex: 0 1 auto;\r\n  -webkit-flex-direction: column;\r\n  -ms-flex-direction: column;\r\n\r\n  flex-direction: column;\r\n\r\n  align-items: stretch;\r\n\r\n  .react-page-cell-insert-new {\r\n    cursor: cell;\r\n    flex: 1;\r\n    min-height: 100px;\r\n\r\n    transition: all ease 0.4s;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid rgba(0, 0, 0, 0);\r\n    z-index: 1;\r\n    position: relative;\r\n  }\r\n\r\n  .react-page-cell-insert-new:after {\r\n    content: '+';\r\n    font-size: 52px;\r\n    font-family: monospace;\r\n    line-height: 52px;\r\n    background-color: var(--minBlack);\r\n    color: white;\r\n    width: 52px;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .react-page-cell-insert-new:hover,\r\n  .react-page-cell-insert-new.hover {\r\n    background: var(--minBlack);\r\n    border: 1px solid var(--lightWhite);\r\n  }\r\n}\r\n",".react-page-editable {\r\n  &&-mode-edit,\r\n  &&-mode-resizing,\r\n  &&-mode-layout {\r\n    .react-page-cell-draggable {\r\n      cursor: move;\r\n      position: relative;\r\n      transition: opacity 200ms ease;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n\r\n      cursor: move;\r\n      border: 1px solid rgba(0, 0, 0, 0);\r\n      transition: all ease 0.4s;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 2rem;\r\n      height: 2rem;\r\n      cursor: move;\r\n      background: var(--faintBlack);\r\n      content: '';\r\n      z-index: 500;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle {\r\n      opacity: 0;\r\n      transition: opacity 0.3s;\r\n    }\r\n\r\n    .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle {\r\n      opacity: 1;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before {\r\n      top: -300%;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon {\r\n      width: 70%;\r\n      top: 50%;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      top: 400%;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      width: 100%;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      height: 2px;\r\n      position: absolute;\r\n      content: '';\r\n      transform: translate(-50%, -50%);\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: white;\r\n    }\r\n\r\n    .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay {\r\n      background: var(--faintBlack);\r\n      border: 1px solid var(--lightWhite);\r\n      background-blend-mode: screen;\r\n    }\r\n\r\n    .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf {\r\n      z-index: 3;\r\n    }\r\n\r\n    .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay {\r\n      float: left;\r\n      z-index: 4;\r\n    }\r\n\r\n    .react-page-cell-draggable-is-dragging,\r\n    .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit {\r\n      opacity: 0.4;\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  &&-mode-layout {\r\n    .react-page-cell-draggable-overlay {\r\n      border: 1px solid rgba(0, 0, 0, 0.2);\r\n    }\r\n    .react-page-cell-move-actions {\r\n      opacity: 0;\r\n      transition: 0.6s;\r\n    }\r\n    .react-page-cell:hover > .react-page-cell-move-actions {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n}\r\n",".react-page-cell-droppable {\r\n  /*position: relative;*/\r\n}\r\n\r\n.react-page-cell-droppable-is-over-current:after {\r\n  /* extend dropable area a bit, so that its easier to add as last eleent */\r\n  content: '';\r\n  height: 100px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: -100px;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-current:before {\r\n  content: ' ';\r\n  display: block;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: var(--darkBlack);\r\n}\r\n\r\n.react-page-cell-droppable-is-over-above:before,\r\n.react-page-cell-droppable-is-over-below:before {\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-is-over-left-of:before,\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  border-top: 0;\r\n  border-bottom: 0;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-above:before {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-above:before {\r\n  height: 4px;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-below:before {\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-below:before {\r\n  height: 4px;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-left-of:before {\r\n  width: 4px;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-right-of:before {\r\n  width: 4px;\r\n}\r\n\r\n.react-page-cell-droppable-is-over-inline-right:before,\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  top: 0;\r\n  width: 50%;\r\n  height: 36%;\r\n  max-height: 128px;\r\n  background-color: var(--grey300);\r\n  border: 1px solid var(--minBlack);\r\n}\r\n\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  left: 0;\r\n}\r\n.react-page-cell-droppable-is-over-inline-right:before {\r\n  right: 0;\r\n}\r\n\r\n.react-page-cell-droppable-not-allowed {\r\n  cursor: not-allowed;\r\n}\r\n",".react-page-cell-error {\r\n  background-color: red;\r\n  padding: 8px;\r\n  margin: 2px;\r\n  overflow: hidden;\r\n}\r\n\r\n.react-page-cell-error strong {\r\n  margin: 0 auto;\r\n}\r\n\r\n.react-page-cell-error code {\r\n  overflow: scroll;\r\n}\r\n",".react-page-editable {\r\n  .react-page-cell-handle {\r\n    display: none;\r\n  }\r\n  &&-mode-edit,\r\n  &&-mode-resizing,\r\n  &&-mode-layout {\r\n    .react-page-cell-handle {\r\n      position: absolute;\r\n      top: 0px;\r\n      left: 50%;\r\n      transform: translateX(-50%) translateY(-100%);\r\n      transition: opacity ease 0.4s;\r\n      opacity: 0;\r\n\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      background: rgba(255, 255, 255, 0.95);\r\n      text-align: center;\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      display: inline-block;\r\n      padding: 12px 24px;\r\n      margin: 0 auto;\r\n      border-radius: 12px 12px 0 0;\r\n      text-transform: uppercase;\r\n      font-size: 14px;\r\n      line-height: 1.4;\r\n      letter-spacing: 0.15em;\r\n\r\n      box-shadow: 0 -5px 5px rgb(0 0 0 / 22%);\r\n      pointer-events: none;\r\n    }\r\n\r\n    .react-page-cell-handle-drag-enabled {\r\n      cursor: move;\r\n    }\r\n\r\n    .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-cell.react-page-cell-focused > .react-page-cell-handle {\r\n      opacity: 1;\r\n      pointer-events: all;\r\n    }\r\n  }\r\n}\r\n","@import './Draggable/index.css';\r\n@import './Droppable/index.css';\r\n@import './ErrorCell/index.css';\r\n@import './Handle/index.css';\r\n\r\n/* general rules for read only and edit */\r\n\r\n.react-page-cell {\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  &-inline-left {\r\n    float: left;\r\n  }\r\n\r\n  &-inline-right {\r\n    float: right;\r\n  }\r\n\r\n  &-has-inline-neighbour {\r\n    float: none;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n\r\n  & &-inner {\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n  }\r\n}\r\n\r\n/* edit */\r\n.react-page-editable {\r\n  &&-mode-edit,\r\n  &&-mode-resizing,\r\n  &&-mode-layout {\r\n    .react-page-cell {\r\n      position: relative;\r\n      transition: box-shadow 0.3s;\r\n\r\n      &-is-draft {\r\n        opacity: 0.3;\r\n        outline: 1px dashed black;\r\n      }\r\n      &-bring-to-front {\r\n        z-index: 3;\r\n      }\r\n      &.react-page-cell-has-plugin:hover {\r\n        z-index: 2;\r\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n      &.react-page-cell-focused.react-page-cell-focused {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  &&-mode-insert {\r\n    .react-page-cell {\r\n      cursor: cell;\r\n      &:hover {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".react-page-controls-mode-toggle-button-inner {\r\n  float: right;\r\n  margin: 8px;\r\n}\r\n\r\n.react-page-controls-mode-toggle-button-description {\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 16px;\r\n  margin-top: 18px;\r\n  float: right;\r\n  background: transparent;\r\n  color: transparent;\r\n  border: 1px transparent solid;\r\n  padding: 2px 8px;\r\n  text-align: right;\r\n  display: none;\r\n  transition: all 200ms ease;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n\r\n.react-page-controls-mode-toggle-button:hover\r\n  .react-page-controls-mode-toggle-button-description {\r\n  max-width: 999px;\r\n  background: var(--darkBlack);\r\n  color: var(--white);\r\n  display: block;\r\n  border: 1px solid var(--faintBlack);\r\n}\r\n","@import 'Button/index.css';\r\n\r\n.react-page-controls-mode-toggle-clearfix {\r\n  clear: both;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  0% {\r\n   opacity: 0;\r\n   transform: scale(0);\r\n  }\r\n  80% {\r\n    opacity: 1;\r\n    transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.react-page-controls-mode-toggle-control {\r\n  z-index: 1;\r\n  animation: fadeIn 0.8s forwards;\r\n  opacity: 0;\r\n\r\n}\r\n",".react-page-plugin-drawer-item {\r\n  cursor: pointer;\r\n\r\n  z-index: 1;\r\n}\r\n.react-page-plugin-drawer-item:hover {\r\n  z-index: 2;\r\n  box-shadow: 0 0 20px #ccc;\r\n}\r\n",".react-page-controls-trash {\r\n  position: fixed;\r\n  bottom: -64px;\r\n  z-index: 500;\r\n  left: 50%;\r\n  transition: bottom 200ms ease;\r\n  padding: 8px;\r\n}\r\n\r\n.react-page-controls-trash.react-page-controls-trash-active {\r\n  bottom: 16px;\r\n}\r\n",":root {\r\n    --black: #000000;\r\n    --white: #ffffff;\r\n    --transparent: rgba(0, 0, 0, 0);\r\n    --fullBlack: rgba(0, 0, 0, 1);\r\n    --darkBlack: rgba(0, 0, 0, 0.87);\r\n    --lightBlack: rgba(0, 0, 0, 0.54);\r\n    --minBlack: rgba(0, 0, 0, 0.26);\r\n    --faintBlack: rgba(0, 0, 0, 0.12);\r\n    --fullWhite: rgba(255, 255, 255, 1);\r\n    --darkWhite: rgba(255, 255, 255, 0.87);\r\n    --lightWhite: rgba(255, 255, 255, 0.54);\r\n    --minWhite: rgba(255, 255, 255, 0.26);\r\n    --faintWhite: rgba(255, 255, 255, 0.12);\r\n    --grey300: #e0e0e0;\r\n    --grey900: #212121;\r\n}\r\n/* based on: https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css */\r\n:root {\r\n  --gutter-width: 0rem;\r\n  --outer-margin: 0rem;\r\n  --gutter-compensation: calc((var(--gutter-width) * 0.5) * -1);\r\n  --half-gutter-width: calc((var(--gutter-width) * 0.5));\r\n  --xs-min: 30;\r\n  --sm-min: 48;\r\n  --md-min: 64;\r\n  --lg-min: 75;\r\n  --screen-xs-min: var(--xs-min) em;\r\n  --screen-sm-min: var(--sm-min) em;\r\n  --screen-md-min: var(--md-min) em;\r\n  --screen-lg-min: var(--lg-min) em;\r\n  --container-sm: calc(var(--sm-min) + var(--gutter-width));\r\n  --container-md: calc(var(--md-min) + var(--gutter-width));\r\n  --container-lg: calc(var(--lg-min) + var(--gutter-width));\r\n}\r\n.react-page-editable {\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: 0rem;\r\n  padding-right: var(--outer-margin, 2rem);\r\n  padding-left: 0rem;\r\n  padding-left: var(--outer-margin, 2rem);\r\n}\r\n.react-page-row {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-right: calc((0rem * 0.5) * -1);\r\n  margin-right: var(--gutter-compensation, -0.5rem);\r\n  margin-left: calc((0rem * 0.5) * -1);\r\n  margin-left: var(--gutter-compensation, -0.5rem);\r\n  position: relative;\r\n}\r\n.react-page-cell-xs,\r\n.react-page-cell-xs-1,\r\n.react-page-cell-xs-2,\r\n.react-page-cell-xs-3,\r\n.react-page-cell-xs-4,\r\n.react-page-cell-xs-5,\r\n.react-page-cell-xs-6,\r\n.react-page-cell-xs-7,\r\n.react-page-cell-xs-8,\r\n.react-page-cell-xs-9,\r\n.react-page-cell-xs-10,\r\n.react-page-cell-xs-11,\r\n.react-page-cell-xs-12,\r\n.react-page-cell-xs-offset-0,\r\n.react-page-cell-xs-offset-1,\r\n.react-page-cell-xs-offset-2,\r\n.react-page-cell-xs-offset-3,\r\n.react-page-cell-xs-offset-4,\r\n.react-page-cell-xs-offset-5,\r\n.react-page-cell-xs-offset-6,\r\n.react-page-cell-xs-offset-7,\r\n.react-page-cell-xs-offset-8,\r\n.react-page-cell-xs-offset-9,\r\n.react-page-cell-xs-offset-10,\r\n.react-page-cell-xs-offset-11,\r\n.react-page-cell-xs-offset-12 {\r\n  box-sizing: border-box;\r\n  flex: 0 0 auto;\r\n  padding-right: calc((0rem * 0.5));\r\n  padding-right: var(--half-gutter-width, 0.5rem);\r\n  padding-left: calc((0rem * 0.5));\r\n  padding-left: var(--half-gutter-width, 0.5rem);\r\n  min-width: 0;\r\n}\r\n.react-page-cell-xs {\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n.react-page-cell-xs-1 {\r\n  flex-basis: 8.33333333%;\r\n  width: 8.33333333%;\r\n}\r\n.react-page-cell-xs-2 {\r\n  flex-basis: 16.66666667%;\r\n  width: 16.66666667%;\r\n}\r\n.react-page-cell-xs-3 {\r\n  flex-basis: 25%;\r\n  width: 25%;\r\n  min-width: 25%;\r\n}\r\n.react-page-cell-xs-4 {\r\n  flex-basis: 33.33333333%;\r\n  width: 33.33333333%;\r\n}\r\n.react-page-cell-xs-5 {\r\n  flex-basis: 41.66666667%;\r\n  width: 41.66666667%;\r\n}\r\n.react-page-cell-xs-6 {\r\n  flex-basis: 50%;\r\n  width: 50%;\r\n  min-width: 50%;\r\n}\r\n.react-page-cell-xs-7 {\r\n  flex-basis: 58.33333333%;\r\n  width: 58.33333333%;\r\n}\r\n.react-page-cell-xs-8 {\r\n  flex-basis: 66.66666667%;\r\n  width: 66.66666667%;\r\n}\r\n.react-page-cell-xs-9 {\r\n  flex-basis: 75%;\r\n  width: 75%;\r\n  min-width: 75%;\r\n}\r\n.react-page-cell-xs-10 {\r\n  flex-basis: 83.33333333%;\r\n  width: 83.33333333%;\r\n}\r\n.react-page-cell-xs-11 {\r\n  flex-basis: 91.66666667%;\r\n  width: 91.66666667%;\r\n}\r\n.react-page-cell-xs-12 {\r\n  flex-basis: 100%;\r\n  width: 100%;\r\n  min-width: 100%;\r\n}\r\n.react-page-cell-xs-offset-0 {\r\n  margin-left: 0;\r\n}\r\n.react-page-cell-xs-offset-1 {\r\n  margin-left: 8.33333333%;\r\n}\r\n.react-page-cell-xs-offset-2 {\r\n  margin-left: 16.66666667%;\r\n}\r\n.react-page-cell-xs-offset-3 {\r\n  margin-left: 25%;\r\n}\r\n.react-page-cell-xs-offset-4 {\r\n  margin-left: 33.33333333%;\r\n}\r\n.react-page-cell-xs-offset-5 {\r\n  margin-left: 41.66666667%;\r\n}\r\n.react-page-cell-xs-offset-6 {\r\n  margin-left: 50%;\r\n}\r\n.react-page-cell-xs-offset-7 {\r\n  margin-left: 58.33333333%;\r\n}\r\n.react-page-cell-xs-offset-8 {\r\n  margin-left: 66.66666667%;\r\n}\r\n.react-page-cell-xs-offset-9 {\r\n  margin-left: 75%;\r\n}\r\n.react-page-cell-xs-offset-10 {\r\n  margin-left: 83.33333333%;\r\n}\r\n.react-page-cell-xs-offset-11 {\r\n  margin-left: 91.66666667%;\r\n}\r\n[dir=\"ltr\"] .start-xs {\r\n  text-align: left;\r\n}\r\n[dir=\"rtl\"] .start-xs {\r\n  text-align: right;\r\n}\r\n.start-xs {\r\n  justify-content: flex-start;\r\n}\r\n.center-xs {\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n[dir=\"ltr\"] .end-xs {\r\n  text-align: right;\r\n}\r\n[dir=\"rtl\"] .end-xs {\r\n  text-align: left;\r\n}\r\n.end-xs {\r\n  justify-content: flex-end;\r\n}\r\n.top-xs {\r\n  align-items: flex-start;\r\n}\r\n.middle-xs {\r\n  align-items: center;\r\n}\r\n.bottom-xs {\r\n  align-items: flex-end;\r\n}\r\n.around-xs {\r\n  justify-content: space-around;\r\n}\r\n.between-xs {\r\n  justify-content: space-between;\r\n}\r\n.first-xs {\r\n  order: -1;\r\n}\r\n.last-xs {\r\n  order: 1;\r\n}\r\n@media only screen and (min-width: 48em) {\r\n  .react-page-cell-sm,\r\n  .react-page-cell-sm-1,\r\n  .react-page-cell-sm-2,\r\n  .react-page-cell-sm-3,\r\n  .react-page-cell-sm-4,\r\n  .react-page-cell-sm-5,\r\n  .react-page-cell-sm-6,\r\n  .react-page-cell-sm-7,\r\n  .react-page-cell-sm-8,\r\n  .react-page-cell-sm-9,\r\n  .react-page-cell-sm-10,\r\n  .react-page-cell-sm-11,\r\n  .react-page-cell-sm-12,\r\n  .react-page-cell-sm-offset-0,\r\n  .react-page-cell-sm-offset-1,\r\n  .react-page-cell-sm-offset-2,\r\n  .react-page-cell-sm-offset-3,\r\n  .react-page-cell-sm-offset-4,\r\n  .react-page-cell-sm-offset-5,\r\n  .react-page-cell-sm-offset-6,\r\n  .react-page-cell-sm-offset-7,\r\n  .react-page-cell-sm-offset-8,\r\n  .react-page-cell-sm-offset-9,\r\n  .react-page-cell-sm-offset-10,\r\n  .react-page-cell-sm-offset-11,\r\n  .react-page-cell-sm-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-sm {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-sm-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-sm {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-sm {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-sm {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .center-sm {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-sm {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-sm {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-sm {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .top-sm {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-sm {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-sm {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-sm {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-sm {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-sm {\r\n    order: -1;\r\n  }\r\n\r\n  .last-sm {\r\n    order: 1;\r\n  }\r\n}\r\n@media only screen and (min-width: 64em) {\r\n  .react-page-cell-md,\r\n  .react-page-cell-md-1,\r\n  .react-page-cell-md-2,\r\n  .react-page-cell-md-3,\r\n  .react-page-cell-md-4,\r\n  .react-page-cell-md-5,\r\n  .react-page-cell-md-6,\r\n  .react-page-cell-md-7,\r\n  .react-page-cell-md-8,\r\n  .react-page-cell-md-9,\r\n  .react-page-cell-md-10,\r\n  .react-page-cell-md-11,\r\n  .react-page-cell-md-12,\r\n  .react-page-cell-md-offset-0,\r\n  .react-page-cell-md-offset-1,\r\n  .react-page-cell-md-offset-2,\r\n  .react-page-cell-md-offset-3,\r\n  .react-page-cell-md-offset-4,\r\n  .react-page-cell-md-offset-5,\r\n  .react-page-cell-md-offset-6,\r\n  .react-page-cell-md-offset-7,\r\n  .react-page-cell-md-offset-8,\r\n  .react-page-cell-md-offset-9,\r\n  .react-page-cell-md-offset-10,\r\n  .react-page-cell-md-offset-11,\r\n  .react-page-cell-md-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-md {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-md-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-md-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-md {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-md {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-md {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .center-md {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-md {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-md {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-md {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .top-md {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-md {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-md {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-md {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-md {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-md {\r\n    order: -1;\r\n  }\r\n\r\n  .last-md {\r\n    order: 1;\r\n  }\r\n}\r\n@media only screen and (min-width: 75em) {\r\n  .react-page-cell-lg,\r\n  .react-page-cell-lg-1,\r\n  .react-page-cell-lg-2,\r\n  .react-page-cell-lg-3,\r\n  .react-page-cell-lg-4,\r\n  .react-page-cell-lg-5,\r\n  .react-page-cell-lg-6,\r\n  .react-page-cell-lg-7,\r\n  .react-page-cell-lg-8,\r\n  .react-page-cell-lg-9,\r\n  .react-page-cell-lg-10,\r\n  .react-page-cell-lg-11,\r\n  .react-page-cell-lg-12,\r\n  .react-page-cell-lg-offset-0,\r\n  .react-page-cell-lg-offset-1,\r\n  .react-page-cell-lg-offset-2,\r\n  .react-page-cell-lg-offset-3,\r\n  .react-page-cell-lg-offset-4,\r\n  .react-page-cell-lg-offset-5,\r\n  .react-page-cell-lg-offset-6,\r\n  .react-page-cell-lg-offset-7,\r\n  .react-page-cell-lg-offset-8,\r\n  .react-page-cell-lg-offset-9,\r\n  .react-page-cell-lg-offset-10,\r\n  .react-page-cell-lg-offset-11,\r\n  .react-page-cell-lg-offset-12 {\r\n    box-sizing: border-box;\r\n    flex: 0 0 auto;\r\n    padding-right: calc((0rem * 0.5));\r\n    padding-right: var(--half-gutter-width, 0.5rem);\r\n    padding-left: calc((0rem * 0.5));\r\n    padding-left: var(--half-gutter-width, 0.5rem);\r\n    min-width: 0;\r\n  }\r\n\r\n  .react-page-cell-lg {\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-1 {\r\n    flex-basis: 8.33333333%;\r\n    width: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-2 {\r\n    flex-basis: 16.66666667%;\r\n    width: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-3 {\r\n    flex-basis: 25%;\r\n    width: 25%;\r\n    min-width: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-4 {\r\n    flex-basis: 33.33333333%;\r\n    width: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-5 {\r\n    flex-basis: 41.66666667%;\r\n    width: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-6 {\r\n    flex-basis: 50%;\r\n    width: 50%;\r\n    min-width: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-7 {\r\n    flex-basis: 58.33333333%;\r\n    width: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-8 {\r\n    flex-basis: 66.66666667%;\r\n    width: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-9 {\r\n    flex-basis: 75%;\r\n    width: 75%;\r\n    min-width: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-10 {\r\n    flex-basis: 83.33333333%;\r\n    width: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-11 {\r\n    flex-basis: 91.66666667%;\r\n    width: 91.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-12 {\r\n    flex-basis: 100%;\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-0 {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-1 {\r\n    margin-left: 8.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-2 {\r\n    margin-left: 16.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-3 {\r\n    margin-left: 25%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-4 {\r\n    margin-left: 33.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-5 {\r\n    margin-left: 41.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-6 {\r\n    margin-left: 50%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-7 {\r\n    margin-left: 58.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-8 {\r\n    margin-left: 66.66666667%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-9 {\r\n    margin-left: 75%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-10 {\r\n    margin-left: 83.33333333%;\r\n  }\r\n\r\n  .react-page-cell-lg-offset-11 {\r\n    margin-left: 91.66666667%;\r\n  }\r\n\r\n  [dir=\"ltr\"] .start-lg {\r\n    text-align: left;\r\n    }\r\n\r\n  [dir=\"rtl\"] .start-lg {\r\n    text-align: right;\r\n    }\r\n\r\n  .start-lg {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .center-lg {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  [dir=\"ltr\"] .end-lg {\r\n    text-align: right;\r\n    }\r\n\r\n  [dir=\"rtl\"] .end-lg {\r\n    text-align: left;\r\n    }\r\n\r\n  .end-lg {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .top-lg {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .middle-lg {\r\n    align-items: center;\r\n  }\r\n\r\n  .bottom-lg {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .around-lg {\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .between-lg {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .first-lg {\r\n    order: -1;\r\n  }\r\n\r\n  .last-lg {\r\n    order: 1;\r\n  }\r\n}\r\n.react-page-row-has-floating-children {\r\n  display: block !important;\r\n}\r\n.react-page-row-is-hovering-this:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  background: black;\r\n  display: block;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n  z-index: 2;\r\n}\r\n.react-page-row-is-hovering-above:before {\r\n  top: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n.react-page-row-is-hovering-below:before {\r\n  bottom: 0;\r\n  height: 4px;\r\n  width: 100%;\r\n}\r\n.react-page-row-is-hovering-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-row-is-hovering-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n@-webkit-keyframes reactPageCellResizeableAnimate {\r\n  0% {\r\n    background-color: rgba(255, 255, 255, 0.26);\r\n    background-color: var(--minWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n  50% {\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n    background-color: var(--faintWhite);\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n  100% {\r\n    background-color: rgba(255, 255, 255, 0.87);\r\n    background-color: var(--darkWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n}\r\n@keyframes reactPageCellResizeableAnimate {\r\n  0% {\r\n    background-color: rgba(255, 255, 255, 0.26);\r\n    background-color: var(--minWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n  50% {\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n    background-color: var(--faintWhite);\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n  100% {\r\n    background-color: rgba(255, 255, 255, 0.87);\r\n    background-color: var(--darkWhite);\r\n    top: 45%;\r\n    bottom: 45%;\r\n  }\r\n}\r\n.react-page-row .resize-handle {\r\n  position: absolute;\r\n  z-index: 6;\r\n  width: 4px;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -2px;\r\n  cursor: e-resize;\r\n  background-color: rgba(0, 0, 0, 0.54);\r\n  background-color: var(--lightBlack);\r\n  mix-blend-mode: difference;\r\n}\r\n.react-page-row .resize-handle:after {\r\n  content: ' ';\r\n  background-color: rgba(255, 255, 255, 0.87);\r\n  background-color: var(--darkWhite);\r\n  /* width: 30px; */\r\n  /* height: 30px; */\r\n  position: absolute;\r\n  /* z-index: 1000; */\r\n  top: 40%;\r\n  bottom: 40%;\r\n  left: 0;\r\n  right: 0;\r\n  transition: all 200ms linear;\r\n  mix-blend-mode: normal;\r\n\r\n  -webkit-animation-name: reactPageCellResizeableAnimate;\r\n\r\n          animation-name: reactPageCellResizeableAnimate;\r\n  -webkit-animation-iteration-count: 1;\r\n          animation-iteration-count: 1;\r\n  -webkit-animation-timing-function: ease;\r\n          animation-timing-function: ease;\r\n  -webkit-animation-duration: 0.8s;\r\n          animation-duration: 0.8s;\r\n}\r\n.react-page-row .resize-handle:hover:after,\r\n.react-page-row .resize-handle:active:after {\r\n  background-color: rgba(255, 255, 255, 1);\r\n  background-color: var(--fullWhite);\r\n  top: 0;\r\n  bottom: 0;\r\n}\r\n.react-page-editable {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  min-height: 480px;\r\n  display: flex;\r\n  flex: 0 1 auto;\r\n\r\n  flex-direction: column;\r\n\r\n  align-items: stretch;\r\n}\r\n.react-page-editable .react-page-cell-insert-new {\r\n    cursor: cell;\r\n    flex: 1;\r\n    min-height: 100px;\r\n\r\n    transition: all ease 0.4s;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid rgba(0, 0, 0, 0);\r\n    z-index: 1;\r\n    position: relative;\r\n  }\r\n.react-page-editable .react-page-cell-insert-new:after {\r\n    content: '+';\r\n    font-size: 52px;\r\n    font-family: monospace;\r\n    line-height: 52px;\r\n    background-color: rgba(0, 0, 0, 0.26);\r\n    background-color: var(--minBlack);\r\n    color: white;\r\n    width: 52px;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n  }\r\n.react-page-editable .react-page-cell-insert-new:hover,\r\n  .react-page-editable .react-page-cell-insert-new.hover {\r\n    background: rgba(0, 0, 0, 0.26);\r\n    background: var(--minBlack);\r\n    border: 1px solid rgba(255, 255, 255, 0.54);\r\n    border: 1px solid var(--lightWhite);\r\n  }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable {\r\n      cursor: move;\r\n      position: relative;\r\n      transition: opacity 200ms ease;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n\r\n      cursor: move;\r\n      border: 1px solid rgba(0, 0, 0, 0);\r\n      transition: all ease 0.4s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 2rem;\r\n      height: 2rem;\r\n      cursor: move;\r\n      background: rgba(0, 0, 0, 0.12);\r\n      background: var(--faintBlack);\r\n      content: '';\r\n      z-index: 500;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle {\r\n      opacity: 0;\r\n      transition: opacity 0.3s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused\r\n      > div\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay-handle {\r\n      opacity: 1;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before {\r\n      top: -300%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon {\r\n      width: 70%;\r\n      top: 50%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      top: 400%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      width: 100%;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::before,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay-handle\r\n      .react-page-cell-draggable-overlay-handle-icon::after {\r\n      height: 2px;\r\n      position: absolute;\r\n      content: '';\r\n      transform: translate(-50%, -50%);\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: white;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay, .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover\r\n      > div\r\n      > div\r\n      > div\r\n      > .react-page-cell-draggable-overlay {\r\n      background: rgba(0, 0, 0, 0.12);\r\n      background: var(--faintBlack);\r\n      border: 1px solid rgba(255, 255, 255, 0.54);\r\n      border: 1px solid var(--lightWhite);\r\n      background-blend-mode: screen;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf, .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay.react-page-cell-draggable-leaf {\r\n      z-index: 3;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-inline-left.react-page-cell-draggable-overlay,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-inline-right.react-page-cell-draggable-overlay {\r\n      float: left;\r\n      z-index: 4;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-is-dragging,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-is-dragging\r\n      + div\r\n      > .react-page-cell-droppable\r\n      > .react-page-cell-draggable-in-edit {\r\n      opacity: 0.4;\r\n      outline: none;\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell-draggable-overlay {\r\n      border: 1px solid rgba(0, 0, 0, 0.2);\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell-move-actions {\r\n      opacity: 0;\r\n      transition: 0.6s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-layout .react-page-cell:hover > .react-page-cell-move-actions {\r\n      opacity: 0.8;\r\n    }\r\n.react-page-cell-droppable {\r\n  /*position: relative;*/\r\n}\r\n.react-page-cell-droppable-is-over-current:after {\r\n  /* extend dropable area a bit, so that its easier to add as last eleent */\r\n  content: '';\r\n  height: 100px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: -100px;\r\n}\r\n.react-page-cell-droppable-is-over-current:before {\r\n  content: ' ';\r\n  display: block;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n}\r\n.react-page-cell-droppable-is-over-above:before,\r\n.react-page-cell-droppable-is-over-below:before {\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-is-over-left-of:before,\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  border-top: 0;\r\n  border-bottom: 0;\r\n}\r\n.react-page-cell-droppable-is-over-above:before {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n  border-left: 0;\r\n  border-right: 0;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-above:before {\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-below:before {\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-below:before {\r\n  height: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-left-of:before {\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-left-of:before {\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-right-of:before {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-leaf.react-page-cell-droppable-is-over-right-of:before {\r\n  width: 4px;\r\n}\r\n.react-page-cell-droppable-is-over-inline-right:before,\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  top: 0;\r\n  width: 50%;\r\n  height: 36%;\r\n  max-height: 128px;\r\n  background-color: #e0e0e0;\r\n  background-color: var(--grey300);\r\n  border: 1px solid rgba(0, 0, 0, 0.26);\r\n  border: 1px solid var(--minBlack);\r\n}\r\n.react-page-cell-droppable-is-over-inline-left:before {\r\n  left: 0;\r\n}\r\n.react-page-cell-droppable-is-over-inline-right:before {\r\n  right: 0;\r\n}\r\n.react-page-cell-droppable-not-allowed {\r\n  cursor: not-allowed;\r\n}\r\n.react-page-cell-error {\r\n  background-color: red;\r\n  padding: 8px;\r\n  margin: 2px;\r\n  overflow: hidden;\r\n}\r\n.react-page-cell-error strong {\r\n  margin: 0 auto;\r\n}\r\n.react-page-cell-error code {\r\n  overflow: scroll;\r\n}\r\n.react-page-editable .react-page-cell-handle {\r\n    display: none;\r\n  }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-handle, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle, .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle {\r\n      position: absolute;\r\n      top: 0px;\r\n      left: 50%;\r\n      transform: translateX(-50%) translateY(-100%);\r\n      transition: opacity ease 0.4s;\r\n      opacity: 0;\r\n\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      background: rgba(255, 255, 255, 0.95);\r\n      text-align: center;\r\n      color: rgba(0, 0, 0, 0.97);\r\n\r\n      display: inline-block;\r\n      padding: 12px 24px;\r\n      margin: 0 auto;\r\n      border-radius: 12px 12px 0 0;\r\n      text-transform: uppercase;\r\n      font-size: 14px;\r\n      line-height: 1.4;\r\n      letter-spacing: 0.15em;\r\n\r\n      box-shadow: 0 -5px 5px rgba(0, 0, 0, 0.22);\r\n      pointer-events: none;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-handle-drag-enabled, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-handle-drag-enabled, .react-page-editable.react-page-editable-mode-layout .react-page-cell-handle-drag-enabled {\r\n      cursor: move;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell:hover > .react-page-cell-handle,\r\n    .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused > .react-page-cell-handle {\r\n      opacity: 1;\r\n      pointer-events: all;\r\n    }\r\n/* general rules for read only and edit */\r\n.react-page-cell {\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n}\r\n.react-page-cell-inline-left {\r\n    float: left;\r\n  }\r\n.react-page-cell-inline-right {\r\n    float: right;\r\n  }\r\n.react-page-cell-has-inline-neighbour {\r\n    float: none;\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n.react-page-cell .react-page-cell-inner {\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n  }\r\n/* edit */\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell, .react-page-editable.react-page-editable-mode-resizing .react-page-cell, .react-page-editable.react-page-editable-mode-layout .react-page-cell {\r\n      position: relative;\r\n      transition: box-shadow 0.3s;\r\n    }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-is-draft, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-is-draft, .react-page-editable.react-page-editable-mode-layout .react-page-cell-is-draft {\r\n        opacity: 0.3;\r\n        outline: 1px dashed black;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell-bring-to-front, .react-page-editable.react-page-editable-mode-resizing .react-page-cell-bring-to-front, .react-page-editable.react-page-editable-mode-layout .react-page-cell-bring-to-front {\r\n        z-index: 3;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-has-plugin:hover, .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-has-plugin:hover, .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-has-plugin:hover {\r\n        z-index: 2;\r\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-editable.react-page-editable-mode-edit .react-page-cell.react-page-cell-focused.react-page-cell-focused, .react-page-editable.react-page-editable-mode-resizing .react-page-cell.react-page-cell-focused.react-page-cell-focused, .react-page-editable.react-page-editable-mode-layout .react-page-cell.react-page-cell-focused.react-page-cell-focused {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-editable.react-page-editable-mode-insert .react-page-cell {\r\n      cursor: cell\r\n    }\r\n.react-page-editable.react-page-editable-mode-insert .react-page-cell:hover {\r\n        z-index: 1;\r\n        box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);\r\n        opacity: 1;\r\n      }\r\n.react-page-controls-mode-toggle-button-inner {\r\n  float: right;\r\n  margin: 8px;\r\n}\r\n.react-page-controls-mode-toggle-button-description {\r\n  font-family: Roboto, sans-serif;\r\n  font-size: 16px;\r\n  margin-top: 18px;\r\n  float: right;\r\n  background: transparent;\r\n  color: transparent;\r\n  border: 1px transparent solid;\r\n  padding: 2px 8px;\r\n  text-align: right;\r\n  display: none;\r\n  transition: all 200ms ease;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n.react-page-controls-mode-toggle-button:hover\r\n  .react-page-controls-mode-toggle-button-description {\r\n  max-width: 999px;\r\n  background: rgba(0, 0, 0, 0.87);\r\n  background: var(--darkBlack);\r\n  color: #ffffff;\r\n  color: var(--white);\r\n  display: block;\r\n  border: 1px solid rgba(0, 0, 0, 0.12);\r\n  border: 1px solid var(--faintBlack);\r\n}\r\n.react-page-controls-mode-toggle-clearfix {\r\n  clear: both;\r\n}\r\n@-webkit-keyframes fadeIn {\r\n  0% {\r\n   opacity: 0;\r\n   transform: scale(0);\r\n  }\r\n  80% {\r\n    opacity: 1;\r\n    transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n@keyframes fadeIn {\r\n  0% {\r\n   opacity: 0;\r\n   transform: scale(0);\r\n  }\r\n  80% {\r\n    opacity: 1;\r\n    transform: scale(1.05);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n.react-page-controls-mode-toggle-control {\r\n  z-index: 1;\r\n  -webkit-animation: fadeIn 0.8s forwards;\r\n          animation: fadeIn 0.8s forwards;\r\n  opacity: 0;\r\n\r\n}\r\n.react-page-plugin-drawer-item {\r\n  cursor: pointer;\r\n\r\n  z-index: 1;\r\n}\r\n.react-page-plugin-drawer-item:hover {\r\n  z-index: 2;\r\n  box-shadow: 0 0 20px #ccc;\r\n}\r\n.react-page-controls-trash {\r\n  position: fixed;\r\n  bottom: -64px;\r\n  z-index: 500;\r\n  left: 50%;\r\n  transition: bottom 200ms ease;\r\n  padding: 8px;\r\n}\r\n.react-page-controls-trash.react-page-controls-trash-active {\r\n  bottom: 16px;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64, */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/html5-video/lib/index.css":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/content/html5-video/lib/index.css ***!
  \***************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmRleC5jc3MifQ== */", "",{"version":3,"sources":["webpack://../packages/plugins/content/html5-video/lib/index.css"],"names":[],"mappings":";;;AAGA,oJAAoJ","sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/image/lib/index.css":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/content/image/lib/index.css ***!
  \*********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-content-image {\r\n    width: 100%;\r\n  }\r\n  \r\n  .react-page-plugins-content-image-placeholder {\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1pbWFnZS1wbGFjZWhvbGRlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgIl19 */", "",{"version":3,"sources":["webpack://../packages/plugins/content/image/src/index.css","webpack://../packages/plugins/content/image/lib/index.css"],"names":[],"mappings":"AAAA;IACI,WAAW;EACb;;EAEA;IACE,kBAAkB;IAClB,WAAW;IACX,kBAAkB;EACpB;;ACEF,ojBAAojB","sourcesContent":[".react-page-plugins-content-image {\r\n    width: 100%;\r\n  }\r\n  \r\n  .react-page-plugins-content-image-placeholder {\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  ",".react-page-plugins-content-image {\r\n    width: 100%;\r\n  }\r\n  \r\n  .react-page-plugins-content-image-placeholder {\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1pbWFnZS1wbGFjZWhvbGRlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgIl19 */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/slate/lib/index.css":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/content/slate/lib/index.css ***!
  \*********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-content-slate-paragraph-placeholder {\r\n  font-style: italic;\r\n  color: var(--lightBlack);\r\n}\r\n\r\n.react-page-plugins-content-slate-inline-toolbar {\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: -10000px;\r\n    left: -10000px;\r\n    margin-top: -6px;\r\n    opacity: 0;\r\n    background-color: var(--grey900);\r\n    border-radius: 4px;\r\n    -webkit-transition: opacity 0.75s;\r\n    transition: opacity 0.75s;\r\n  }\r\n\r\n.react-page-plugins-content-slate-inline-toolbar--hidden {\r\n    opacity: 0 !important;\r\n    pointer-events: none;\r\n  }\r\n\r\n  \r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW5zL3BhcmFncmFwaHMvbm9kZS5jc3MiLCIuLi9zcmMvaW5kZXguY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLHdCQUF3QjtBQUMxQjs7QUNEQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLGdDQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIseUJBQXlCO0VBQzNCOztBQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLG9CQUFvQjtFQUN0QiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc2xhdGUtcGFyYWdyYXBoLXBsYWNlaG9sZGVyIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgY29sb3I6IHZhcigtLWxpZ2h0QmxhY2spO1xyXG59XHJcbiIsIkBpbXBvcnQgJ3BsdWdpbnMvcGFyYWdyYXBocy9ub2RlLmNzcyc7XHJcblxyXG4ucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc2xhdGUtaW5saW5lLXRvb2xiYXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTA7XHJcbiAgICB0b3A6IC0xMDAwMHB4O1xyXG4gICAgbGVmdDogLTEwMDAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNnB4O1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZXk5MDApO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjc1cztcclxuICB9XHJcbiAgXHJcbiAgLnJlYWN0LXBhZ2UtcGx1Z2lucy1jb250ZW50LXNsYXRlLWlubGluZS10b29sYmFyLS1oaWRkZW4ge1xyXG4gICAgb3BhY2l0eTogMCAhaW1wb3J0YW50O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBcclxuIl19 */", "",{"version":3,"sources":["webpack://../packages/plugins/content/slate/src/plugins/paragraphs/node.css","webpack://../packages/plugins/content/slate/src/index.css","webpack://../packages/plugins/content/slate/lib/index.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,wBAAwB;AAC1B;;ACDA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,cAAc;IACd,gBAAgB;IAChB,UAAU;IACV,gCAAgC;IAChC,kBAAkB;IAClB,iCAAyB;IAAzB,yBAAyB;EAC3B;;AAEA;IACE,qBAAqB;IACrB,oBAAoB;EACtB;;;;ACOF,wyCAAwyC","sourcesContent":[".react-page-plugins-content-slate-paragraph-placeholder {\r\n  font-style: italic;\r\n  color: var(--lightBlack);\r\n}\r\n","@import 'plugins/paragraphs/node.css';\r\n\r\n.react-page-plugins-content-slate-inline-toolbar {\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: -10000px;\r\n    left: -10000px;\r\n    margin-top: -6px;\r\n    opacity: 0;\r\n    background-color: var(--grey900);\r\n    border-radius: 4px;\r\n    transition: opacity 0.75s;\r\n  }\r\n  \r\n  .react-page-plugins-content-slate-inline-toolbar--hidden {\r\n    opacity: 0 !important;\r\n    pointer-events: none;\r\n  }\r\n\r\n  \r\n",".react-page-plugins-content-slate-paragraph-placeholder {\r\n  font-style: italic;\r\n  color: var(--lightBlack);\r\n}\r\n\r\n.react-page-plugins-content-slate-inline-toolbar {\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: -10000px;\r\n    left: -10000px;\r\n    margin-top: -6px;\r\n    opacity: 0;\r\n    background-color: var(--grey900);\r\n    border-radius: 4px;\r\n    transition: opacity 0.75s;\r\n  }\r\n\r\n.react-page-plugins-content-slate-inline-toolbar--hidden {\r\n    opacity: 0 !important;\r\n    pointer-events: none;\r\n  }\r\n\r\n  \r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW5zL3BhcmFncmFwaHMvbm9kZS5jc3MiLCIuLi9zcmMvaW5kZXguY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLHdCQUF3QjtBQUMxQjs7QUNEQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLGdDQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIseUJBQXlCO0VBQzNCOztBQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLG9CQUFvQjtFQUN0QiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc2xhdGUtcGFyYWdyYXBoLXBsYWNlaG9sZGVyIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgY29sb3I6IHZhcigtLWxpZ2h0QmxhY2spO1xyXG59XHJcbiIsIkBpbXBvcnQgJ3BsdWdpbnMvcGFyYWdyYXBocy9ub2RlLmNzcyc7XHJcblxyXG4ucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc2xhdGUtaW5saW5lLXRvb2xiYXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTA7XHJcbiAgICB0b3A6IC0xMDAwMHB4O1xyXG4gICAgbGVmdDogLTEwMDAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNnB4O1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZXk5MDApO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjc1cztcclxuICB9XHJcbiAgXHJcbiAgLnJlYWN0LXBhZ2UtcGx1Z2lucy1jb250ZW50LXNsYXRlLWlubGluZS10b29sYmFyLS1oaWRkZW4ge1xyXG4gICAgb3BhY2l0eTogMCAhaW1wb3J0YW50O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBcclxuIl19 */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/spacer/lib/index.css":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/content/spacer/lib/index.css ***!
  \**********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-content-spacer {\r\n  border-bottom: none;\r\n  position: relative;\r\n}\r\n\r\n.react-page-editable .react-page-plugins-content-spacer {\r\n  outline: 1px dashed var(--minBlack);\r\n}\r\n\r\n.react-page-editable-mode-preview .react-page-plugins-content-spacer {\r\n  outline: none;\r\n}\r\n\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:before,\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:hover:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 100%;\r\n  bottom: 0;\r\n  right: 0;\r\n  cursor: n-resize;\r\n  line-height: 12px;\r\n  font-size: 1.5em;\r\n  height: 24px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDOztBQUNBO0VBQ0UsYUFBYTtBQUNmOztBQUVBOzs7Ozs7RUFNRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsU0FBUztFQUNULFFBQVE7RUFDUixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2QiLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlYWN0LXBhZ2UtcGx1Z2lucy1jb250ZW50LXNwYWNlciB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5yZWFjdC1wYWdlLWVkaXRhYmxlIC5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1zcGFjZXIge1xyXG4gIG91dGxpbmU6IDFweCBkYXNoZWQgdmFyKC0tbWluQmxhY2spO1xyXG59XHJcbi5yZWFjdC1wYWdlLWVkaXRhYmxlLW1vZGUtcHJldmlldyAucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc3BhY2VyIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4ucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc3BhY2VyXHJcbiAgPiAucmVhY3QtcmVzaXphYmxlXHJcbiAgPiAucmVhY3QtcmVzaXphYmxlLWhhbmRsZTpiZWZvcmUsXHJcbi5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1zcGFjZXJcclxuICA+IC5yZWFjdC1yZXNpemFibGVcclxuICA+IC5yZWFjdC1yZXNpemFibGUtaGFuZGxlOmhvdmVyOmJlZm9yZSB7XHJcbiAgY29udGVudDogJyAnO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGN1cnNvcjogbi1yZXNpemU7XHJcbiAgbGluZS1oZWlnaHQ6IDEycHg7XHJcbiAgZm9udC1zaXplOiAxLjVlbTtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbn1cclxuIl19 */", "",{"version":3,"sources":["webpack://../packages/plugins/content/spacer/src/index.css","webpack://../packages/plugins/content/spacer/lib/index.css"],"names":[],"mappings":"AAAA;EACE,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,mCAAmC;AACrC;;AACA;EACE,aAAa;AACf;;AAEA;;;;;;EAME,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,QAAQ;EACR,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,YAAY;AACd;;ACGA,g7CAAg7C","sourcesContent":[".react-page-plugins-content-spacer {\r\n  border-bottom: none;\r\n  position: relative;\r\n}\r\n\r\n.react-page-editable .react-page-plugins-content-spacer {\r\n  outline: 1px dashed var(--minBlack);\r\n}\r\n.react-page-editable-mode-preview .react-page-plugins-content-spacer {\r\n  outline: none;\r\n}\r\n\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:before,\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:hover:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 100%;\r\n  bottom: 0;\r\n  right: 0;\r\n  cursor: n-resize;\r\n  line-height: 12px;\r\n  font-size: 1.5em;\r\n  height: 24px;\r\n}\r\n",".react-page-plugins-content-spacer {\r\n  border-bottom: none;\r\n  position: relative;\r\n}\r\n\r\n.react-page-editable .react-page-plugins-content-spacer {\r\n  outline: 1px dashed var(--minBlack);\r\n}\r\n\r\n.react-page-editable-mode-preview .react-page-plugins-content-spacer {\r\n  outline: none;\r\n}\r\n\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:before,\r\n.react-page-plugins-content-spacer\r\n  > .react-resizable\r\n  > .react-resizable-handle:hover:before {\r\n  content: ' ';\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 100%;\r\n  bottom: 0;\r\n  right: 0;\r\n  cursor: n-resize;\r\n  line-height: 12px;\r\n  font-size: 1.5em;\r\n  height: 24px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDOztBQUNBO0VBQ0UsYUFBYTtBQUNmOztBQUVBOzs7Ozs7RUFNRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsU0FBUztFQUNULFFBQVE7RUFDUixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2QiLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlYWN0LXBhZ2UtcGx1Z2lucy1jb250ZW50LXNwYWNlciB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5yZWFjdC1wYWdlLWVkaXRhYmxlIC5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1zcGFjZXIge1xyXG4gIG91dGxpbmU6IDFweCBkYXNoZWQgdmFyKC0tbWluQmxhY2spO1xyXG59XHJcbi5yZWFjdC1wYWdlLWVkaXRhYmxlLW1vZGUtcHJldmlldyAucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc3BhY2VyIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4ucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtc3BhY2VyXHJcbiAgPiAucmVhY3QtcmVzaXphYmxlXHJcbiAgPiAucmVhY3QtcmVzaXphYmxlLWhhbmRsZTpiZWZvcmUsXHJcbi5yZWFjdC1wYWdlLXBsdWdpbnMtY29udGVudC1zcGFjZXJcclxuICA+IC5yZWFjdC1yZXNpemFibGVcclxuICA+IC5yZWFjdC1yZXNpemFibGUtaGFuZGxlOmhvdmVyOmJlZm9yZSB7XHJcbiAgY29udGVudDogJyAnO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGN1cnNvcjogbi1yZXNpemU7XHJcbiAgbGluZS1oZWlnaHQ6IDEycHg7XHJcbiAgZm9udC1zaXplOiAxLjVlbTtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbn1cclxuIl19 */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/video/lib/index.css":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/content/video/lib/index.css ***!
  \*********************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-content-video-placeholder {\r\n  position: relative;\r\n  width: 100%;\r\n  text-align: center;\r\n}\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9SZW5kZXJlci9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtdmlkZW8tcGxhY2Vob2xkZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */", "",{"version":3,"sources":["webpack://../packages/plugins/content/video/src/Renderer/index.css","webpack://../packages/plugins/content/video/lib/index.css"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,kBAAkB;AACpB;;ACEA,obAAob","sourcesContent":[".react-page-plugins-content-video-placeholder {\r\n  position: relative;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n",".react-page-plugins-content-video-placeholder {\r\n  position: relative;\r\n  width: 100%;\r\n  text-align: center;\r\n}\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9SZW5kZXJlci9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJpbmRleC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVhY3QtcGFnZS1wbHVnaW5zLWNvbnRlbnQtdmlkZW8tcGxhY2Vob2xkZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl19 */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/layout/background/lib/index.css":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!../packages/plugins/layout/background/lib/index.css ***!
  \*************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-layout-background {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  color: white;\r\n  padding: 12px;\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background > .react-page-row {\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background__backstretch {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwyQkFBMkI7RUFDM0IsNEJBQTRCO0VBQzVCLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0FBQ1giLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlYWN0LXBhZ2UtcGx1Z2lucy1sYXlvdXQtYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5yZWFjdC1wYWdlLXBsdWdpbnMtbGF5b3V0LWJhY2tncm91bmQgPiAucmVhY3QtcGFnZS1yb3cge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnJlYWN0LXBhZ2UtcGx1Z2lucy1sYXlvdXQtYmFja2dyb3VuZF9fYmFja3N0cmV0Y2gge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuIl19 */", "",{"version":3,"sources":["webpack://../packages/plugins/layout/background/src/index.css","webpack://../packages/plugins/layout/background/lib/index.css"],"names":[],"mappings":"AAAA;EACE,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;AACX;;ACEA,ogCAAogC","sourcesContent":[".react-page-plugins-layout-background {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  color: white;\r\n  padding: 12px;\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background > .react-page-row {\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background__backstretch {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n",".react-page-plugins-layout-background {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  color: white;\r\n  padding: 12px;\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background > .react-page-row {\r\n  position: relative;\r\n}\r\n\r\n.react-page-plugins-layout-background__backstretch {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwyQkFBMkI7RUFDM0IsNEJBQTRCO0VBQzVCLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0FBQ1giLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlYWN0LXBhZ2UtcGx1Z2lucy1sYXlvdXQtYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5yZWFjdC1wYWdlLXBsdWdpbnMtbGF5b3V0LWJhY2tncm91bmQgPiAucmVhY3QtcGFnZS1yb3cge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnJlYWN0LXBhZ2UtcGx1Z2lucy1sYXlvdXQtYmFja2dyb3VuZF9fYmFja3N0cmV0Y2gge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuIl19 */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/elements.css":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/elements.css ***!
  \*******************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".react-page-plugins-content-divider {\r\n  background-color: #aaa;\r\n  width: 100%;\r\n  height: 2px;\r\n  border: none;\r\n}\r\n\r\n.editable-area code,\r\n.editable-area pre {\r\n  font-family: monospace;\r\n  border-radius: 0.3em;\r\n  padding: 0.4em;\r\n}\r\n\r\n.editable-area code {\r\n  display: inline;\r\n  margin: 0 0.5em;\r\n  white-space: pre;\r\n}\r\n\r\n.editable-area pre {\r\n  display: block;\r\n  margin: 1em;\r\n}\r\n\r\n.editable-area ul,\r\n.editable-area ol {\r\n  margin: 1em 0;\r\n  list-style-type: inside;\r\n}\r\n\r\n.editable-area li {\r\n  margin: 0.2em 0 0.2em 1em;\r\n}\r\n\r\n.editable-area li p {\r\n  margin: 0;\r\n}\r\n\r\n.editable-area ol {\r\n  list-style-type: decimal;\r\n}\r\n\r\n.editable-area ul {\r\n  list-style-type: disc;\r\n}\r\n", "",{"version":3,"sources":["webpack://styles/elements.css"],"names":[],"mappings":"AAAA;EACE,sBAAsB;EACtB,WAAW;EACX,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,sBAAsB;EACtB,oBAAoB;EACpB,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,WAAW;AACb;;AAEA;;EAEE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,qBAAqB;AACvB","sourcesContent":[".react-page-plugins-content-divider {\r\n  background-color: #aaa;\r\n  width: 100%;\r\n  height: 2px;\r\n  border: none;\r\n}\r\n\r\n.editable-area code,\r\n.editable-area pre {\r\n  font-family: monospace;\r\n  border-radius: 0.3em;\r\n  padding: 0.4em;\r\n}\r\n\r\n.editable-area code {\r\n  display: inline;\r\n  margin: 0 0.5em;\r\n  white-space: pre;\r\n}\r\n\r\n.editable-area pre {\r\n  display: block;\r\n  margin: 1em;\r\n}\r\n\r\n.editable-area ul,\r\n.editable-area ol {\r\n  margin: 1em 0;\r\n  list-style-type: inside;\r\n}\r\n\r\n.editable-area li {\r\n  margin: 0.2em 0 0.2em 1em;\r\n}\r\n\r\n.editable-area li p {\r\n  margin: 0;\r\n}\r\n\r\n.editable-area ol {\r\n  list-style-type: decimal;\r\n}\r\n\r\n.editable-area ul {\r\n  list-style-type: disc;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/styles.css":
/*!*****************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/styles.css ***!
  \*****************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_cjs_js_ref_5_oneOf_6_1_node_modules_next_dist_compiled_postcss_loader_cjs_js_ref_5_oneOf_6_2_typography_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! -!../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./typography.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/typography.css");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_cjs_js_ref_5_oneOf_6_1_node_modules_next_dist_compiled_postcss_loader_cjs_js_ref_5_oneOf_6_2_elements_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! -!../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./elements.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/elements.css");
// Imports



var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_compiled_css_loader_cjs_js_ref_5_oneOf_6_1_node_modules_next_dist_compiled_postcss_loader_cjs_js_ref_5_oneOf_6_2_typography_css__WEBPACK_IMPORTED_MODULE_1__["default"]);
___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_compiled_css_loader_cjs_js_ref_5_oneOf_6_1_node_modules_next_dist_compiled_postcss_loader_cjs_js_ref_5_oneOf_6_2_elements_css__WEBPACK_IMPORTED_MODULE_2__["default"]);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "\r\nbody {\r\n  margin: 0px;\r\n\r\n  color: #333333;\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n\r\n  font-family: 'Open Sans', serif;\r\n}\r\n\r\np {\r\n  margin: 0 0 28px;\r\n}\r\n\r\npre {\r\n  overflow-x: auto;\r\n}\r\n\r\na {\r\n  color: #c73036;\r\n  font-family: Georgia, serif;\r\n  text-decoration: underline;\r\n}\r\n\r\na:hover {\r\n  color: #333333;\r\n  text-decoration: underline;\r\n}\r\n\r\n\r\n.react-page-cell-inner-leaf {\r\n  padding: 20px;\r\n}\r\n\r\n\r\n", "",{"version":3,"sources":["webpack://styles/styles.css"],"names":[],"mappings":";AAIA;EACE,WAAW;;EAEX,cAAc;EACd,eAAe;EACf,iBAAiB;;EAEjB,+BAA+B;AACjC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,2BAA2B;EAC3B,0BAA0B;AAC5B;;AAEA;EACE,cAAc;EACd,0BAA0B;AAC5B;;;AAGA;EACE,aAAa;AACf","sourcesContent":["\r\n@import './typography.css';\r\n@import './elements.css';\r\n\r\nbody {\r\n  margin: 0px;\r\n\r\n  color: #333333;\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n\r\n  font-family: 'Open Sans', serif;\r\n}\r\n\r\np {\r\n  margin: 0 0 28px;\r\n}\r\n\r\npre {\r\n  overflow-x: auto;\r\n}\r\n\r\na {\r\n  color: #c73036;\r\n  font-family: Georgia, serif;\r\n  text-decoration: underline;\r\n}\r\n\r\na:hover {\r\n  color: #333333;\r\n  text-decoration: underline;\r\n}\r\n\r\n\r\n.react-page-cell-inner-leaf {\r\n  padding: 20px;\r\n}\r\n\r\n\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/typography.css":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/typography.css ***!
  \*********************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/compiled/css-loader/api.js */ "../node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
___CSS_LOADER_EXPORT___.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=Open+Sans&display=swap);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "/* http://typecast.com/blog/a-more-modern-scale-for-web-typography */\r\n\r\n:root {\r\n  /* equivalent to 16px */\r\n  /* equivalent to 20px */\r\n}\r\n\r\nbody {\r\n  font-size: 100%;\r\n}\r\n\r\nbody,\r\ncaption,\r\nth,\r\ntd,\r\ninput,\r\ntextarea,\r\nselect,\r\noption,\r\nlegend,\r\nfieldset,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-size-adjust: 0.5;\r\n}\r\n\r\n.editable-area p,\r\n.editable-area h1,\r\n.editable-area h2,\r\n.editable-area h3,\r\n.editable-area h4,\r\n.editable-area h5,\r\n.editable-area h6,\r\n.editable-area blockquote,\r\n.editable-area pre {\r\n  margin: 1em 0 0.5em;\r\n}\r\n\r\n.editable-area p:first-child,\r\n.editable-area h1:first-child,\r\n.editable-area h2:first-child,\r\n.editable-area h3:first-child,\r\n.editable-area h4:first-child,\r\n.editable-area h5:first-child,\r\n.editable-area h6:first-child,\r\n.editable-area blockquote:first-child,\r\n.editable-area pre:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n.editable-area p:last-child,\r\n.editable-area h1:last-child,\r\n.editable-area h2:last-child,\r\n.editable-area h3:last-child,\r\n.editable-area h4:last-child,\r\n.editable-area h5:last-child,\r\n.editable-area h6:last-child,\r\n.editable-area blockquote:last-child,\r\n.editable-area pre:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.editable-area ul,\r\n.editable-area ol {\r\n  margin: 0;\r\n}\r\n\r\n.editable-area li {\r\n  margin: 1em 0;\r\n}\r\n\r\n.editable-area body {\r\n  font-size: 1em;\r\n  line-height: 1.25em;\r\n}\r\n\r\n.editable-area em {\r\n  font-style: italic;\r\n}\r\n\r\n.editable-area strong {\r\n  font-weight: 700;\r\n}\r\n\r\n.editable-area h1 strong,\r\n.editable-area h2 strong,\r\n.editable-area h3 strong,\r\n.editable-area h4 strong,\r\n.editable-area h5 strong,\r\n.editable-area h6 strong {\r\n  font-weight: 800;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area body {\r\n    font-size: 1em;\r\n    line-height: 1.375em;\r\n  }\r\n}\r\n\r\n.editable-area h1 {\r\n  margin: 1em 0 0.5em 0;\r\n  font-size: 2em;\r\n  line-height: 1.25em;\r\n}\r\n\r\n.editable-area h1:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h1 {\r\n    font-size: 2.5em; /* 2.5x body copy size = 40px */\r\n    line-height: 1.125;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h1 {\r\n    font-size: 3em; /* 3x body copy size = 48px */\r\n    line-height: 1.05; /* keep to a multiple of the 20px line height and something more appropriate for display headings */\r\n  }\r\n}\r\n\r\n.editable-area h2 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.625em; /* 1.625x body copy size = 26px */\r\n  line-height: 1.15384615; /* 30px / 26px */\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h2 {\r\n    font-size: 2em; /* 2x body copy size = 32px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h2 {\r\n    font-size: 2.25em; /* 2.25x body copy size = 36px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h3 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.375em; /* 1.375x body copy size = 22px */\r\n  line-height: 1.13636364; /* 25px / 22px */\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h3 {\r\n    font-size: 1.5em; /* 1.5x body copy size = 24px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h3 {\r\n    font-size: 1.75em; /* 1.75x body copy size = 28px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h4 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.125em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.11111111;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h4 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h4 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h5 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.085em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.055;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h5 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h5 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h6 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.055em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.005;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h6 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h6 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area blockquote {\r\n  font-size: 1em;\r\n  font-style: italic;\r\n  padding: 0 2.5em;\r\n}\r\n", "",{"version":3,"sources":["webpack://styles/typography.css"],"names":[],"mappings":"AAEA,oEAAoE;;AAEpE;EACE,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,eAAe;AACjB;;AAEA;;;;;;;;;;;;;;;;EAgBE,qBAAqB;AACvB;;AAEA;;;;;;;;;EASE,mBAAmB;AACrB;;AAEA;;;;;;;;;EASE,aAAa;AACf;;AAEA;;;;;;;;;EASE,gBAAgB;AAClB;;AAEA;;EAEE,SAAS;AACX;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;;;;EAME,gBAAgB;AAClB;;AAEA;EACE;IACE,cAAc;IACd,oBAAoB;EACtB;AACF;;AAEA;EACE,qBAAqB;EACrB,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,gBAAgB,EAAE,+BAA+B;IACjD,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,cAAc,EAAE,6BAA6B;IAC7C,iBAAiB,EAAE,mGAAmG;EACxH;AACF;;AAEA;EACE,uBAAuB;EACvB,kBAAkB,EAAE,iCAAiC;EACrD,uBAAuB,EAAE,gBAAgB;AAC3C;;AAEA;EACE;IACE,cAAc,EAAE,6BAA6B;IAC7C,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,iBAAiB,EAAE,gCAAgC;IACnD,mBAAmB;EACrB;AACF;;AAEA;EACE,uBAAuB;EACvB,kBAAkB,EAAE,iCAAiC;EACrD,uBAAuB,EAAE,gBAAgB;AAC3C;;AAEA;EACE;IACE,gBAAgB,EAAE,+BAA+B;IACjD,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,iBAAiB,EAAE,gCAAgC;IACnD,mBAAmB;EACrB;AACF;;AAEA;EACE,uBAAuB;EACvB,kBAAkB,EAAE,iCAAiC;EACrD,uBAAuB;AACzB;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE,uBAAuB;EACvB,kBAAkB,EAAE,iCAAiC;EACrD,kBAAkB;AACpB;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE,uBAAuB;EACvB,kBAAkB,EAAE,iCAAiC;EACrD,kBAAkB;AACpB;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,gBAAgB;AAClB","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\r\n\r\n/* http://typecast.com/blog/a-more-modern-scale-for-web-typography */\r\n\r\n:root {\r\n  /* equivalent to 16px */\r\n  /* equivalent to 20px */\r\n}\r\n\r\nbody {\r\n  font-size: 100%;\r\n}\r\n\r\nbody,\r\ncaption,\r\nth,\r\ntd,\r\ninput,\r\ntextarea,\r\nselect,\r\noption,\r\nlegend,\r\nfieldset,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-size-adjust: 0.5;\r\n}\r\n\r\n.editable-area p,\r\n.editable-area h1,\r\n.editable-area h2,\r\n.editable-area h3,\r\n.editable-area h4,\r\n.editable-area h5,\r\n.editable-area h6,\r\n.editable-area blockquote,\r\n.editable-area pre {\r\n  margin: 1em 0 0.5em;\r\n}\r\n\r\n.editable-area p:first-child,\r\n.editable-area h1:first-child,\r\n.editable-area h2:first-child,\r\n.editable-area h3:first-child,\r\n.editable-area h4:first-child,\r\n.editable-area h5:first-child,\r\n.editable-area h6:first-child,\r\n.editable-area blockquote:first-child,\r\n.editable-area pre:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n.editable-area p:last-child,\r\n.editable-area h1:last-child,\r\n.editable-area h2:last-child,\r\n.editable-area h3:last-child,\r\n.editable-area h4:last-child,\r\n.editable-area h5:last-child,\r\n.editable-area h6:last-child,\r\n.editable-area blockquote:last-child,\r\n.editable-area pre:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.editable-area ul,\r\n.editable-area ol {\r\n  margin: 0;\r\n}\r\n\r\n.editable-area li {\r\n  margin: 1em 0;\r\n}\r\n\r\n.editable-area body {\r\n  font-size: 1em;\r\n  line-height: 1.25em;\r\n}\r\n\r\n.editable-area em {\r\n  font-style: italic;\r\n}\r\n\r\n.editable-area strong {\r\n  font-weight: 700;\r\n}\r\n\r\n.editable-area h1 strong,\r\n.editable-area h2 strong,\r\n.editable-area h3 strong,\r\n.editable-area h4 strong,\r\n.editable-area h5 strong,\r\n.editable-area h6 strong {\r\n  font-weight: 800;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area body {\r\n    font-size: 1em;\r\n    line-height: 1.375em;\r\n  }\r\n}\r\n\r\n.editable-area h1 {\r\n  margin: 1em 0 0.5em 0;\r\n  font-size: 2em;\r\n  line-height: 1.25em;\r\n}\r\n\r\n.editable-area h1:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h1 {\r\n    font-size: 2.5em; /* 2.5x body copy size = 40px */\r\n    line-height: 1.125;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h1 {\r\n    font-size: 3em; /* 3x body copy size = 48px */\r\n    line-height: 1.05; /* keep to a multiple of the 20px line height and something more appropriate for display headings */\r\n  }\r\n}\r\n\r\n.editable-area h2 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.625em; /* 1.625x body copy size = 26px */\r\n  line-height: 1.15384615; /* 30px / 26px */\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h2 {\r\n    font-size: 2em; /* 2x body copy size = 32px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h2 {\r\n    font-size: 2.25em; /* 2.25x body copy size = 36px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h3 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.375em; /* 1.375x body copy size = 22px */\r\n  line-height: 1.13636364; /* 25px / 22px */\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h3 {\r\n    font-size: 1.5em; /* 1.5x body copy size = 24px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h3 {\r\n    font-size: 1.75em; /* 1.75x body copy size = 28px */\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h4 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.125em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.11111111;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h4 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h4 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h5 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.085em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.055;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h5 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h5 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area h6 {\r\n  margin: 0.8em 0 0.5em 0;\r\n  font-size: 1.055em; /* 1.125x body copy size = 18px */\r\n  line-height: 1.005;\r\n}\r\n\r\n@media only screen and (max-width: 64em) and (min-width: 48em) {\r\n  .editable-area h6 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 48em) {\r\n  .editable-area h6 {\r\n    line-height: 1.25em;\r\n  }\r\n}\r\n\r\n.editable-area blockquote {\r\n  font-size: 1em;\r\n  font-style: italic;\r\n  padding: 0 2.5em;\r\n}\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../node_modules/next/dist/compiled/css-loader/getUrl.js":
/*!***************************************************************!*\
  !*** ../node_modules/next/dist/compiled/css-loader/getUrl.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports=function(){"use strict";var e={91:function(e){e.exports=function(e,r){if(!r){r={}}e=e&&e.__esModule?e.default:e;if(typeof e!=="string"){return e}if(/^['"].*['"]$/.test(e)){e=e.slice(1,-1)}if(r.hash){e+=r.hash}if(/["'() \t\n]/.test(e)||r.needQuotes){return'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"')}return e}}};var r={};function __nccwpck_require__(t){if(r[t]){return r[t].exports}var _=r[t]={exports:{}};var n=true;try{e[t](_,_.exports,__nccwpck_require__);n=false}finally{if(n)delete r[t]}return _.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(91)}();
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "../node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Tokenize input string.
 */
function lexer(str) {
    var tokens = [];
    var i = 0;
    while (i < str.length) {
        var char = str[i];
        if (char === "*" || char === "+" || char === "?") {
            tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
            continue;
        }
        if (char === "\\") {
            tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
            continue;
        }
        if (char === "{") {
            tokens.push({ type: "OPEN", index: i, value: str[i++] });
            continue;
        }
        if (char === "}") {
            tokens.push({ type: "CLOSE", index: i, value: str[i++] });
            continue;
        }
        if (char === ":") {
            var name = "";
            var j = i + 1;
            while (j < str.length) {
                var code = str.charCodeAt(j);
                if (
                // `0-9`
                (code >= 48 && code <= 57) ||
                    // `A-Z`
                    (code >= 65 && code <= 90) ||
                    // `a-z`
                    (code >= 97 && code <= 122) ||
                    // `_`
                    code === 95) {
                    name += str[j++];
                    continue;
                }
                break;
            }
            if (!name)
                throw new TypeError("Missing parameter name at " + i);
            tokens.push({ type: "NAME", index: i, value: name });
            i = j;
            continue;
        }
        if (char === "(") {
            var count = 1;
            var pattern = "";
            var j = i + 1;
            if (str[j] === "?") {
                throw new TypeError("Pattern cannot start with \"?\" at " + j);
            }
            while (j < str.length) {
                if (str[j] === "\\") {
                    pattern += str[j++] + str[j++];
                    continue;
                }
                if (str[j] === ")") {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                }
                else if (str[j] === "(") {
                    count++;
                    if (str[j + 1] !== "?") {
                        throw new TypeError("Capturing groups are not allowed at " + j);
                    }
                }
                pattern += str[j++];
            }
            if (count)
                throw new TypeError("Unbalanced pattern at " + i);
            if (!pattern)
                throw new TypeError("Missing pattern at " + i);
            tokens.push({ type: "PATTERN", index: i, value: pattern });
            i = j;
            continue;
        }
        tokens.push({ type: "CHAR", index: i, value: str[i++] });
    }
    tokens.push({ type: "END", index: i, value: "" });
    return tokens;
}
/**
 * Parse a string for the raw tokens.
 */
function parse(str, options) {
    if (options === void 0) { options = {}; }
    var tokens = lexer(str);
    var _a = options.prefixes, prefixes = _a === void 0 ? "./" : _a;
    var defaultPattern = "[^" + escapeString(options.delimiter || "/#?") + "]+?";
    var result = [];
    var key = 0;
    var i = 0;
    var path = "";
    var tryConsume = function (type) {
        if (i < tokens.length && tokens[i].type === type)
            return tokens[i++].value;
    };
    var mustConsume = function (type) {
        var value = tryConsume(type);
        if (value !== undefined)
            return value;
        var _a = tokens[i], nextType = _a.type, index = _a.index;
        throw new TypeError("Unexpected " + nextType + " at " + index + ", expected " + type);
    };
    var consumeText = function () {
        var result = "";
        var value;
        // tslint:disable-next-line
        while ((value = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR"))) {
            result += value;
        }
        return result;
    };
    while (i < tokens.length) {
        var char = tryConsume("CHAR");
        var name = tryConsume("NAME");
        var pattern = tryConsume("PATTERN");
        if (name || pattern) {
            var prefix = char || "";
            if (prefixes.indexOf(prefix) === -1) {
                path += prefix;
                prefix = "";
            }
            if (path) {
                result.push(path);
                path = "";
            }
            result.push({
                name: name || key++,
                prefix: prefix,
                suffix: "",
                pattern: pattern || defaultPattern,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        var value = char || tryConsume("ESCAPED_CHAR");
        if (value) {
            path += value;
            continue;
        }
        if (path) {
            result.push(path);
            path = "";
        }
        var open = tryConsume("OPEN");
        if (open) {
            var prefix = consumeText();
            var name_1 = tryConsume("NAME") || "";
            var pattern_1 = tryConsume("PATTERN") || "";
            var suffix = consumeText();
            mustConsume("CLOSE");
            result.push({
                name: name_1 || (pattern_1 ? key++ : ""),
                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
                prefix: prefix,
                suffix: suffix,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        mustConsume("END");
    }
    return result;
}
exports.parse = parse;
/**
 * Compile a string to a template function for the path.
 */
function compile(str, options) {
    return tokensToFunction(parse(str, options), options);
}
exports.compile = compile;
/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction(tokens, options) {
    if (options === void 0) { options = {}; }
    var reFlags = flags(options);
    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;
    // Compile all the tokens into regexps.
    var matches = tokens.map(function (token) {
        if (typeof token === "object") {
            return new RegExp("^(?:" + token.pattern + ")$", reFlags);
        }
    });
    return function (data) {
        var path = "";
        for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            if (typeof token === "string") {
                path += token;
                continue;
            }
            var value = data ? data[token.name] : undefined;
            var optional = token.modifier === "?" || token.modifier === "*";
            var repeat = token.modifier === "*" || token.modifier === "+";
            if (Array.isArray(value)) {
                if (!repeat) {
                    throw new TypeError("Expected \"" + token.name + "\" to not repeat, but got an array");
                }
                if (value.length === 0) {
                    if (optional)
                        continue;
                    throw new TypeError("Expected \"" + token.name + "\" to not be empty");
                }
                for (var j = 0; j < value.length; j++) {
                    var segment = encode(value[j], token);
                    if (validate && !matches[i].test(segment)) {
                        throw new TypeError("Expected all \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                    }
                    path += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value === "string" || typeof value === "number") {
                var segment = encode(String(value), token);
                if (validate && !matches[i].test(segment)) {
                    throw new TypeError("Expected \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                }
                path += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional)
                continue;
            var typeOfMessage = repeat ? "an array" : "a string";
            throw new TypeError("Expected \"" + token.name + "\" to be " + typeOfMessage);
        }
        return path;
    };
}
exports.tokensToFunction = tokensToFunction;
/**
 * Create path match function from `path-to-regexp` spec.
 */
function match(str, options) {
    var keys = [];
    var re = pathToRegexp(str, keys, options);
    return regexpToFunction(re, keys, options);
}
exports.match = match;
/**
 * Create a path match function from `path-to-regexp` output.
 */
function regexpToFunction(re, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;
    return function (pathname) {
        var m = re.exec(pathname);
        if (!m)
            return false;
        var path = m[0], index = m.index;
        var params = Object.create(null);
        var _loop_1 = function (i) {
            // tslint:disable-next-line
            if (m[i] === undefined)
                return "continue";
            var key = keys[i - 1];
            if (key.modifier === "*" || key.modifier === "+") {
                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {
                    return decode(value, key);
                });
            }
            else {
                params[key.name] = decode(m[i], key);
            }
        };
        for (var i = 1; i < m.length; i++) {
            _loop_1(i);
        }
        return { path: path, index: index, params: params };
    };
}
exports.regexpToFunction = regexpToFunction;
/**
 * Escape a regular expression string.
 */
function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
/**
 * Get the flags for a regexp from the options.
 */
function flags(options) {
    return options && options.sensitive ? "" : "i";
}
/**
 * Pull out keys from a regexp.
 */
function regexpToRegexp(path, keys) {
    if (!keys)
        return path;
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) {
        for (var i = 0; i < groups.length; i++) {
            keys.push({
                name: i,
                prefix: "",
                suffix: "",
                modifier: "",
                pattern: ""
            });
        }
    }
    return path;
}
/**
 * Transform an array into a regexp.
 */
function arrayToRegexp(paths, keys, options) {
    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });
    return new RegExp("(?:" + parts.join("|") + ")", flags(options));
}
/**
 * Create a path regexp from string input.
 */
function stringToRegexp(path, keys, options) {
    return tokensToRegexp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 */
function tokensToRegexp(tokens, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;
    var endsWith = "[" + escapeString(options.endsWith || "") + "]|$";
    var delimiter = "[" + escapeString(options.delimiter || "/#?") + "]";
    var route = start ? "^" : "";
    // Iterate over the tokens and create our regexp string.
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof token === "string") {
            route += escapeString(encode(token));
        }
        else {
            var prefix = escapeString(encode(token.prefix));
            var suffix = escapeString(encode(token.suffix));
            if (token.pattern) {
                if (keys)
                    keys.push(token);
                if (prefix || suffix) {
                    if (token.modifier === "+" || token.modifier === "*") {
                        var mod = token.modifier === "*" ? "?" : "";
                        route += "(?:" + prefix + "((?:" + token.pattern + ")(?:" + suffix + prefix + "(?:" + token.pattern + "))*)" + suffix + ")" + mod;
                    }
                    else {
                        route += "(?:" + prefix + "(" + token.pattern + ")" + suffix + ")" + token.modifier;
                    }
                }
                else {
                    route += "(" + token.pattern + ")" + token.modifier;
                }
            }
            else {
                route += "(?:" + prefix + suffix + ")" + token.modifier;
            }
        }
    }
    if (end) {
        if (!strict)
            route += delimiter + "?";
        route += !options.endsWith ? "$" : "(?=" + endsWith + ")";
    }
    else {
        var endToken = tokens[tokens.length - 1];
        var isEndDelimited = typeof endToken === "string"
            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1
            : // tslint:disable-next-line
                endToken === undefined;
        if (!strict) {
            route += "(?:" + delimiter + "(?=" + endsWith + "))?";
        }
        if (!isEndDelimited) {
            route += "(?=" + delimiter + "|" + endsWith + ")";
        }
    }
    return new RegExp(route, flags(options));
}
exports.tokensToRegexp = tokensToRegexp;
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */
function pathToRegexp(path, keys, options) {
    if (path instanceof RegExp)
        return regexpToRegexp(path, keys);
    if (Array.isArray(path))
        return arrayToRegexp(path, keys, options);
    return stringToRegexp(path, keys, options);
}
exports.pathToRegexp = pathToRegexp;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../node_modules/next/dist/compiled/webpack/harmony-module.js":
/*!********************************************************************!*\
  !*** ../node_modules/next/dist/compiled/webpack/harmony-module.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 931:
/***/ (function(module) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	__nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __nccwpck_require__(931);
/******/ })()
;
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "../node_modules/next/dist/compiled/webpack/module.js":
/*!************************************************************!*\
  !*** ../node_modules/next/dist/compiled/webpack/module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 880:
/***/ (function(module) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	__nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __nccwpck_require__(880);
/******/ })()
;
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.normalizeLocalePath = normalizeLocalePath;

function normalizeLocalePath(pathname, locales) {
  var detectedLocale; // first item will be empty string from splitting at first char

  var pathnameParts = pathname.split('/');
  (locales || []).some(function (locale) {
    if (pathnameParts[1].toLowerCase() === locale.toLowerCase()) {
      detectedLocale = locale;
      pathnameParts.splice(1, 1);
      pathname = pathnameParts.join('/') || '/';
      return true;
    }

    return false;
  });
  return {
    pathname: pathname,
    detectedLocale: detectedLocale
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/mitt.js":
/*!*********************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/mitt.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  var all = Object.create(null);
  return {
    on: function on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off: function off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit: function emit(type) {
      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        evts[_key - 1] = arguments[_key];
      }

      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(function (handler) {
        handler.apply(void 0, evts);
      });
    }
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router-context.js":
/*!*******************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router-context.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.RouterContext = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "../node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var RouterContext = /*#__PURE__*/_react["default"].createContext(null);

exports.RouterContext = RouterContext;

if (true) {
  RouterContext.displayName = 'RouterContext';
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/router.js":
/*!******************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/router.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/regenerator */ "../node_modules/next/node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator */ "../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _classCallCheck = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck */ "../node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/createClass */ "../node_modules/next/node_modules/@babel/runtime/helpers/createClass.js");

var _slicedToArray = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.getDomainLocale = getDomainLocale;
exports.addLocale = addLocale;
exports.delLocale = delLocale;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.interpolateAs = interpolateAs;
exports.resolveHref = resolveHref;
exports["default"] = void 0;

var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "../node_modules/next/dist/client/normalize-trailing-slash.js");

var _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ "../node_modules/next/dist/client/route-loader.js");

var _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ "../node_modules/next/dist/next-server/server/denormalize-page-path.js");

var _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ "../node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js");

var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "../node_modules/next/dist/next-server/lib/mitt.js"));

var _utils = __webpack_require__(/*! ../utils */ "../node_modules/next/dist/next-server/lib/utils.js");

var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "../node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "../node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var _querystring = __webpack_require__(/*! ./utils/querystring */ "../node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ "../node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js"));

var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "../node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "../node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


var detectDomainLocale;

if (false) {}

var basePath =  false || '';

function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}

function addPathPrefix(path, prefix) {
  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : "".concat(prefix).concat(pathNoQueryHash(path) === '/' ? path.substring(1) : path) : path;
}

function getDomainLocale(path, locale, locales, domainLocales) {
  if (false) { var detectedDomain; }

  return false;
}

function addLocale(path, locale, defaultLocale) {
  if (false) {}

  return path;
}

function delLocale(path, locale) {
  if (false) {}

  return path;
}

function pathNoQueryHash(path) {
  var queryIndex = path.indexOf('?');
  var hashIndex = path.indexOf('#');

  if (queryIndex > -1 || hashIndex > -1) {
    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);
  }

  return path;
}

function hasBasePath(path) {
  path = pathNoQueryHash(path);
  return path === basePath || path.startsWith(basePath + '/');
}

function addBasePath(path) {
  // we only add the basepath on relative urls
  return addPathPrefix(path, basePath);
}

function delBasePath(path) {
  path = path.slice(basePath.length);
  if (!path.startsWith('/')) path = "/".concat(path);
  return path;
}
/**
* Detects whether a given url is routable by the Next.js router (browser only).
*/


function isLocalURL(url) {
  // prevent a hydration mismatch on href for url with anchor refs
  if (url.startsWith('/') || url.startsWith('#')) return true;

  try {
    // absolute urls can be local if they are on the same origin
    var locationOrigin = (0, _utils.getLocationOrigin)();
    var resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}

function interpolateAs(route, asPathname, query) {
  var interpolatedRoute = '';
  var dynamicRegex = (0, _routeRegex.getRouteRegex)(route);
  var dynamicGroups = dynamicRegex.groups;
  var dynamicMatches = // Try to match the dynamic route against the asPath
  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href
  // TODO: should this take priority; also need to change in the router.
  query;
  interpolatedRoute = route;
  var params = Object.keys(dynamicGroups);

  if (!params.every(function (param) {
    var value = dynamicMatches[param] || '';
    var _dynamicGroups$param = dynamicGroups[param],
        repeat = _dynamicGroups$param.repeat,
        optional = _dynamicGroups$param.optional; // support single-level catch-all
    // TODO: more robust handling for user-error (passing `/`)

    var replaced = "[".concat(repeat ? '...' : '').concat(param, "]");

    if (optional) {
      replaced = "".concat(!value ? '/' : '', "[").concat(replaced, "]");
    }

    if (repeat && !Array.isArray(value)) value = [value];
    return (optional || param in dynamicMatches) && ( // Interpolate group into data URL if present
    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just
    // path delimiter escaped since they are being inserted
    // into the URL and we expect URL encoded segments
    // when parsing dynamic route params
    function (segment) {
      return encodeURIComponent(segment);
    }).join('/') : encodeURIComponent(value)) || '/');
  })) {
    interpolatedRoute = ''; // did not satisfy all requirements
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
  }

  return {
    params: params,
    result: interpolatedRoute
  };
}

function omitParmsFromQuery(query, params) {
  var filteredQuery = {};
  Object.keys(query).forEach(function (key) {
    if (!params.includes(key)) {
      filteredQuery[key] = query[key];
    }
  });
  return filteredQuery;
}
/**
* Resolves a given hyperlink with a certain router state (basePath not included).
* Preserves absolute urls.
*/


function resolveHref(currentPath, href, resolveAs) {
  // we use a dummy base url for relative urls
  var base = new URL(currentPath, 'http://n');
  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href); // Return because it cannot be routed by the Next.js router

  if (!isLocalURL(urlAsString)) {
    return resolveAs ? [urlAsString] : urlAsString;
  }

  try {
    var finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);
    var interpolatedAs = '';

    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
      var query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);

      var _interpolateAs = interpolateAs(finalUrl.pathname, finalUrl.pathname, query),
          result = _interpolateAs.result,
          params = _interpolateAs.params;

      if (result) {
        interpolatedAs = (0, _utils.formatWithValidation)({
          pathname: result,
          hash: finalUrl.hash,
          query: omitParmsFromQuery(query, params)
        });
      }
    } // if the origin didn't change, it means we received a relative href


    var resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;
  } catch (_) {
    return resolveAs ? [urlAsString] : urlAsString;
  }
}

function stripOrigin(url) {
  var origin = (0, _utils.getLocationOrigin)();
  return url.startsWith(origin) ? url.substring(origin.length) : url;
}

function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  var _resolveHref = resolveHref(router.pathname, url, true),
      _resolveHref2 = _slicedToArray(_resolveHref, 2),
      resolvedHref = _resolveHref2[0],
      resolvedAs = _resolveHref2[1];

  var origin = (0, _utils.getLocationOrigin)();
  var hrefHadOrigin = resolvedHref.startsWith(origin);
  var asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);
  resolvedHref = stripOrigin(resolvedHref);
  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;
  var preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);
  var preparedAs = as ? stripOrigin(resolveHref(router.pathname, as)) : resolvedAs || resolvedHref;
  return {
    url: preparedUrl,
    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)
  };
}

function resolveDynamicRoute(pathname, pages) {
  var cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(pathname));

  if (cleanPathname === '/404' || cleanPathname === '/_error') {
    return pathname;
  } // handle resolving href for dynamic routes


  if (!pages.includes(cleanPathname)) {
    // eslint-disable-next-line array-callback-return
    pages.some(function (page) {
      if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {
        pathname = page;
        return true;
      }
    });
  }

  return (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
}

var manualScrollRestoration =  false && false;
var SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');

function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` won’t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(function (res) {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }

      if (res.status === 404) {
        return res.json().then(function (data) {
          if (data.notFound) {
            return {
              notFound: SSG_DATA_NOT_FOUND
            };
          }

          throw new Error("Failed to load static props");
        });
      }

      throw new Error("Failed to load static props");
    }

    return res.json();
  });
}

function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1)["catch"](function (err) {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      (0, _routeLoader.markAssetError)(err);
    }

    throw err;
  });
}

var Router = /*#__PURE__*/function () {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  // In-flight Server Data Requests, for deduping
  function Router(_pathname, _query, _as, _ref) {
    var _this = this;

    var initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        wrapApp = _ref.wrapApp,
        Component = _ref.Component,
        err = _ref.err,
        subscription = _ref.subscription,
        isFallback = _ref.isFallback,
        locale = _ref.locale,
        locales = _ref.locales,
        defaultLocale = _ref.defaultLocale,
        domainLocales = _ref.domainLocales,
        isPreview = _ref.isPreview;

    _classCallCheck(this, Router);

    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sdr = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;
    this._shallow = void 0;
    this.locale = void 0;
    this.locales = void 0;
    this.defaultLocale = void 0;
    this.domainLocales = void 0;
    this.isReady = void 0;
    this.isPreview = void 0;
    this.isLocaleDomain = void 0;
    this._idx = 0;

    this.onPopState = function (e) {
      var state = e.state;

      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var _pathname2 = _this.pathname,
            query = _this.query;

        _this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname2),
          query: query
        }), (0, _utils.getURL)());

        return;
      }

      if (!state.__N) {
        return;
      }

      var forcedScroll;
      var url = state.url,
          as = state.as,
          options = state.options,
          idx = state.idx;

      if (false) { var v; }

      _this._idx = idx;

      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),
          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (_this._bps && !_this._bps(state)) {
        return;
      }

      _this.change('replaceState', url, as, Object.assign({}, options, {
        shallow: options.shallow && _this._shallow,
        locale: options.locale || _this.defaultLocale
      }), forcedScroll);
    }; // represents the current component key


    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component: Component,
        initial: true,
        props: initialProps,
        err: err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App,
      styleSheets: [
        /* /_app does not need its stylesheets managed */
      ]
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    var autoExportDynamic = (0, _isDynamic.isDynamicRoute)(_pathname) && self.__NEXT_DATA__.autoExport;

    this.asPath = autoExportDynamic ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;
    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || !autoExportDynamic && !self.location.search);
    this.isPreview = !!isPreview;
    this.isLocaleDomain = false;

    if (false) {}

    if (true) {
      // make sure "as" doesn't start with double slashes or else it can
      // throw an error as it's considered invalid
      if (_as.substr(0, 2) !== '//') {
        // in order for `e.state` to work on the `onpopstate` event
        // we have to register the initial route upon initialization
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname),
          query: _query
        }), (0, _utils.getURL)(), {
          locale: locale
        });
      }

      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available
      // otherwise fallback to browser's default handling

      if (false) {}
    }
  }

  _createClass(Router, [{
    key: "reload",
    value: function reload() {
      window.location.reload();
    }
    /**
    * Go back in history
    */

  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
    /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "push",
    value: function push(url, as) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (false) {}

      ;

      var _prepareUrlAs = prepareUrlAs(this, url, as);

      url = _prepareUrlAs.url;
      as = _prepareUrlAs.as;
      return this.change('pushState', url, as, options);
    }
    /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "replace",
    value: function replace(url, as) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs2 = prepareUrlAs(this, url, as);

      url = _prepareUrlAs2.url;
      as = _prepareUrlAs2.as;
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function () {
      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options, forcedScroll) {
        var _options$scroll, localeChange, parsedAs, localePathResult, didNavigate, _this$locales, detectedDomain, asNoBasePath, _options$shallow, shallow, routeProps, cleanedAs, parsed, pathname, query, pages, rewrites, _yield, resolvedAs, rewritesResult, route, _parsedAs, asPathname, routeRegex, routeMatch, shouldInterpolate, interpolatedAs, missingParams, _self$__NEXT_DATA__$p, _self$__NEXT_DATA__$p2, routeInfo, _routeInfo, error, props, __N_SSG, __N_SSP, destination, parsedHref, _prepareUrlAs3, newUrl, newAs, notFoundRoute, appComp, isValidShallowRoute;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (isLocalURL(url)) {
                  _context.next = 3;
                  break;
                }

                window.location.href = url;
                return _context.abrupt("return", false);

              case 3:
                // for static pages with query params in the URL we delay
                // marking the router ready until after the query is updated
                if (options._h) {
                  this.isReady = true;
                } // Default to scroll reset behavior unless explicitly specified to be
                // `false`! This makes the behavior between using `Router#push` and a
                // `<Link />` consistent.


                options.scroll = !!((_options$scroll = options.scroll) != null ? _options$scroll : true);
                localeChange = options.locale !== this.locale;

                if (true) {
                  _context.next = 18;
                  break;
                }

                this.locale = options.locale === false ? this.defaultLocale : options.locale || this.locale;

                if (typeof options.locale === 'undefined') {
                  options.locale = this.locale;
                }

                parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(hasBasePath(as) ? delBasePath(as) : as);
                localePathResult = (0, _normalizeLocalePath.normalizeLocalePath)(parsedAs.pathname, this.locales);

                if (localePathResult.detectedLocale) {
                  this.locale = localePathResult.detectedLocale;
                  parsedAs.pathname = addBasePath(parsedAs.pathname);
                  as = (0, _utils.formatWithValidation)(parsedAs);
                  url = addBasePath((0, _normalizeLocalePath.normalizeLocalePath)(hasBasePath(url) ? delBasePath(url) : url, this.locales).pathname);
                }

                didNavigate = false; // we need to wrap this in the env check again since regenerator runtime
                // moves this on its own due to the return

                if (false) {}

                detectedDomain = detectDomainLocale(this.domainLocales, undefined, this.locale); // we need to wrap this in the env check again since regenerator runtime
                // moves this on its own due to the return

                if (false) {}

                if (!didNavigate) {
                  _context.next = 18;
                  break;
                }

                return _context.abrupt("return", new Promise(function () {}));

              case 18:
                if (!options._h) {
                  this.isSsr = false;
                } // marking route changes as a navigation start entry


                if (_utils.ST) {
                  performance.mark('routeChange');
                }

                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;
                routeProps = {
                  shallow: shallow
                };

                if (this._inFlightRoute) {
                  this.abortComponentLoad(this._inFlightRoute, routeProps);
                }

                as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));
                cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);
                this._inFlightRoute = as; // If the url change is only related to a hash change
                // We should not proceed. We should only change the state.
                // WARNING: `_h` is an internal option for handing Next.js client-side
                // hydration. Your app should _never_ use this property. It may change at
                // any time without notice.

                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {
                  _context.next = 34;
                  break;
                }

                this.asPath = cleanedAs;
                Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?

                this.changeState(method, url, as, options);
                this.scrollToHash(cleanedAs);
                this.notify(this.components[this.route], null);
                Router.events.emit('hashChangeComplete', as, routeProps);
                return _context.abrupt("return", true);

              case 34:
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                pathname = parsed.pathname, query = parsed.query; // The build manifest needs to be loaded before auto-static dynamic pages
                // get their query parameters to allow ensuring they can be parsed properly
                // when rewritten to

                _context.prev = 36;
                _context.next = 39;
                return this.pageLoader.getPageList();

              case 39:
                pages = _context.sent;
                _context.next = 42;
                return (0, _routeLoader.getClientBuildManifest)();

              case 42:
                _yield = _context.sent;
                rewrites = _yield.__rewrites;
                _context.next = 50;
                break;

              case 46:
                _context.prev = 46;
                _context.t0 = _context["catch"](36);
                // If we fail to resolve the page list or client-build manifest, we must
                // do a server-side transition:
                window.location.href = as;
                return _context.abrupt("return", false);

              case 50:
                // If asked to change the current URL we should reload the current page
                // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                // We also need to set the method = replaceState always
                // as this should not go into the history (That's how browsers work)
                // We should compare the new asPath to the current asPath, not the url
                if (!this.urlIsNew(cleanedAs) && !localeChange) {
                  method = 'replaceState';
                } // we need to resolve the as value using rewrites for dynamic SSG
                // pages to allow building the data URL correctly


                resolvedAs = as; // url and as should always be prefixed with basePath by this
                // point by either next/link or router.push/replace so strip the
                // basePath from the pathname to match the pages dir 1-to-1

                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname;

                if (pathname !== '/_error') {
                  if ( true && as.startsWith('/')) {
                    rewritesResult = (0, _resolveRewrites["default"])(addBasePath(addLocale(delBasePath(as), this.locale)), pages, rewrites, query, function (p) {
                      return resolveDynamicRoute(p, pages);
                    }, this.locales);
                    resolvedAs = rewritesResult.asPath;

                    if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {
                      // if this directly matches a page we need to update the href to
                      // allow the correct page chunk to be loaded
                      pathname = rewritesResult.resolvedHref;
                      parsed.pathname = pathname;
                      url = (0, _utils.formatWithValidation)(parsed);
                    }
                  } else {
                    parsed.pathname = resolveDynamicRoute(pathname, pages);

                    if (parsed.pathname !== pathname) {
                      pathname = parsed.pathname;
                      url = (0, _utils.formatWithValidation)(parsed);
                    }
                  }
                }

                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);

                if (isLocalURL(as)) {
                  _context.next = 60;
                  break;
                }

                if (false) {}

                throw new Error("Invalid href: \"".concat(url, "\" and as: \"").concat(as, "\", received relative href and external as") + "\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as");

              case 58:
                window.location.href = as;
                return _context.abrupt("return", false);

              case 60:
                resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);

                if (!(0, _isDynamic.isDynamicRoute)(route)) {
                  _context.next = 76;
                  break;
                }

                _parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);
                asPathname = _parsedAs.pathname;
                routeRegex = (0, _routeRegex.getRouteRegex)(route);
                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);
                shouldInterpolate = route === asPathname;
                interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};

                if (!(!routeMatch || shouldInterpolate && !interpolatedAs.result)) {
                  _context.next = 75;
                  break;
                }

                missingParams = Object.keys(routeRegex.groups).filter(function (param) {
                  return !query[param];
                });

                if (!(missingParams.length > 0)) {
                  _context.next = 73;
                  break;
                }

                if (true) {
                  console.warn("".concat(shouldInterpolate ? "Interpolating href" : "Mismatching `as` and `href`", " failed to manually provide ") + "the params: ".concat(missingParams.join(', '), " in the `href`'s `query`"));
                }

                throw new Error((shouldInterpolate ? "The provided `href` (".concat(url, ") value is missing query values (").concat(missingParams.join(', '), ") to be interpolated properly. ") : "The provided `as` value (".concat(asPathname, ") is incompatible with the `href` value (").concat(route, "). ")) + "Read more: https://nextjs.org/docs/messages/".concat(shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'));

              case 73:
                _context.next = 76;
                break;

              case 75:
                if (shouldInterpolate) {
                  as = (0, _utils.formatWithValidation)(Object.assign({}, _parsedAs, {
                    pathname: interpolatedAs.result,
                    query: omitParmsFromQuery(query, interpolatedAs.params)
                  }));
                } else {
                  // Merge params into `query`, overwriting any specified in search
                  Object.assign(query, routeMatch);
                }

              case 76:
                Router.events.emit('routeChangeStart', as, routeProps);
                _context.prev = 77;
                _context.next = 80;
                return this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps);

              case 80:
                routeInfo = _context.sent;
                _routeInfo = routeInfo, error = _routeInfo.error, props = _routeInfo.props, __N_SSG = _routeInfo.__N_SSG, __N_SSP = _routeInfo.__N_SSP; // handle redirect on client-transition

                if (!((__N_SSG || __N_SSP) && props)) {
                  _context.next = 107;
                  break;
                }

                if (!(props.pageProps && props.pageProps.__N_REDIRECT)) {
                  _context.next = 93;
                  break;
                }

                destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt
                // client-navigation if it is falling back to hard navigation if
                // it's not

                if (!destination.startsWith('/')) {
                  _context.next = 91;
                  break;
                }

                parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
                parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);

                if (!pages.includes(parsedHref.pathname)) {
                  _context.next = 91;
                  break;
                }

                _prepareUrlAs3 = prepareUrlAs(this, destination, destination), newUrl = _prepareUrlAs3.url, newAs = _prepareUrlAs3.as;
                return _context.abrupt("return", this.change(method, newUrl, newAs, options));

              case 91:
                window.location.href = destination;
                return _context.abrupt("return", new Promise(function () {}));

              case 93:
                this.isPreview = !!props.__N_PREVIEW; // handle SSG data 404

                if (!(props.notFound === SSG_DATA_NOT_FOUND)) {
                  _context.next = 107;
                  break;
                }

                _context.prev = 95;
                _context.next = 98;
                return this.fetchComponent('/404');

              case 98:
                notFoundRoute = '/404';
                _context.next = 104;
                break;

              case 101:
                _context.prev = 101;
                _context.t1 = _context["catch"](95);
                notFoundRoute = '/_error';

              case 104:
                _context.next = 106;
                return this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {
                  shallow: false
                });

              case 106:
                routeInfo = _context.sent;

              case 107:
                Router.events.emit('beforeHistoryChange', as, routeProps);
                this.changeState(method, url, as, options);

                if (true) {
                  appComp = this.components['/_app'].Component;
                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
                } // shallow routing is only allowed for same page URL changes.


                isValidShallowRoute = options.shallow && this.route === route;

                if (options._h && pathname === '/_error' && ((_self$__NEXT_DATA__$p = self.__NEXT_DATA__.props) == null ? void 0 : (_self$__NEXT_DATA__$p2 = _self$__NEXT_DATA__$p.pageProps) == null ? void 0 : _self$__NEXT_DATA__$p2.statusCode) === 500 && props != null && props.pageProps) {
                  // ensure statusCode is still correct for static 500 page
                  // when updating query information
                  props.pageProps.statusCode = 500;
                }

                _context.next = 114;
                return this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll || (isValidShallowRoute || !options.scroll ? null : {
                  x: 0,
                  y: 0
                }))["catch"](function (e) {
                  if (e.cancelled) error = error || e;else throw e;
                });

              case 114:
                if (!error) {
                  _context.next = 117;
                  break;
                }

                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);
                throw error;

              case 117:
                if (false) {}

                Router.events.emit('routeChangeComplete', as, routeProps);
                return _context.abrupt("return", true);

              case 122:
                _context.prev = 122;
                _context.t2 = _context["catch"](77);

                if (!_context.t2.cancelled) {
                  _context.next = 126;
                  break;
                }

                return _context.abrupt("return", false);

              case 126:
                throw _context.t2;

              case 127:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[36, 46], [77, 122], [95, 101]]);
      }));

      function change(_x, _x2, _x3, _x4, _x5) {
        return _change.apply(this, arguments);
      }

      return change;
    }()
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
        this._shallow = options.shallow;
        window.history[method]({
          url: url,
          as: as,
          options: options,
          __N: true,
          idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1
        }, // Most browsers currently ignores this parameter, although they may use it in the future.
        // Passing the empty string here should be safe against future changes to the method.
        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
        '', as);
      }
    }
  }, {
    key: "handleRouteInfoError",
    value: function () {
      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, routeProps, loadErrorFail) {
        var Component, styleSheets, props, _yield$this$fetchComp, routeInfo;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!err.cancelled) {
                  _context2.next = 2;
                  break;
                }

                throw err;

              case 2:
                if (!((0, _routeLoader.isAssetError)(err) || loadErrorFail)) {
                  _context2.next = 6;
                  break;
                }

                Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons
                //  1. Page doesn't exists
                //  2. Page does exist in a different zone
                //  3. Internal error while loading the page
                // So, doing a hard reload is the proper way to deal with this.

                window.location.href = as; // Changing the URL doesn't block executing the current code path.
                // So let's throw a cancellation error stop the routing logic.

                throw buildCancellationError();

              case 6:
                _context2.prev = 6;

                if (!(typeof Component === 'undefined' || typeof styleSheets === 'undefined')) {
                  _context2.next = 14;
                  break;
                }

                ;
                _context2.next = 11;
                return this.fetchComponent('/_error');

              case 11:
                _yield$this$fetchComp = _context2.sent;
                Component = _yield$this$fetchComp.page;
                styleSheets = _yield$this$fetchComp.styleSheets;

              case 14:
                routeInfo = {
                  props: props,
                  Component: Component,
                  styleSheets: styleSheets,
                  err: err,
                  error: err
                };

                if (routeInfo.props) {
                  _context2.next = 26;
                  break;
                }

                _context2.prev = 16;
                _context2.next = 19;
                return this.getInitialProps(Component, {
                  err: err,
                  pathname: pathname,
                  query: query
                });

              case 19:
                routeInfo.props = _context2.sent;
                _context2.next = 26;
                break;

              case 22:
                _context2.prev = 22;
                _context2.t0 = _context2["catch"](16);
                console.error('Error in error page `getInitialProps`: ', _context2.t0);
                routeInfo.props = {};

              case 26:
                return _context2.abrupt("return", routeInfo);

              case 29:
                _context2.prev = 29;
                _context2.t1 = _context2["catch"](6);
                return _context2.abrupt("return", this.handleRouteInfoError(_context2.t1, pathname, query, as, routeProps, true));

              case 32:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[6, 29], [16, 22]]);
      }));

      function handleRouteInfoError(_x6, _x7, _x8, _x9, _x10, _x11) {
        return _handleRouteInfoError.apply(this, arguments);
      }

      return handleRouteInfoError;
    }()
  }, {
    key: "getRouteInfo",
    value: function () {
      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as, resolvedAs, routeProps) {
        var _this2 = this;

        var existingRouteInfo, cachedRouteInfo, routeInfo, Component, __N_SSG, __N_SSP, _require, isValidElementType, dataHref, props;

        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                existingRouteInfo = this.components[route];

                if (!(routeProps.shallow && existingRouteInfo && this.route === route)) {
                  _context3.next = 4;
                  break;
                }

                return _context3.abrupt("return", existingRouteInfo);

              case 4:
                cachedRouteInfo = existingRouteInfo && 'initial' in existingRouteInfo ? undefined : existingRouteInfo;

                if (!cachedRouteInfo) {
                  _context3.next = 9;
                  break;
                }

                _context3.t0 = cachedRouteInfo;
                _context3.next = 12;
                break;

              case 9:
                _context3.next = 11;
                return this.fetchComponent(route).then(function (res) {
                  return {
                    Component: res.page,
                    styleSheets: res.styleSheets,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                  };
                });

              case 11:
                _context3.t0 = _context3.sent;

              case 12:
                routeInfo = _context3.t0;
                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;

                if (false) {}

                _require = __webpack_require__(/*! react-is */ "../node_modules/react-is/index.js"), isValidElementType = _require.isValidElementType;

                if (isValidElementType(Component)) {
                  _context3.next = 18;
                  break;
                }

                throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));

              case 18:
                if (__N_SSG || __N_SSP) {
                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
                    pathname: pathname,
                    query: query
                  }), resolvedAs, __N_SSG, this.locale);
                }

                _context3.next = 21;
                return this._getData(function () {
                  return __N_SSG ? _this2._getStaticData(dataHref) : __N_SSP ? _this2._getServerData(dataHref) : _this2.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
                  {
                    pathname: pathname,
                    query: query,
                    asPath: as
                  });
                });

              case 21:
                props = _context3.sent;
                routeInfo.props = props;
                this.components[route] = routeInfo;
                return _context3.abrupt("return", routeInfo);

              case 27:
                _context3.prev = 27;
                _context3.t1 = _context3["catch"](0);
                return _context3.abrupt("return", this.handleRouteInfoError(_context3.t1, pathname, query, as, routeProps));

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 27]]);
      }));

      function getRouteInfo(_x12, _x13, _x14, _x15, _x16, _x17) {
        return _getRouteInfo.apply(this, arguments);
      }

      return getRouteInfo;
    }()
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data, resetScroll) {
      this.isFallback = false;
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      return this.notify(data, resetScroll);
    }
    /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */

  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._bps = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = _slicedToArray(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = _slicedToArray(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value or `#top`
      // To mirror browsers


      if (hash === '' || hash === 'top') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(asPath) {
      return this.asPath !== asPath;
    }
    /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */

  }, {
    key: "prefetch",
    value: function () {
      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {
        var _this3 = this;

        var asPath,
            options,
            parsed,
            pathname,
            parsedAs,
            localePathResult,
            pages,
            resolvedAs,
            rewrites,
            _yield2,
            rewritesResult,
            route,
            _args4 = arguments;

        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;
                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                pathname = parsed.pathname;

                if (false) {}

                _context4.next = 7;
                return this.pageLoader.getPageList();

              case 7:
                pages = _context4.sent;
                resolvedAs = asPath;

                if (!( true && asPath.startsWith('/'))) {
                  _context4.next = 19;
                  break;
                }

                _context4.next = 12;
                return (0, _routeLoader.getClientBuildManifest)();

              case 12:
                _yield2 = _context4.sent;
                rewrites = _yield2.__rewrites;
                rewritesResult = (0, _resolveRewrites["default"])(addBasePath(addLocale(asPath, this.locale)), pages, rewrites, parsed.query, function (p) {
                  return resolveDynamicRoute(p, pages);
                }, this.locales);
                resolvedAs = delLocale(delBasePath(rewritesResult.asPath), this.locale);

                if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {
                  // if this directly matches a page we need to update the href to
                  // allow the correct page chunk to be loaded
                  pathname = rewritesResult.resolvedHref;
                  parsed.pathname = pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                }

                _context4.next = 21;
                break;

              case 19:
                parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);

                if (parsed.pathname !== pathname) {
                  pathname = parsed.pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                }

              case 21:
                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname); // Prefetch is not supported in development mode because it would trigger on-demand-entries

                if (false) {}

                return _context4.abrupt("return");

              case 24:
                _context4.next = 26;
                return Promise.all([this.pageLoader._isSsg(route).then(function (isSsg) {
                  return isSsg ? _this3._getStaticData(_this3.pageLoader.getDataHref(url, resolvedAs, true, typeof options.locale !== 'undefined' ? options.locale : _this3.locale)) : false;
                }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);

              case 26:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prefetch(_x18) {
        return _prefetch.apply(this, arguments);
      }

      return prefetch;
    }()
  }, {
    key: "fetchComponent",
    value: function () {
      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {
        var cancelled, cancel, componentResult, error;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                cancelled = false;

                cancel = this.clc = function () {
                  cancelled = true;
                };

                _context5.next = 4;
                return this.pageLoader.loadPage(route);

              case 4:
                componentResult = _context5.sent;

                if (!cancelled) {
                  _context5.next = 9;
                  break;
                }

                error = new Error("Abort fetching component for route: \"".concat(route, "\""));
                error.cancelled = true;
                throw error;

              case 9:
                if (cancel === this.clc) {
                  this.clc = null;
                }

                return _context5.abrupt("return", componentResult);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchComponent(_x19) {
        return _fetchComponent.apply(this, arguments);
      }

      return fetchComponent;
    }()
  }, {
    key: "_getData",
    value: function _getData(fn) {
      var _this4 = this;

      var cancelled = false;

      var cancel = function cancel() {
        cancelled = true;
      };

      this.clc = cancel;
      return fn().then(function (data) {
        if (cancel === _this4.clc) {
          _this4.clc = null;
        }

        if (cancelled) {
          var err = new Error('Loading initial props cancelled');
          err.cancelled = true;
          throw err;
        }

        return data;
      });
    }
  }, {
    key: "_getStaticData",
    value: function _getStaticData(dataHref) {
      var _this5 = this;

      var _URL = new URL(dataHref, window.location.href),
          cacheKey = _URL.href;

      if (false) {}

      return fetchNextData(dataHref, this.isSsr).then(function (data) {
        _this5.sdc[cacheKey] = data;
        return data;
      });
    }
  }, {
    key: "_getServerData",
    value: function _getServerData(dataHref) {
      var _this6 = this;

      var _URL2 = new URL(dataHref, window.location.href),
          resourceKey = _URL2.href;

      if (this.sdr[resourceKey]) {
        return this.sdr[resourceKey];
      }

      return this.sdr[resourceKey] = fetchNextData(dataHref, this.isSsr).then(function (data) {
        delete _this6.sdr[resourceKey];
        return data;
      })["catch"](function (err) {
        delete _this6.sdr[resourceKey];
        throw err;
      });
    }
  }, {
    key: "getInitialProps",
    value: function getInitialProps(Component, ctx) {
      var App = this.components['/_app'].Component;

      var AppTree = this._wrapApp(App);

      ctx.AppTree = AppTree;
      return (0, _utils.loadGetInitialProps)(App, {
        AppTree: AppTree,
        Component: Component,
        router: this,
        ctx: ctx
      });
    }
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as, routeProps) {
      if (this.clc) {
        Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);
        this.clc();
        this.clc = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data, resetScroll) {
      return this.sub(data, this.components['/_app'].Component, resetScroll);
    }
  }]);

  return Router;
}();

exports["default"] = Router;
Router.events = (0, _mitt["default"])();

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.formatUrl = formatUrl;

var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "../node_modules/next/dist/next-server/lib/router/utils/querystring.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var slashedProtocols = /https?|ftp|gopher|file/;

function formatUrl(urlObj) {
  var auth = urlObj.auth,
      hostname = urlObj.hostname;
  var protocol = urlObj.protocol || '';
  var pathname = urlObj.pathname || '';
  var hash = urlObj.hash || '';
  var query = urlObj.query || '';
  var host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';

  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? "[".concat(hostname, "]") : hostname);

    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }

  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }

  var search = urlObj.search || query && "?".concat(query) || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = getAssetPathFromRoute; // Translates a logical route into its pages asset path (relative from a common prefix)
// "asset path" being its javascript file, data file, prerendered html,...

function getAssetPathFromRoute(route) {
  var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var path = route === '/' ? '/index' : /^\/index(\/|$)/.test(route) ? "/index".concat(route) : "".concat(route);
  return path + ext;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!************************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;

var _utils = __webpack_require__(/*! ../../utils */ "../node_modules/next/dist/next-server/lib/utils.js");

var _querystring = __webpack_require__(/*! ./querystring */ "../node_modules/next/dist/next-server/lib/router/utils/querystring.js");
/**
* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
* (e.g. `./hello`) then at least base must be.
* Absolute urls are rejected with one exception, in the browser, absolute urls that are on
* the current origin will be parsed as relative
*/


function parseRelativeUrl(url, base) {
  var globalBase = new URL(false ? undefined : (0, _utils.getLocationOrigin)());
  var resolvedBase = base ? new URL(base, globalBase) : globalBase;

  var _URL = new URL(url, resolvedBase),
      pathname = _URL.pathname,
      searchParams = _URL.searchParams,
      search = _URL.search,
      hash = _URL.hash,
      href = _URL.href,
      origin = _URL.origin;

  if (origin !== globalBase.origin) {
    throw new Error("invariant: invalid relative URL, router received ".concat(url));
  }

  return {
    pathname: pathname,
    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
    search: search,
    hash: hash,
    href: href.slice(globalBase.origin.length)
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/path-match.js":
/*!****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/path-match.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _defineProperty = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty */ "../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

exports.__esModule = true;
exports.pathToRegexp = exports["default"] = exports.customRouteMatcherOptions = exports.matcherOptions = void 0;

var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "../node_modules/next/dist/compiled/path-to-regexp/index.js"));

exports.pathToRegexp = pathToRegexp;

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var matcherOptions = {
  sensitive: false,
  delimiter: '/'
};
exports.matcherOptions = matcherOptions;

var customRouteMatcherOptions = _objectSpread(_objectSpread({}, matcherOptions), {}, {
  strict: true
});

exports.customRouteMatcherOptions = customRouteMatcherOptions;

var _default = function _default() {
  var customRoute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return function (path) {
    var keys = [];
    var matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);
    var matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);
    return function (pathname, params) {
      var res = pathname == null ? false : matcher(pathname);

      if (!res) {
        return false;
      }

      if (customRoute) {
        var _iterator = _createForOfIteratorHelper(keys),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var key = _step.value;

            // unnamed params should be removed as they
            // are not allowed to be used in the destination
            if (typeof key.name === 'number') {
              delete res.params[key.name];
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      return _objectSpread(_objectSpread({}, params), res.params);
    };
  };
};

exports["default"] = _default;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _defineProperty = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty */ "../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js");

var _slicedToArray = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

exports.__esModule = true;
exports.matchHas = matchHas;
exports.compileNonPath = compileNonPath;
exports["default"] = prepareDestination;
exports.getSafeParamName = void 0;

var _querystring = __webpack_require__(/*! ./querystring */ "../node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ "../node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "../node_modules/next/dist/compiled/path-to-regexp/index.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // ensure only a-zA-Z are used for param names for proper interpolating
// with path-to-regexp


var getSafeParamName = function getSafeParamName(paramName) {
  var newParamName = '';

  for (var i = 0; i < paramName.length; i++) {
    var charCode = paramName.charCodeAt(i);

    if (charCode > 64 && charCode < 91 || // A-Z
    charCode > 96 && charCode < 123 // a-z
    ) {
        newParamName += paramName[i];
      }
  }

  return newParamName;
};

exports.getSafeParamName = getSafeParamName;

function matchHas(req, has, query) {
  var params = {};
  var allMatch = has.every(function (hasItem) {
    var value;
    var key = hasItem.key;

    switch (hasItem.type) {
      case 'header':
        {
          key = key.toLowerCase();
          value = req.headers[key];
          break;
        }

      case 'cookie':
        {
          value = req.cookies[hasItem.key];
          break;
        }

      case 'query':
        {
          value = query[key];
          break;
        }

      case 'host':
        {
          var _ref = (req == null ? void 0 : req.headers) || {},
              host = _ref.host; // remove port from host if present


          var hostname = host == null ? void 0 : host.split(':')[0].toLowerCase();
          value = hostname;
          break;
        }

      default:
        {
          break;
        }
    }

    if (!hasItem.value && value) {
      params[getSafeParamName(key)] = value;
      return true;
    } else if (value) {
      var matcher = new RegExp("^".concat(hasItem.value, "$"));
      var matches = value.match(matcher);

      if (matches) {
        if (matches.groups) {
          Object.keys(matches.groups).forEach(function (groupKey) {
            var safeKey = getSafeParamName(groupKey);

            if (safeKey && matches.groups[groupKey]) {
              params[safeKey] = matches.groups[groupKey];
            }
          });
        } else {
          params[getSafeParamName(key || 'host')] = matches[0];
        }

        return true;
      }
    }

    return false;
  });

  if (allMatch) {
    return params;
  }

  return false;
}

function compileNonPath(value, params) {
  if (!value.includes(':')) {
    return value;
  }

  for (var _i = 0, _Object$keys = Object.keys(params); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];

    if (value.includes(":".concat(key))) {
      value = value.replace(new RegExp(":".concat(key, "\\*"), 'g'), ":".concat(key, "--ESCAPED_PARAM_ASTERISKS")).replace(new RegExp(":".concat(key, "\\?"), 'g'), ":".concat(key, "--ESCAPED_PARAM_QUESTION")).replace(new RegExp(":".concat(key, "\\+"), 'g'), ":".concat(key, "--ESCAPED_PARAM_PLUS")).replace(new RegExp(":".concat(key, "(?!\\w)"), 'g'), "--ESCAPED_PARAM_COLON".concat(key));
    }
  }

  value = value.replace(/(:|\*|\?|\+|\(|\)|\{|\})/g, '\\$1').replace(/--ESCAPED_PARAM_PLUS/g, '+').replace(/--ESCAPED_PARAM_COLON/g, ':').replace(/--ESCAPED_PARAM_QUESTION/g, '?').replace(/--ESCAPED_PARAM_ASTERISKS/g, '*'); // the value needs to start with a forward-slash to be compiled
  // correctly

  return pathToRegexp.compile("/".concat(value), {
    validate: false
  })(params).substr(1);
}

function prepareDestination(destination, params, query, appendParamsToQuery) {
  var parsedDestination = {}; // clone query so we don't modify the original

  query = Object.assign({}, query);
  var hadLocale = query.__nextLocale;
  delete query.__nextLocale;
  delete query.__nextDefaultLocale;

  if (destination.startsWith('/')) {
    parsedDestination = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
  } else {
    var _URL = new URL(destination),
        pathname = _URL.pathname,
        searchParams = _URL.searchParams,
        hash = _URL.hash,
        hostname = _URL.hostname,
        port = _URL.port,
        protocol = _URL.protocol,
        search = _URL.search,
        href = _URL.href;

    parsedDestination = {
      pathname: pathname,
      query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
      hash: hash,
      protocol: protocol,
      hostname: hostname,
      port: port,
      search: search,
      href: href
    };
  }

  var destQuery = parsedDestination.query;
  var destPath = "".concat(parsedDestination.pathname).concat(parsedDestination.hash || '');
  var destPathParamKeys = [];
  pathToRegexp.pathToRegexp(destPath, destPathParamKeys);
  var destPathParams = destPathParamKeys.map(function (key) {
    return key.name;
  });
  var destinationCompiler = pathToRegexp.compile(destPath, // we don't validate while compiling the destination since we should
  // have already validated before we got to this point and validating
  // breaks compiling destinations with named pattern params from the source
  // e.g. /something:hello(.*) -> /another/:hello is broken with validation
  // since compile validation is meant for reversing and not for inserting
  // params from a separate path-regex into another
  {
    validate: false
  });
  var newUrl; // update any params in query values

  for (var _i2 = 0, _Object$entries = Object.entries(destQuery); _i2 < _Object$entries.length; _i2++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
        key = _Object$entries$_i[0],
        strOrArray = _Object$entries$_i[1];

    var value = Array.isArray(strOrArray) ? strOrArray[0] : strOrArray;

    if (value) {
      // the value needs to start with a forward-slash to be compiled
      // correctly
      value = compileNonPath(value, params);
    }

    destQuery[key] = value;
  } // add path params to query if it's not a redirect and not
  // already defined in destination query or path


  var paramKeys = Object.keys(params); // remove internal param for i18n

  if (hadLocale) {
    paramKeys = paramKeys.filter(function (name) {
      return name !== 'nextInternalLocale';
    });
  }

  if (appendParamsToQuery && !paramKeys.some(function (key) {
    return destPathParams.includes(key);
  })) {
    var _iterator = _createForOfIteratorHelper(paramKeys),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _key = _step.value;

        if (!(_key in destQuery)) {
          destQuery[_key] = params[_key];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  try {
    newUrl = destinationCompiler(params);

    var _newUrl$split = newUrl.split('#'),
        _newUrl$split2 = _slicedToArray(_newUrl$split, 2),
        _pathname = _newUrl$split2[0],
        _hash = _newUrl$split2[1];

    parsedDestination.pathname = _pathname;
    parsedDestination.hash = "".concat(_hash ? '#' : '').concat(_hash || '');
    delete parsedDestination.search;
  } catch (err) {
    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
      throw new Error("To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match");
    }

    throw err;
  } // Query merge order lowest priority to highest
  // 1. initial URL query values
  // 2. path segment values
  // 3. destination specified query values


  parsedDestination.query = _objectSpread(_objectSpread({}, query), parsedDestination.query);
  return {
    newUrl: newUrl,
    parsedDestination: parsedDestination
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;

function searchParamsToUrlQuery(searchParams) {
  var query = {};
  searchParams.forEach(function (value, key) {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}

function stringifyUrlQueryParam(param) {
  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
    return String(param);
  } else {
    return '';
  }
}

function urlQueryToSearchParams(urlQuery) {
  var result = new URLSearchParams();
  Object.entries(urlQuery).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    if (Array.isArray(value)) {
      value.forEach(function (item) {
        return result.append(key, stringifyUrlQueryParam(item));
      });
    } else {
      result.set(key, stringifyUrlQueryParam(value));
    }
  });
  return result;
}

function assign(target) {
  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    searchParamsList[_key - 1] = arguments[_key];
  }

  searchParamsList.forEach(function (searchParams) {
    Array.from(searchParams.keys()).forEach(function (key) {
      return target["delete"](key);
    });
    searchParams.forEach(function (value, key) {
      return target.append(key, value);
    });
  });
  return target;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _toArray = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/toArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/toArray.js");

exports.__esModule = true;
exports["default"] = resolveRewrites;

var _pathMatch = _interopRequireDefault(__webpack_require__(/*! ./path-match */ "../node_modules/next/dist/next-server/lib/router/utils/path-match.js"));

var _prepareDestination = _interopRequireWildcard(__webpack_require__(/*! ./prepare-destination */ "../node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js"));

var _normalizeTrailingSlash = __webpack_require__(/*! ../../../../client/normalize-trailing-slash */ "../node_modules/next/dist/client/normalize-trailing-slash.js");

var _normalizeLocalePath = __webpack_require__(/*! ../../i18n/normalize-locale-path */ "../node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js");

var _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ "../node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var _router = __webpack_require__(/*! ../router */ "../node_modules/next/dist/next-server/lib/router/router.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var customRouteMatcher = (0, _pathMatch["default"])(true);

function resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {
  var matchedPage = false;
  var parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(asPath);
  var fsPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _normalizeLocalePath.normalizeLocalePath)((0, _router.delBasePath)(parsedAs.pathname), locales).pathname);
  var resolvedHref;

  var handleRewrite = function handleRewrite(rewrite) {
    var matcher = customRouteMatcher(rewrite.source);
    var params = matcher(parsedAs.pathname);

    if (rewrite.has && params) {
      var hasParams = (0, _prepareDestination.matchHas)({
        headers: {
          host: document.location.hostname
        },
        cookies: Object.fromEntries(document.cookie.split('; ').map(function (item) {
          var _item$split = item.split('='),
              _item$split2 = _toArray(_item$split),
              key = _item$split2[0],
              value = _item$split2.slice(1);

          return [key, value.join('=')];
        }))
      }, rewrite.has, parsedAs.query);

      if (hasParams) {
        Object.assign(params, hasParams);
      } else {
        params = false;
      }
    }

    if (params) {
      if (!rewrite.destination) {
        // this is a proxied rewrite which isn't handled on the client
        return true;
      }

      var destRes = (0, _prepareDestination["default"])(rewrite.destination, params, query, true);
      parsedAs = destRes.parsedDestination;
      asPath = destRes.newUrl;
      Object.assign(query, destRes.parsedDestination.query);
      fsPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _normalizeLocalePath.normalizeLocalePath)((0, _router.delBasePath)(asPath), locales).pathname);

      if (pages.includes(fsPathname)) {
        // check if we now match a page as this means we are done
        // resolving the rewrites
        matchedPage = true;
        resolvedHref = fsPathname;
        return true;
      } // check if we match a dynamic-route, if so we break the rewrites chain


      resolvedHref = resolveHref(fsPathname);

      if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
        matchedPage = true;
        return true;
      }
    }
  };

  var finished = false;

  for (var i = 0; i < rewrites.beforeFiles.length; i++) {
    var rewrite = rewrites.beforeFiles[i];

    if (handleRewrite(rewrite)) {
      finished = true;
      break;
    }
  }

  if (!pages.includes(fsPathname)) {
    if (!finished) {
      for (var _i = 0; _i < rewrites.afterFiles.length; _i++) {
        var _rewrite = rewrites.afterFiles[_i];

        if (handleRewrite(_rewrite)) {
          finished = true;
          break;
        }
      }
    } // check dynamic route before processing fallback rewrites


    if (!finished) {
      resolvedHref = resolveHref(fsPathname);
      matchedPage = pages.includes(resolvedHref);
      finished = matchedPage;
    }

    if (!finished) {
      for (var _i2 = 0; _i2 < rewrites.fallback.length; _i2++) {
        var _rewrite2 = rewrites.fallback[_i2];

        if (handleRewrite(_rewrite2)) {
          finished = true;
          break;
        }
      }
    }
  }

  return {
    asPath: asPath,
    parsedAs: parsedAs,
    matchedPage: matchedPage,
    resolvedHref: resolvedHref
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  var re = routeRegex.re,
      groups = routeRegex.groups;
  return function (pathname) {
    var routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    var decode = function decode(param) {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        var err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    var params = {};
    Object.keys(groups).forEach(function (slugName) {
      var g = groups[slugName];
      var m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {
          return decode(entry);
        }) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function parseParameter(param) {
  var optional = param.startsWith('[') && param.endsWith(']');

  if (optional) {
    param = param.slice(1, -1);
  }

  var repeat = param.startsWith('...');

  if (repeat) {
    param = param.slice(3);
  }

  return {
    key: param,
    repeat: repeat,
    optional: optional
  };
}

function getRouteRegex(normalizedRoute) {
  var segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  var groups = {};
  var groupIndex = 1;
  var parameterizedRoute = segments.map(function (segment) {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      var _parseParameter = parseParameter(segment.slice(1, -1)),
          key = _parseParameter.key,
          optional = _parseParameter.optional,
          repeat = _parseParameter.repeat;

      groups[key] = {
        pos: groupIndex++,
        repeat: repeat,
        optional: optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return "/".concat(escapeRegex(segment));
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }

  return {
    re: new RegExp("^".concat(parameterizedRoute, "(?:/)?$")),
    groups: groups
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/lib/utils.js":
/*!**********************************************************!*\
  !*** ../node_modules/next/dist/next-server/lib/utils.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/regenerator */ "../node_modules/next/node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator */ "../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js");

exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "../node_modules/next/dist/next-server/lib/router/utils/format-url.js");
/**
* Utils
*/


function execOnce(fn) {
  var used = false;
  var result;
  return function () {
    if (!used) {
      used = true;
      result = fn.apply(void 0, arguments);
    }

    return result;
  };
}

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

function loadGetInitialProps(_x, _x2) {
  return _loadGetInitialProps.apply(this, arguments);
}

function _loadGetInitialProps() {
  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {
    var _App$prototype, message, res, props, _message;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (false) {}

            if (!((_App$prototype = App.prototype) != null && _App$prototype.getInitialProps)) {
              _context.next = 4;
              break;
            }

            message = "\"".concat(getDisplayName(App), ".getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.");
            throw new Error(message);

          case 4:
            // when called from _app `ctx` is nested in `ctx`
            res = ctx.res || ctx.ctx && ctx.ctx.res;

            if (App.getInitialProps) {
              _context.next = 12;
              break;
            }

            if (!(ctx.ctx && ctx.Component)) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return loadGetInitialProps(ctx.Component, ctx.ctx);

          case 9:
            _context.t0 = _context.sent;
            return _context.abrupt("return", {
              pageProps: _context.t0
            });

          case 11:
            return _context.abrupt("return", {});

          case 12:
            _context.next = 14;
            return App.getInitialProps(ctx);

          case 14:
            props = _context.sent;

            if (!(res && isResSent(res))) {
              _context.next = 17;
              break;
            }

            return _context.abrupt("return", props);

          case 17:
            if (props) {
              _context.next = 20;
              break;
            }

            _message = "\"".concat(getDisplayName(App), ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
            throw new Error(_message);

          case 20:
            if (true) {
              if (Object.keys(props).length === 0 && !ctx.ctx) {
                console.warn("".concat(getDisplayName(App), " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps"));
              }
            }

            return _context.abrupt("return", props);

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _loadGetInitialProps.apply(this, arguments);
}

var urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(function (key) {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn("Unknown key passed via urlObject into url.format: ".concat(key));
        }
      });
    }
  }

  return (0, _formatUrl.formatUrl)(url);
}

var SP = typeof performance !== 'undefined';
exports.SP = SP;
var ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "../node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "../node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}
//# sourceMappingURL=denormalize-page-path.js.map

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/construct.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/construct.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "../node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/createClass.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/createClass.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/next/node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "../node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "../node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/toArray.js":
/*!***************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/toArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "../node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "../node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _toArray(arr) {
  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();
}

module.exports = _toArray;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!**************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "../node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "../node_modules/next/node_modules/@babel/runtime/regenerator/index.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/next/node_modules/@babel/runtime/regenerator/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "../node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "../node_modules/react-is/cjs/react-is.development.js":
/*!************************************************************!*\
  !*** ../node_modules/react-is/cjs/react-is.development.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "../node_modules/react-is/index.js":
/*!*****************************************!*\
  !*** ../node_modules/react-is/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "../node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "../node_modules/react/cjs/react.development.js":
/*!******************************************************!*\
  !*** ../node_modules/react/cjs/react.development.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "../node_modules/next/dist/build/polyfills/object-assign.js");

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.2';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
exports.StrictMode = 0xeacc;
exports.Profiler = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
exports.Suspense = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  exports.StrictMode = symbolFor('react.strict_mode');
  exports.Profiler = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  exports.Suspense = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: 0
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error( "setState(...): takes an object of state variables to update or a function which returns an object of state variables." );
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case exports.Profiler:
      return 'Profiler';

    case exports.StrictMode:
      return 'StrictMode';

    case exports.Suspense:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error( "React.cloneElement(...): The argument must be a React element, but you passed " + element + "." );
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (Array.isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      var childrenString = '' + children;

      {
        {
          throw Error( "Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead." );
        }
      }
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error( "React.Children.only expected to receive a single React element child." );
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
      }
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.

    var pending = payload;
    pending._status = Pending;
    pending._result = thenable;
    thenable.then(function (moduleObject) {
      if (payload._status === Pending) {
        var defaultExport = moduleObject.default;

        {
          if (defaultExport === undefined) {
            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
          }
        } // Transition to the next state.


        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = defaultExport;
      }
    }, function (error) {
      if (payload._status === Pending) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });
  }

  if (payload._status === Resolved) {
    return payload._result;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: -1,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (render.displayName == null) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (type.displayName == null) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    if (unstable_observedBits !== undefined) {
      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');
    } // TODO: add a more generic warning for invalid values.


    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case exports.Suspense:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === exports.Fragment) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

{

  try {
    var frozenObject = Object.freeze({});
    /* eslint-disable no-new */

    new Map([[frozenObject, null]]);
    new Set([frozenObject]);
    /* eslint-enable no-new */
  } catch (e) {
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.PureComponent = PureComponent;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useEffect = useEffect;
exports.useImperativeHandle = useImperativeHandle;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.version = ReactVersion;
  })();
}


/***/ }),

/***/ "../node_modules/react/index.js":
/*!**************************************!*\
  !*** ../node_modules/react/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "../node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "../node_modules/regenerator-runtime/runtime.js":
/*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "../packages/editor/lib/index.css":
/*!****************************************!*\
  !*** ../packages/editor/lib/index.css ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/editor/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/editor/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/editor/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/content/html5-video/lib/index.css":
/*!*************************************************************!*\
  !*** ../packages/plugins/content/html5-video/lib/index.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/html5-video/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/html5-video/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/html5-video/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/content/image/lib/index.css":
/*!*******************************************************!*\
  !*** ../packages/plugins/content/image/lib/index.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/image/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/image/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/image/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/content/slate/lib/index.css":
/*!*******************************************************!*\
  !*** ../packages/plugins/content/slate/lib/index.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/slate/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/slate/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/slate/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/content/spacer/lib/index.css":
/*!********************************************************!*\
  !*** ../packages/plugins/content/spacer/lib/index.css ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/spacer/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/spacer/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/spacer/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/content/video/lib/index.css":
/*!*******************************************************!*\
  !*** ../packages/plugins/content/video/lib/index.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/video/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/video/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/content/video/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "../packages/plugins/layout/background/lib/index.css":
/*!***********************************************************!*\
  !*** ../packages/plugins/layout/background/lib/index.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/layout/background/lib/index.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/layout/background/lib/index.css",
      function () {
        content = __webpack_require__(/*! !../../../../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../../../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./index.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!../packages/plugins/layout/background/lib/index.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var C_codes_github_react_builder_azad_node_modules_next_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/node_modules/@babel/runtime/helpers/esm/extends */ "../node_modules/next/node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/styles.css */ "./styles/styles.css");
/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_styles_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _react_page_editor_lib_index_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-page/editor/lib/index.css */ "../packages/editor/lib/index.css");
/* harmony import */ var _react_page_editor_lib_index_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_react_page_editor_lib_index_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _react_page_plugins_background_lib_index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-page/plugins-background/lib/index.css */ "../packages/plugins/layout/background/lib/index.css");
/* harmony import */ var _react_page_plugins_background_lib_index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_background_lib_index_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _react_page_plugins_html5_video_lib_index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-page/plugins-html5-video/lib/index.css */ "../packages/plugins/content/html5-video/lib/index.css");
/* harmony import */ var _react_page_plugins_html5_video_lib_index_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_html5_video_lib_index_css__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _react_page_plugins_spacer_lib_index_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-page/plugins-spacer/lib/index.css */ "../packages/plugins/content/spacer/lib/index.css");
/* harmony import */ var _react_page_plugins_spacer_lib_index_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_spacer_lib_index_css__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _react_page_plugins_video_lib_index_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @react-page/plugins-video/lib/index.css */ "../packages/plugins/content/video/lib/index.css");
/* harmony import */ var _react_page_plugins_video_lib_index_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_video_lib_index_css__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _react_page_plugins_image_lib_index_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @react-page/plugins-image/lib/index.css */ "../packages/plugins/content/image/lib/index.css");
/* harmony import */ var _react_page_plugins_image_lib_index_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_image_lib_index_css__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _react_page_plugins_slate_lib_index_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @react-page/plugins-slate/lib/index.css */ "../packages/plugins/content/slate/lib/index.css");
/* harmony import */ var _react_page_plugins_slate_lib_index_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_react_page_plugins_slate_lib_index_css__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! katex/dist/katex.min.css */ "../node_modules/katex/dist/katex.min.css");
/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_10__);

var _jsxFileName = "C:\\codes\\github\\react-builder-azad\\examples\\pages\\_app.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;


 // import plugin css. We recommend to do that
// where you import the plugin itself,
// but there is a problem currently preventing us from do so,
// but that only applies to this example project
// see https://github.com/vercel/next.js/issues/19717









function MyApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return __jsx(Component, Object(C_codes_github_react_builder_azad_node_modules_next_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, pageProps, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 10
    }
  }));
}

_c = MyApp;
/* harmony default export */ __webpack_exports__["default"] = (MyApp);

var _c;

$RefreshReg$(_c, "MyApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ "../node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ }),

/***/ "./styles/styles.css":
/*!***************************!*\
  !*** ./styles/styles.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/styles.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/styles.css",
      function () {
        content = __webpack_require__(/*! !../../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles.css */ "../node_modules/next/dist/compiled/css-loader/cjs.js?!../node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/styles.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ 0:
/*!*********************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx ../node_modules/next/dist/client/router.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx! */"../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./");
module.exports = __webpack_require__(/*! C:\codes\github\react-builder-azad\node_modules\next\dist\client\router.js */"../node_modules/next/dist/client/router.js");


/***/ })

},[[0,"webpack"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,